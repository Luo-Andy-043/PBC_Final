%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: SL-030920-28760-27.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Akash
%%CreationDate: 3/9/2020
%%BoundingBox: 0 0 288 288
%%HiResBoundingBox: 0 0 288 288
%%CropBox: 0 0 288 288
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.6%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.6 x637 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 27 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator CC 23.0 (Windows)"
   xmp:CreateDate="2020-03-09T18:33:30+05:30"
   xmp:ModifyDate="2020-03-09T18:33:30+05:30"
   xmp:MetadataDate="2020-07-04T15:05:27+05:30"
   xmpMM:OriginalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
   xmpMM:DocumentID="xmp.did:ffb1c2aa-7bc5-094c-a2e9-bf70d4ed9991"
   xmpMM:InstanceID="xmp.iid:4b500095-8b92-ea4e-b8cb-a8903023ec55"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Basic RGB"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">hand drawn chat bubbles and circular oval frames set</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Akash</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>abstract</rdf:li>
     <rdf:li>doodle</rdf:li>
     <rdf:li>hand</rdf:li>
     <rdf:li>drawn</rdf:li>
     <rdf:li>scribble</rdf:li>
     <rdf:li>draw</rdf:li>
     <rdf:li>pen</rdf:li>
     <rdf:li>sketch</rdf:li>
     <rdf:li>mess</rdf:li>
     <rdf:li>messy</rdf:li>
     <rdf:li>grunge</rdf:li>
     <rdf:li>untidy</rdf:li>
     <rdf:li>line</rdf:li>
     <rdf:li>shape</rdf:li>
     <rdf:li>stripe</rdf:li>
     <rdf:li>element</rdf:li>
     <rdf:li>set</rdf:li>
     <rdf:li>pack</rdf:li>
     <rdf:li>collection</rdf:li>
     <rdf:li>rough</rdf:li>
     <rdf:li>pencil</rdf:li>
     <rdf:li>stroke</rdf:li>
     <rdf:li>drawing</rdf:li>
     <rdf:li>outline</rdf:li>
     <rdf:li>dirty</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>design</rdf:li>
     <rdf:li>illustration</rdf:li>
     <rdf:li>texture</rdf:li>
     <rdf:li>frame</rdf:li>
     <rdf:li>decor</rdf:li>
     <rdf:li>ink</rdf:li>
     <rdf:li>black</rdf:li>
     <rdf:li>kids</rdf:li>
     <rdf:li>child</rdf:li>
     <rdf:li>artistic</rdf:li>
     <rdf:li>blot</rdf:li>
     <rdf:li>scrape</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">hand drawn chat bubbles and circular oval frames set</rdf:li>
    </rdf:Alt>
   </dc:description>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="164"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgApAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6354vLrVdQazXXbjQZrA&#xA;XXpixufq/qDiSvrq4HM/uqp0Aqd++Kpz+Weu399YyWF5ci7awihWK4Yq88gIILzus9xydita0XFW&#xA;a4q7FXYq7FXln54an5hSCw0vSpYoYrjlPcOzXEMv7ogAJNCwABDH4Sp7Yqyn8sLzWrvybZSavw+t&#xA;JWJSgk3SP4AzPIWLs1CSwoO1NsVZVirsVdirsVfKf53+avNfl3z35gubzzB5gi0FDa21ta6U01jG&#xA;puoRMiRXDc7dSnoOWkVC7VK7DlRVG/k15zmvP+cgb2CTV9bvrfVNLR7exvqOluWghulWcrIUBiXk&#xA;nJY1+M9q4q+n8VdirsVdir52/wCchvMkWn+eLO0k1S908tpsThLbV5tOhINxIQzwqYkYsU4lufQD&#xA;pxGKtfkX5sn1PzvFaJrF3fQm0keS2uNZW/UFVFWEJuJHPElQDwr+OKvorFXYq7FXYq868++fNe0n&#xA;Vr/SYLS3Sy/Romjv2vIILhZZZRFzRJHX7AYkVG5HXLYQBFtM5kGmP+TvzQ1S21Y6FqtzbSltRW0j&#xA;uLm+huJ/i4Ky8oRGtN2Knj9r4T1qspYxVhjDIbovZcoch2KuxV2KvKPzTvNdtvO2hvZancWdkkaN&#xA;NbRNqfpzMJiaOljaXMRqBT944r0oOpsjya53bz+y1vzzLJp0MuralUX8hkMX+IQHjb0AoYy2NeAo&#xA;2zUAr88nQa7P4t7FeeR9VuL+7uFubaKO4aZ0C/W+SmUMBXjOiftCpC5Q5CY+UfLGo6LLeNd3SXC3&#xA;HARBDOeIWpNfWll6lu2KskxV2KuxV2KsM8++QrrzNdWs0F2tqII2R61q3I1HQHYYqmnknyzJ5c0U&#xA;6fLcfWZHmkneTc7yGtBX5Yqn+KuxV2KuxV4h5p/IHzbq/wCaWpedLHzg+mx3ds0NrH6RmkhJt/SV&#xA;OPKOMxq/xjvX/K+LFUf+V35KeavJfmoalc+aPr2kpaG3awhha3WZ2CmskXN4Rwl9SQMq82ZzyO5x&#xA;V7BirsVdirsVeRfm5+SuseePMMWqWN/a2Cw2qwcpmv2kd1dmApb3NvEiDnt8JNa4qoflV+SXmnyb&#xA;5oGr3uvRXNl6EkD6fbtf8GLkFXP1i5lWop3U/wAcVeyYq7FXYq7FWBebvy+13XPNQ1KDULSHTDZr&#xA;bSWs9nBcuzrKJDX1o3UqQBQn7J7ZZGYAapQJNpRYflT5qh8x22qzappnpW2qvqBjh02BJHicKHHq&#xA;BQVd1WhI7/FUnJHIKpiMRu/N6plLe7FXYq7FXm35k/lprPmnzDZajZnTxbWtusUgvH1ASOwkZyoF&#xA;rcW8YShG9Cx+gZOMqDXKFliFv/zjxr8RsGF7pCm1n9adFgvmDg+nyUGW6lp9g9AO22S8Rj4Re8ZU&#xA;3OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxVjl/8AmD5ZsJ7q3uJLn17QsHRbO6YOV+0IXEfCUr34MaYqmGj+ZNG1iSeLT5zJParC11A8&#xA;ckUkQuE9SISJIqMpZN6EV8cVTPFXYq7FXYqkfmrzjo/lnS5tRvvUnjgdY5ILVRNMGZeQ/dgg/Z3x&#xA;VM7DUbS+hSWB92UM0TUEiEgErInVWWtCD0xVE4q7FXYq7FWL6v8Amf5A0fU7zS9U1y2tL/T445b2&#xA;3kYho0lKBC21N/VTb3GSESWJmAraR+YfkrWNcfQtL1aC71WOFblraLkT6LKrBw1OJHGRTse+AxIU&#xA;SBNMiwMnYq7FXYqlPmnzLaeXNGm1W6t7i7jh41t7OMSztyYL8EZK1oW33xVf5e8wWWu6Xb6japJC&#xA;lyhkS3uFEc6ryKgulWpXjtiqZ4q7FXYq7FWNa5+ZHknQtUGl6xqaWN4QjBZo5VSj14n1eHp02P7W&#xA;SESWJkArWPnzyjqGq/omy1FLnUBLJA0ESyNSSGvqKzBeI48T1ODhK8QT/AydirsVdiqV3/mjQbDU&#xA;BplzeL+kzCLlNPjDS3LQlmX1EgjDyMoKEEhdsNIJCTWP5oeU7+40a3tXuWn15mGnRvazw8lT1SXY&#xA;ypGqClvIwDHkwFQDh4SjjDznXdOS31vW5YbUW5u9XKV9JVSXk0UymWe3ieQFZoXlT1D8XLj+zyyL&#xA;JlP5XQC31W6tAVDWdusEodmmnqnphAZhGkboqAUbmzNsdhir0rFXYq7FXYq+ePzAtdQk1nzK31O3&#xA;nYyXsksh09mb044bVY+cv6LuDKTDJ6fwuwA/mI+FVlX5ZaRexed5ruWzaGD0NUkkkns/QlN1camN&#xA;1maxs2cGCJOTCT4vBgofFXruKuxV2KuxV84fmr9VtfP3nSS91LQYrJ9JsZDbahprXMqM88MQaR4Y&#xA;WkfcMQQ5I5J8Pw1F0eQaJ8ynX5Q/ptvzKuzPeSPbDTYTJBaT2v6OJEEAR4rQ/wClRRsG5JyRT3Y7&#xA;0wT5Jhze65U3OxV2KuxV4B5707Q3/MK9vLi18t3OpweYNKcxXmpXdpdN/oA9EyKZBAsxVf3SBeLh&#xA;asCeqqh+XOlaGPzT0q4to/Lb3cdldnnZapfNeqTe3HNVt5Hkjc/HV1YbNy4mgAxV9DYq7FXYq7FX&#xA;zf8Ane+qjz/dmOy1ZoVggEU1pC0kLIsfJioRYq0YkEtITUU2GwuhyaMnNB/l5cawPzktvrmizWNz&#xA;LfX5uJrr0RG3LmxMbxaerV60/wBI+I0HKnUy+lEfqfTmUOQ7FXYq7FXjH5mXmoW35k29xa2dzdW1&#xA;tYQyXii01S7VxHOziOCKF4LIvuG5uxpQ9wA1keTVPmkv5WJr2l6/bCJbmRdS9M6zPpY0y6SeaOUn&#xA;neXdzeXd4npq/punUb8AGOSkiF29ofyb5WkvLq9fTIGu710ku5itWkaMEJyPsGIp4Ejocpbkfb6V&#xA;pdtO1xbWcEFwylWmjjRHKk1ILKAaVFcVRWKuxV2KuxVJ5vJnk+e6ku59DsJbqYyNNM9tCzu0wQSs&#xA;5K/EXEKBievEeGKq9l5a8u2N82oWWl2lrfOrRtdQwRxylJGDupdVDUZlDHfcjFUxxV2KuxV2KoS4&#xA;0fSLmaSa5sbeeaWMQyyyRI7NGrc1RmYElQw5AdK74bRS1ND0RNTOqpp9suqMgia/EMYuDGBQIZQO&#xA;fEDtXG1pG4EuxV2KuxVLbzyz5bvZmmvNJs7mZ5VneWa3ikYyxoI0kLMpJdUHEN1A2xV1l5Z8uWN3&#xA;9csdKs7W8CsguYbeKOTi7F2XmqhqM7FiPE1xVMsVdirsVdiqVXvlPytfXjX19o1jdXrgK91PbQyS&#xA;kKKAF2UsQB74bKKCy18m+ULS/XULXQ9Pt79GLrdxWsCTBmrUiRUDVNT3xsrwhOMCXYq7FXYqkGoe&#xA;QvJ+o6+uv6hpcN5qqRLAk9xylURoSygROTEKMxNeNa4eIsTEXaHg/LD8voNSg1KDQLOK7tmeS3ZI&#xA;wESSRxI0giH7vnzRTz48hQAGgGHiK8AZPkWTsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQV1rej2kwgubyGGUmnF3VaHsCTsK12rhooJ&#xA;Cta39ldF/q06TenQP6bBqV6dPkfuPhjSgq+BLsVdirsVS6fzJ5dt5rmGfVLSKazT1byJ541eFNvi&#xA;kUtVBuNzh4SjiC2w8z+XdRvTY2Gp213eCFbowQSpI3otx4yUUn4TzWh9xiYkIEgUzwMnYq7FXYql&#xA;t75l8uWLzpfarZ2r2vp/WlmuIozF65pF6gZhx9Q/Zr17YaKLCra65ot3cra2uoW1xctCtysEU0bu&#xA;YHAKyhVJPBgwo3TfGltG4EuxV2KuxVLdf8yaH5es0vdZu0srWSVYElcMQZHBKr8IPZTirtA8x6J5&#xA;gsmvtHulvLRZGhMyBgOagFh8QXpyGKplirsVdirsVS+98w6BYyPFe6naWssfH1I5p442Xn9moZgR&#xA;y7Yqvi1vRprw2MV/bSXqlla1SZGlDJXkCgPKq032xVG4q7FXYq7FUPqGoWen2ct7eyrBawLyllb7&#xA;KjpU0wgWgmlmlatpurWMd/ptwt1Zy1EcyfZPElT18CMSKUEHk8q1viurapdJCbmGK7esSokhlYPK&#xA;siJR03Tb4WXuTxehJuHJoPNkf5aTol1qFkqSRcAjFJRGjckHBlKx0TklPi4ADepqWFIZGeNnuVtr&#xA;sVdirsVfM/nfTB/jDzlBD5YurvUNTkit7b/Sa8hI4mM0MSoHfkYVagLce+1cy4HYbuHMbnZkn5L2&#xA;TWv5hailvoP6Phi06GC4ne49d43RIVaOqngxaRCW2qCO3TIZT6ebPEPVye6ZjuS7FXYq7FXh3nG3&#xA;nh81600l3xjae1m+ox7kSesiI8Zkh9NV43MbsjSoHkLHmqo2Wjk0y5p15AtrAecIx63rTC3e4tYp&#xA;5QksEDxRJbUiE7V9S3+JkEKhOmwCDBLkyjzer5W2OxV2KuxV5Z5yaK58929rPdBraKe3eSyNuZSx&#xA;X0341Cmq71Y+HXbFUL+X8t2/mq0kkgjt0l9f4ISyg0jc1ZFdojv3WvatK0xV67irsVdirsVfMn50&#xA;Raxd/nDFbWtjdBWayhiuENwIpGk4DlVLKeLipejcpeg7Yqv/ACwlMH/OQ2qJEtx9VnutUgSWaS8l&#xA;RgrySrx9W3jhUGnIcZD7VrXFX0xirsVdirsVfPX/ADkLFqM3mq2WNIzElqhUw3yQTmrtXnC7exCs&#xA;F38dqZlYeTiZ+aU/ltr/AJg03zl5T0y2u7u206/WWK/sbiT1Y2dZ569Rx5U4fEqg9B03JyAEFGOR&#xA;BAe/HyVoDXEtxLC0s80kkksrueTCWT1ClRT4Q1KDwAGY3GXK4Aq6J5V0zRbiaayaasyhGSSQuoUG&#xA;qgV3+HoN8TK1EQE4yLJ2KuxV2KsSufyt8m3Pmo+aZ7WRtYLiQy+tIF5LH6akKGAFFpSnQgZPxDVN&#xA;fhi7XeUvyv8AJvlPUJ7/AEWzaG6nj9F5JJXlITlyIXmTTkQK/IYyyGXNMcYjyZXkGbsVdirsVY/q&#xA;3knTNVv5by6uLmsqGMwo6KgBTgaHgZOPGvwcuFTy48t8IkxMbVNI8l6BpV79ftopGvaMPVklkZQW&#xA;AVmSGogjYoqpVI1+EBegAxMkiICeYEuxV2KuxVj9/wCSdKvdcXWJpZhcqwZUT01XkE9OteHqH4fF&#xA;v4Yqv0vyT5b0y9W+trY/XUZ3S4kkkdgZF4MfiYjddjtiqe4q7FXYq7FWF63+T/kHW/OVn5y1GweX&#xA;zBYyW8ttdLPMgVrVw8JMasEPEr3G/fFVLRPyU/LfQvNw826RpRs9bBmJmSecoWuFKyExO7JuGPQY&#xA;qznFXYq7FXYqwjzh+T/lDzbrI1bV/rJuhCkAWKUInFCWG3EmvxHvlkcpiKDXPEJGyu0L8nvI2iSW&#xA;E9layfWtNna4tbp5WMgZ14srEcQynrQjE5SVjiiGa5W2OxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4L/wA5B+YfOtldeW/0Rrt5pVm9&#xA;zN67adZXPNnR4xHX4+NxxQsViJCyUNQdgFXsukXlzNKY5rxLrjGGrHaywKamnMu7yIa9gvufkqmu&#xA;KuxV2KuxV86/mZ/zkgItQ1Hy5pcVxpV7p95NCmqrNGRKbfnHT0yj0WVl2J6VVumXRx9WieXoy38n&#xA;fz0tvOuo/wCHZbGWK+s7ON21BnMi3DIoDv8A3UIXn9seNdh1yM4VuyhkvZ67lba7FXYq7FXlXn7z&#xA;V5kne/0i1uhpUMckb29/AyRymNJ1iflMbgLGhbkC7IKMOADMcVR3kTzlrk15p2h3kXq2sSSWZ1Sa&#xA;RZZZ7i2Dn45UlkX6w8cYd4d2WrEnamKvR8VdirsVdir58/M7XPMuk+f/ADXcrquq2WjSaTHaW9pB&#xA;LFJ608kQLNYQNT44Qeb9GA5vzAopuiBQaJkglNvypuPzAm8y6Xo/ma8vLu002xOoWWq3DxKLysQh&#xA;kgMS/vZHga8AllMjgMg/mDESqtmULvd7blTa7FXYq7FXlv5o+ZbifVoPKK3EUFlqARbp2NpzPKRQ&#xA;ArPqNpOCp3/uvv6Yqg/yy8yXNh5r1LycLmGWytpvUtopJLJ7tA68irldVu5mAUrxPoD5eCr17FXY&#xA;q7FXYq83/MrUbe6a70e5M8sUSJLG0UMptIZyjtGt1LApm9V2H7pY23JUEbjkqxvybeWGleYvq2jD&#xA;UrWk1ta3cOoxTSPAZ7gI6ag0iN6bTxov1X0SFJpyNMVTf82Pyo1fzc1tNpi2qXVs7MJL69vGRlMi&#xA;uFCBJBGKpU+nQ9gwxV6Boely2KCNolgjjRYookuri4QKuwAWairQCmwxVNcVdirsVdirxHzP/wA4&#xA;s+W9b1691ZNYurZr2V5nhKCTj6h5MgcNG5UH7IJNBtloykNJwglNPyn/ACAs/wAvfMt5rEOrNqEU&#xA;1u1vbW7QiIpzdWZ3cO3MgJxXYUBPjglksJhj4S9ayttdirsVdirz7Xfyzv8AU7+5uEvYY0mdnjSW&#xA;FJeDNcCZj8SfEGVVXg1VBHPriqI0DyDqGn69BfTTwGC1uLm5j9MfEwni9JImj4JGHQGr3C/vJNg2&#xA;2Ks5xV2KuxV2KvH/AMwvym85655g8x6jodxpEVprunQWbwX0LSO80Topkkf05ePGDmqFPEbV+IWR&#xA;mAGqUCSaTzyT5A82aB5hgu57/TG0hbGO2mtbeyVbkypEiELdH956SsnwKTQKAKd8EpAhlGJBeiZB&#xA;m7FXYq7FWJ+Z/JF3rOs2OpW+pvZmzbkYi9+UahU/3cF7bQg7Hcxk4qoaF5I8xaf5ouNZu/Mct9aT&#xA;l+OmN9dEUas3JQiyXs0QI8fT+7FWZ4q7FXYq7FWB+dvy/wBZ17VZbuyvre0he3SL03gjkLyVZXZ/&#xA;UjlUt6TlVehKgkACvLFUqs/yo8yQ+Y7LUZtYtZLG0uhM9stnApljjuPrEPMiPkxjq3Hm7Osh9USf&#xA;sYq9RxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KsL84/mjo2gWwey9DWLpbs2M9nDeW8Mkcq8eYPqN1j5rzH7PemKsj0rzDouqcFsb2&#xA;C4laMSmOGRZKKQp6qSNua1+Y8RiqY4q7FXYq7FWCzfmfDBe36z20cdhp+pLp8l16zFiDEHY+msZZ&#xA;ZEYlmRqfu1LBi3w4qmvlvzm2s6gLGXTpNOm+qm64Tywszr67QholiZy8RCBxLspDLSp5cVWS4q7F&#xA;XYq7FWIecPzEs9CtrgWMC6lqVrJEk1i8ptRxkdI6rM8bRsweaMcQa/FiqI8m+erPzFbW8csQs9Ze&#xA;AXNzpqM9wsKNxZK3AjjjYlJUanUVp2OKsnxV2KuxV2KsX83+eE0GMLZ2Z1W+WQLPZpNHblIhGZZJ&#xA;fUmpGfTXgWXlsGBNAa4aRYXeTPO9v5itA08Cadfsz0083EVw/ppSjloiU+KtQK9Nxsa4kKCGTYEu&#xA;xV2KuxV5r+Zv5uX/AJP1i30yy0hNRkmhExZ5bmM7swKqIbW5TYLU1cH26VnGFtc50hvy2/OPUfNv&#xA;mE6VeafZ2K+k0kbxTXUkkhUA8VSW1gC03ryYHwGGUKCxnZep5W2OxV2KuxVgvnv8z5vKusRabF5d&#xA;v9XL6fc6i9zahfTQW4b92a1NSwAO23IU5dMlGNsJTpLdJ/OkX3mXQNEm0N7Zdet454rv63bOEaSD&#xA;1WjEQIlcxSVik+EcWBwmGyBk3YJcXem67qdxZQ32ktG0mtmS0TSnuZCl0/qNJybhNyMj+pIFVjVA&#xA;1OJHGDYzr8oZ1e7veDQs721ubwwwJCfXEaSEssZKRK6z+pGsdY3DF1o3Oqr03FXYq7FXYq8UvvrL&#xA;+aKmy1KQw61KkEZs5LxI47iV4Fvoonn5RRQNH/fR8Qq/sEOeSrLvywsV+qWOoRzy3EUmk2qJNPZw&#xA;2czjnIoEqpHyQxrGqrGshUDqOhKrPcVdirsVdiryHWpRL5q8wCTUBLArQwi0mLtErCa2bjInp0dS&#xA;XIpIeAqAp+JsVTT8vJpP01Eram97ytBG8Tl1VXjhtz8CniQKPyo0aKOXwV3xV6VirsVdirsVeY+c&#xA;dFnuvNMs6WM8gE1s6zR2PrK5WIf7s+JSUZRwY0HKol+ALkwdmuQ3WeQdIu7PzFazNY3Nspt2idjZ&#xA;yW8YUqW48moioWUFlI5iSgQ+lhkdliN3qOVtjsVdirsVeD/nZa6Hc+dYXuVunmhsolmSzuriAkF5&#xA;CC8cKuG2agPXx2Ay2HJpyVaI/Jyzs7XzZzhu7uWSS3lRop5byZKEq/IvOzL+wNioPv8As4z5LDm9&#xA;wypudirsVdirwj86fLqap+ZOlmTTZdQtJNNaLUZjZ31xHa20bTSysklvcW0fKZKoyj95T7Jqwy2B&#xA;2acg3Y7+V2g+Y7Hzp5UGkeXRpOmqLuXU76O11WFJIZHkURy/W5GQbRj0xI7NU1ApSspEUWMAbD6V&#xA;f6t6sfPh61T6VacuXHfjXevH8MochuH0OA9Hjw2pwpSlBTp/k0xVfirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVf/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:3ae48674-4f64-a047-8d56-5f9b04c01c63"
    stRef:documentID="xmp.did:3ae48674-4f64-a047-8d56-5f9b04c01c63"
    stRef:originalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:28c83b25-d31c-0d44-9a20-fab4840af1fb"
      stEvt:when="2019-02-16T15:08:04+05:30"
      stEvt:softwareAgent="Adobe Illustrator CC 23.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:ffb1c2aa-7bc5-094c-a2e9-bf70d4ed9991"
      stEvt:when="2020-03-09T18:33:30+05:30"
      stEvt:softwareAgent="Adobe Illustrator CC 23.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0c586dd7-d7e8-8c42-a9bd-fc420f1931b8"
      stEvt:when="2020-07-04T14:57:52+05:30"
      stEvt:softwareAgent="Adobe Bridge CC 2018 (Windows)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:4b500095-8b92-ea4e-b8cb-a8903023ec55"
      stEvt:when="2020-07-04T15:05:27+05:30"
      stEvt:softwareAgent="Adobe Bridge CC 2018 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="4.000000"
    stDim:h="4.000000"
    stDim:unit="Inches"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -288 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 288 li
288 288 li
288 0 li
cp
clp
288 288 mo
.000244141 288 li
.000244141 .000244141 li
288 .000244141 li
288 288 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
63.8611 60.2131 mo
63.8528 60.2122 63.845 60.2112 63.8367 60.2102 cv
63.8333 60.2097 63.8298 60.2092 63.8269 60.2087 cv
63.8381 60.2102 63.8499 60.2117 63.8611 60.2131 cv
63.8611 60.2131 li
63.8611 60.2131 li
cp
75.8723 96.1936 mo
75.8513 96.2024 75.8303 96.2112 75.8093 96.22 cv
75.8303 96.2112 75.8513 96.2024 75.8723 96.1936 cv
75.8723 96.1936 li
75.8723 96.1936 li
cp
35.2151 95.7039 mo
35.241 95.7146 35.2668 95.7253 35.2927 95.7361 cv
35.2668 95.7253 35.241 95.7146 35.2151 95.7039 cv
35.2151 95.7039 li
35.2151 95.7039 li
cp
30.4045 92.9167 mo
30.4343 92.9392 30.4641 92.9622 30.4939 92.9851 cv
30.4636 92.9626 30.4343 92.9397 30.4045 92.9167 cv
30.4045 92.9167 li
30.4045 92.9167 li
cp
25.1931 84.0403 mo
25.1965 84.0637 25.2 84.0876 25.2034 84.1111 cv
25.2 84.0876 25.1965 84.0637 25.1931 84.0403 cv
25.1931 84.0403 li
25.1931 84.0403 li
cp
34.4739 68.8835 mo
34.449 68.9026 34.4241 68.9221 34.3987 68.9407 cv
34.4236 68.9216 34.449 68.9026 34.4739 68.8835 cv
34.4739 68.8835 li
34.4739 68.8835 li
cp
45.2493 63.072 mo
45.5574 62.9514 45.866 62.8318 46.1731 62.7112 cv
46.4363 62.6082 46.7112 62.532 46.9792 62.4431 cv
47.8484 62.1541 48.7161 61.8645 49.5852 61.5764 cv
49.9631 61.4509 50.3503 61.3494 50.7332 61.2419 cv
51.2996 61.0818 51.8689 60.9333 52.4412 60.7957 cv
53.4915 60.5461 54.553 60.344 55.6213 60.1907 cv
55.6062 60.2263 55.5935 60.2629 55.5833 60.2996 cv
55.5149 60.5447 55.5496 60.8127 55.679 61.0315 cv
55.7898 61.2214 56.0173 61.4353 56.2454 61.468 cv
56.9436 61.5671 57.6418 61.6614 58.3386 61.7605 cv
59.0847 61.8669 59.8284 61.9924 60.5745 62.1028 cv
62.01 62.3167 63.4387 62.5627 64.8582 62.8723 cv
67.6223 63.4753 70.3401 64.2639 72.9534 65.3523 cv
74.9192 66.2014 76.8069 67.24 78.5188 68.53 cv
79.9773 69.679 81.2834 71.0105 82.427 72.47 cv
83.405 73.7615 84.2605 75.1335 84.9099 76.6208 cv
85.3264 77.6472 85.6321 78.7122 85.8005 79.8069 cv
85.9172 80.8093 85.9138 81.822 85.7976 82.824 cv
85.6047 84.1516 85.2424 85.4373 84.7317 86.6785 cv
84.4382 87.3547 84.1145 88.0139 83.7615 88.6609 cv
83.6145 88.9285 83.4504 89.1882 83.2937 89.45 cv
83.1292 89.7249 82.9641 89.9998 82.7991 90.2747 cv
82.4709 90.821 82.0969 91.3469 81.7107 91.8542 cv
81.3875 92.2678 81.052 92.6697 80.6902 93.051 cv
80.3044 93.4543 79.8831 93.8245 79.4475 94.1721 cv
78.303 95.0305 77.033 95.6965 75.72 96.2571 cv
75.2371 96.4578 74.7488 96.6526 74.2512 96.8108 cv
73.8469 96.9397 73.4417 97.0691 73.0378 97.198 cv
72.7781 97.2805 72.5173 97.363 72.2571 97.4465 cv
71.9807 97.5339 71.6868 97.5842 71.4045 97.6521 cv
70.844 97.7888 70.2869 97.9402 69.7175 98.0398 cv
69.0422 98.1555 68.3674 98.2737 67.6921 98.3899 cv
66.8435 98.4871 65.9949 98.5818 65.1462 98.678 cv
64.8269 98.7141 64.5017 98.7234 64.1799 98.7463 cv
63.5896 98.7878 62.9978 98.8289 62.406 98.8694 cv
61.6335 98.9246 60.8567 98.9338 60.0833 98.9602 cv
59.3728 98.9827 58.6638 99.0115 57.9539 99.009 cv
56.8884 99.0066 55.8235 99.0032 54.7571 99.0007 cv
54.5432 98.9998 54.3279 98.9851 54.114 98.9768 cv
53.5208 98.9504 52.9265 98.9255 52.3337 98.8992 cv
51.6404 98.8694 50.948 98.8503 50.2571 98.7903 cv
49.1633 98.6936 48.0706 98.5969 46.9768 98.5012 cv
46.9148 98.4958 46.8542 98.49 46.7927 98.4846 cv
45.6213 98.3181 44.4519 98.1389 43.2815 97.9666 cv
42.9944 97.925 42.7122 97.8708 42.428 97.8147 cv
41.5837 97.6501 40.7434 97.4636 39.9099 97.2532 cv
38.3611 96.8601 36.8337 96.3757 35.3572 95.7629 cv
33.6467 95.0315 32.0134 94.137 30.5295 93.0125 cv
29.5378 92.2288 28.655 91.3298 27.8762 90.3357 cv
27.1628 89.3816 26.5681 88.3416 26.093 87.2498 cv
25.6912 86.2673 25.3762 85.2454 25.2156 84.1936 cv
25.1521 83.6453 25.1311 83.0959 25.1829 82.5442 cv
25.2947 81.8274 25.5051 81.1223 25.7336 80.4358 cv
25.969 79.7302 26.2312 79.0305 26.5178 78.344 cv
27.1467 76.9094 27.968 75.5652 28.9158 74.3191 cv
30.5359 72.2561 32.4475 70.4607 34.5149 68.8523 cv
35.7922 67.8811 37.1238 66.9905 38.5115 66.1838 cv
39.9314 65.3582 41.4089 64.6399 42.9143 63.9851 cv
43.6946 63.6833 44.4714 63.3762 45.2493 63.072 cv
45.2493 63.072 li
45.2493 63.072 li
cp
68.7756 61.5071 mo
66.8103 60.9514 64.8147 60.5232 62.7947 60.2258 cv
62.1238 60.1277 61.4509 60.0295 60.7761 59.947 cv
61.7961 59.9871 62.8162 60.0793 63.8269 60.2087 cv
63.8069 60.2058 63.7874 60.2034 63.7678 60.2004 cv
63.7908 60.2039 63.8137 60.2068 63.8367 60.2102 cv
63.8738 60.2146 63.9109 60.2195 63.948 60.2244 cv
63.9192 60.2209 63.8904 60.217 63.8611 60.2131 cv
65.5002 60.4392 67.1506 60.7288 68.6868 61.3586 cv
68.9089 61.4578 69.1345 61.5603 69.3523 61.675 cv
69.1604 61.6179 68.968 61.5618 68.7756 61.5071 cv
68.7756 61.5071 li
68.7756 61.5071 li
cp
56.9709 58.491 mo
54.4666 58.6594 52.0027 59.1892 49.5935 59.8728 cv
48.5872 60.1575 47.5984 60.5076 46.6047 60.8318 cv
46.3132 60.926 46.0129 61.0076 45.7288 61.1189 cv
45.3542 61.2634 44.9802 61.407 44.6072 61.5515 cv
44.0427 61.7693 43.4797 61.988 42.9158 62.2053 cv
42.3621 62.4192 41.8191 62.6511 41.2776 62.8938 cv
39.0696 63.8816 36.9573 65.0686 34.9739 66.4529 cv
32.9607 67.8591 31.0657 69.4504 29.3777 71.2351 cv
27.7087 73.0007 26.2571 74.9924 25.2351 77.2019 cv
24.9807 77.7507 24.7615 78.3186 24.5515 78.885 cv
24.3279 79.489 24.1135 80.095 23.9343 80.7131 cv
23.7644 81.2966 23.6379 81.8835 23.5588 82.4846 cv
23.4729 83.1423 23.5349 83.8201 23.6257 84.4729 cv
23.7957 85.696 24.1794 86.8772 24.6682 88.0081 cv
25.1443 89.1042 25.741 90.1467 26.4558 91.1057 cv
27.1672 92.0623 27.9778 92.9407 28.8826 93.718 cv
29.8054 94.5095 30.824 95.1882 31.8748 95.7981 cv
32.9377 96.4163 34.0642 96.9158 35.2019 97.3748 cv
36.363 97.845 37.5632 98.2083 38.7683 98.5383 cv
39.989 98.8728 41.2288 99.1326 42.4719 99.3621 cv
42.8225 99.4265 43.1775 99.4695 43.531 99.5198 cv
44.5344 99.6633 45.5383 99.8054 46.5427 99.95 cv
46.8523 99.9944 47.1658 100.013 47.4778 100.04 cv
48.0837 100.091 48.6897 100.142 49.2961 100.195 cv
49.9641 100.251 50.6301 100.311 51.302 100.339 cv
52.3816 100.384 53.4622 100.429 54.5432 100.474 cv
54.7512 100.482 54.9592 100.48 55.1672 100.48 cv
55.7551 100.482 56.3445 100.483 56.9329 100.485 cv
57.6394 100.486 58.3435 100.494 59.0491 100.47 cv
60.0413 100.438 61.0334 100.407 62.0256 100.373 cv
62.3665 100.363 62.7073 100.327 63.0466 100.304 cv
63.6311 100.263 64.2161 100.222 64.8005 100.183 cv
65.636 100.126 66.4685 100.011 67.3005 99.9192 cv
68.1873 99.821 69.0613 99.6584 69.9412 99.509 cv
70.7781 99.3679 71.6008 99.1501 72.4265 98.9543 cv
72.7234 98.8835 73.01 98.7893 73.302 98.6985 cv
73.7917 98.5452 74.282 98.3933 74.7712 98.2395 cv
75.1921 98.1091 75.6042 97.9392 76.0134 97.7781 cv
76.6062 97.5422 77.1907 97.2815 77.7668 97.0032 cv
78.8479 96.4797 79.8606 95.8411 80.8025 95.095 cv
81.7146 94.3728 82.4939 93.5125 83.2102 92.5989 cv
83.6882 91.988 84.1306 91.3542 84.5466 90.7004 cv
84.8445 90.2341 85.1482 89.7727 85.4221 89.2922 cv
86.0291 88.2327 86.5457 87.1199 86.9607 85.9719 cv
87.3816 84.804 87.6433 83.5979 87.7878 82.3665 cv
87.9373 81.0828 87.8562 79.7805 87.6228 78.5134 cv
87.3943 77.2747 86.9631 76.0891 86.4407 74.946 cv
85.9446 73.8582 85.3289 72.8323 84.6423 71.8542 cv
83.9309 70.8416 83.1482 69.8733 82.2932 68.9778 cv
81.4348 68.0789 80.5002 67.2625 79.5125 66.509 cv
77.9978 65.3533 76.3157 64.4099 74.5857 63.6208 cv
73.2429 63.0095 71.8625 62.4788 70.4597 62.0203 cv
70.5662 61.9172 70.6042 61.759 70.5784 61.6018 cv
70.5496 61.4319 70.3538 61.2766 70.22 61.1902 cv
70.0046 61.0515 69.7942 60.906 69.5779 60.7698 cv
69.0613 60.4456 68.509 60.1599 67.9446 59.9329 cv
66.8113 59.4749 65.6267 59.1702 64.4275 58.9475 cv
63.1794 58.717 61.9167 58.5652 60.6511 58.4778 cv
60.0906 58.4392 59.5291 58.4211 58.9675 58.4211 cv
58.3015 58.4211 57.636 58.446 56.9709 58.491 cv
56.9709 58.491 li
56.9709 58.491 li
cp
0 0 0 rgb
f
179.841 78.6497 mo
179.77 77.6047 179.569 76.5701 179.291 75.5579 cv
179.013 74.5178 178.633 73.5164 178.197 72.5364 cv
177.783 71.5891 177.293 70.6692 176.743 69.7927 cv
176.188 68.9001 175.562 68.0457 174.876 67.2454 cv
174.229 66.4885 173.515 65.803 172.753 65.1658 cv
169.525 62.4656 165.59 60.6912 161.539 59.635 cv
158.323 58.7966 155.002 58.4211 151.676 58.4211 cv
150.674 58.4211 149.678 58.4539 148.676 58.5193 cv
147.326 58.6062 145.982 58.7532 144.648 58.9709 cv
143.684 59.1287 142.726 59.2869 141.768 59.4446 cv
141.235 59.5315 140.707 59.6731 140.178 59.804 cv
139.384 59.9944 138.584 60.1848 137.783 60.3752 cv
137.56 60.4299 137.348 60.5061 137.13 60.5715 cv
136.635 60.7185 136.139 60.8708 135.644 61.0178 cv
135.094 61.1863 134.539 61.3337 134 61.5295 cv
133.102 61.8616 132.198 62.1936 131.3 62.5256 cv
129.934 63.0266 128.611 63.6306 127.304 64.2732 cv
123.483 66.1565 119.928 68.6116 116.902 71.6218 cv
116.139 72.384 115.421 73.1897 114.762 74.0442 cv
114.142 74.8552 113.581 75.6936 113.135 76.6082 cv
112.661 77.5774 112.318 78.5896 112.138 79.6511 cv
112.046 80.1956 111.991 80.74 111.981 81.2952 cv
111.97 81.8503 112.013 82.406 112.084 82.9612 cv
112.351 85.0789 113.096 87.1311 114.213 88.949 cv
114.757 89.8308 115.416 90.6531 116.123 91.4094 cv
116.836 92.1609 117.636 92.8196 118.459 93.4402 cv
120.114 94.6868 121.937 95.7156 123.826 96.5486 cv
124.12 96.679 124.414 96.7986 124.708 96.9187 cv
125.138 97.0925 125.579 97.2561 126.014 97.4031 cv
126.02 97.0984 126.02 96.7932 126.02 96.4885 cv
126.02 96.1946 126.004 95.9006 125.982 95.6067 cv
125.65 95.4812 125.323 95.3562 124.996 95.22 cv
124.931 95.1931 124.871 95.1658 124.806 95.1331 cv
122.873 94.2893 121.023 93.217 119.341 91.9377 cv
118.834 91.5403 118.344 91.1208 117.882 90.6746 cv
117.419 90.2229 116.989 89.7385 116.592 89.2322 cv
115.916 88.3391 115.356 87.3757 114.915 86.3523 cv
114.474 85.2747 114.158 84.1423 113.99 82.988 cv
113.886 82.1282 113.87 81.2683 113.968 80.408 cv
114.093 79.6077 114.305 78.8347 114.605 78.0837 cv
114.823 77.5881 115.073 77.1038 115.35 76.6409 cv
115.639 76.1672 115.96 75.7156 116.298 75.2747 cv
117.043 74.322 117.882 73.4402 118.753 72.5964 cv
119.656 71.7307 120.615 70.9143 121.605 70.1414 cv
123.02 69.0525 124.512 68.0725 126.063 67.1907 cv
127.588 66.3308 129.166 65.5632 130.778 64.8718 cv
131.573 64.5398 132.389 64.2512 133.2 63.9573 cv
133.63 63.7942 134.066 63.636 134.501 63.4783 cv
134.642 63.4241 134.784 63.3748 134.926 63.3313 cv
135.824 63.0593 136.717 62.7922 137.615 62.5203 cv
137.844 62.4548 138.077 62.3679 138.312 62.3132 cv
138.578 62.2478 138.845 62.1829 139.117 62.1174 cv
139.858 61.9431 140.598 61.7634 141.333 61.5891 cv
141.649 61.5129 141.953 61.4368 142.269 61.3826 cv
143.456 61.1863 144.648 60.9905 145.835 60.7947 cv
147.636 60.5769 149.449 60.4407 151.267 60.4192 cv
153.173 60.3918 155.078 60.5061 156.961 60.7512 cv
159.858 61.1541 162.716 61.8889 165.415 63.01 cv
167.408 63.8704 169.313 64.9319 171.039 66.2439 cv
171.044 66.2493 171.044 66.2546 171.05 66.2546 cv
172.165 67.1365 173.178 68.1272 174.071 69.2322 cv
174.087 69.2542 174.103 69.2756 174.125 69.303 cv
174.136 69.3137 174.141 69.325 174.153 69.3357 cv
175.203 70.7239 176.074 72.2478 176.765 73.843 cv
176.781 73.8811 176.798 73.9192 176.814 73.9573 cv
177.359 75.3074 177.789 76.717 178.001 78.1653 cv
178.072 78.7913 178.099 79.4119 178.077 80.0378 cv
178.061 80.6638 178.023 81.2898 177.947 81.9104 cv
177.843 82.5964 177.675 83.2766 177.457 83.9353 cv
177.244 84.5886 177.01 85.2366 176.749 85.8679 cv
176.357 86.7825 175.9 87.6643 175.306 88.4646 cv
174.914 88.9543 174.468 89.3953 173.978 89.7874 cv
173.015 90.5007 171.942 91.0339 170.843 91.5076 cv
170.837 91.5129 170.826 91.5129 170.821 91.5183 cv
170.816 91.5183 170.81 91.5237 170.81 91.5237 cv
170.908 91.3767 171.006 91.2297 171.093 91.0774 cv
171.344 90.6365 171.539 90.1521 171.703 89.6677 cv
171.883 89.1287 171.98 88.5569 172.035 87.991 cv
172.089 87.4846 172.078 86.9675 172.035 86.4612 cv
171.991 85.906 171.921 85.3508 171.812 84.801 cv
171.784 84.6487 171.752 84.4963 171.724 84.3435 cv
171.698 84.2292 171.637 84.1316 171.556 84.0496 cv
171.43 83.9246 171.262 83.8538 171.082 83.8538 cv
170.707 83.8538 170.429 84.1584 170.418 84.5178 cv
170.407 84.7957 170.385 85.073 170.369 85.3455 cv
170.353 85.634 170.358 85.9226 170.353 86.2107 cv
170.353 86.5105 170.336 86.8044 170.325 87.0984 cv
170.315 87.343 170.298 87.5881 170.271 87.8333 cv
170.228 88.1326 170.168 88.4265 170.092 88.7151 cv
170.015 89.009 169.917 89.2917 169.803 89.5696 cv
169.634 89.9451 169.438 90.3044 169.198 90.6418 cv
168.807 91.1155 168.355 91.5295 167.87 91.9104 cv
167.353 92.3079 166.831 92.6887 166.281 93.0261 cv
166.248 93.0374 166.21 93.0481 166.177 93.0535 cv
165.731 93.1677 165.28 93.282 164.833 93.3909 cv
164.659 93.4348 164.495 93.4729 164.321 93.5051 cv
163.586 93.6414 162.846 93.7776 162.111 93.908 cv
161.36 94.0007 160.614 94.0876 159.863 94.175 cv
159.661 94.2024 159.455 94.2131 159.253 94.2292 cv
158.741 94.262 158.224 94.3 157.713 94.3381 cv
157.462 94.3547 157.212 94.3816 156.961 94.3875 cv
156.57 94.3928 156.188 94.3982 155.797 94.4089 cv
155.138 94.4197 154.479 94.447 153.821 94.4309 cv
153.183 94.4089 152.552 94.3928 151.915 94.3708 cv
151.599 94.3655 151.289 94.3601 150.979 94.3328 cv
150.342 94.2839 149.699 94.2346 149.063 94.1804 cv
148.812 94.1584 148.556 94.1423 148.301 94.1204 cv
147.979 94.0935 147.658 94.0496 147.343 94.0061 cv
146.139 93.8484 144.948 93.6252 143.766 93.342 cv
142.531 93.0427 141.322 92.6614 140.13 92.2263 cv
139.716 92.0735 139.313 91.8943 138.905 91.7253 cv
138.54 91.5784 138.181 91.426 137.816 91.2791 cv
136.983 90.887 136.134 90.5168 135.318 90.0974 cv
133.777 89.3137 132.22 88.5569 130.832 87.5173 cv
130.391 87.1633 129.977 86.7771 129.623 86.3362 cv
129.417 86.0583 129.242 85.7644 129.101 85.449 cv
128.987 85.155 128.91 84.8611 128.856 84.5452 cv
128.823 84.2458 128.823 83.9519 128.856 83.6526 cv
128.894 83.4128 128.959 83.1843 129.03 82.9558 cv
129.079 82.8469 129.052 82.7 128.965 82.6125 cv
128.834 82.4875 128.573 82.4983 128.486 82.6726 cv
128.306 83.0481 128.143 83.4236 128.039 83.8264 cv
127.92 84.3167 127.947 84.8284 128.023 85.3181 cv
128.094 85.7864 128.29 86.2434 128.518 86.6516 cv
128.627 86.8533 128.763 87.033 128.9 87.2126 cv
129.068 87.4358 129.242 87.6428 129.438 87.844 cv
129.765 88.1814 130.146 88.4753 130.522 88.7693 cv
130.941 89.0959 131.387 89.3845 131.844 89.6624 cv
132.28 89.929 132.726 90.1794 133.178 90.4241 cv
133.815 90.762 134.447 91.1208 135.1 91.4314 cv
135.541 91.6438 135.982 91.8557 136.417 92.0681 cv
136.722 92.2151 137.021 92.3674 137.332 92.4983 cv
138.083 92.8142 138.834 93.1296 139.585 93.4456 cv
139.841 93.5544 140.108 93.6467 140.375 93.7395 cv
140.892 93.9299 141.42 94.1042 141.948 94.262 cv
142.949 94.5667 143.968 94.8118 144.996 95.0134 cv
146.041 95.22 147.103 95.3669 148.159 95.4924 cv
148.458 95.5305 148.763 95.5413 149.063 95.5686 cv
149.585 95.6121 150.102 95.6555 150.625 95.699 cv
150.832 95.7156 151.039 95.7429 151.251 95.7483 cv
152.133 95.7751 153.02 95.8025 153.902 95.8298 cv
154.577 95.8513 155.252 95.8245 155.927 95.8132 cv
156.281 95.8079 156.629 95.8025 156.983 95.7971 cv
157.266 95.7917 157.55 95.759 157.832 95.7429 cv
158.534 95.699 159.237 95.6721 159.934 95.5901 cv
160.07 95.574 160.206 95.5574 160.342 95.5466 cv
160.01 95.6555 159.678 95.7698 159.34 95.884 cv
159.095 95.9661 158.845 96.0256 158.6 96.0964 cv
158.105 96.238 157.609 96.3796 157.119 96.5212 cv
156.493 96.7009 155.856 96.8259 155.225 96.9675 cv
154.779 97.0657 154.332 97.1633 153.891 97.2615 cv
153.695 97.3049 153.489 97.3323 153.292 97.3596 cv
152.476 97.49 151.665 97.6208 150.854 97.7458 cv
150.07 97.8274 149.281 97.9148 148.496 97.9963 cv
147.854 98.0618 147.206 98.0999 146.564 98.1379 cv
146.156 98.1653 145.747 98.1921 145.339 98.2195 cv
145.105 98.2361 144.865 98.2302 144.632 98.2361 cv
144.115 98.2522 143.603 98.2629 143.086 98.2742 cv
142.884 98.2795 142.677 98.2903 142.47 98.2849 cv
141.872 98.2683 141.273 98.2522 140.679 98.2361 cv
140.337 98.2302 139.993 98.2361 139.651 98.2034 cv
138.649 98.1213 137.647 98.0344 136.64 97.9529 cv
135.949 97.8601 135.263 97.7625 134.572 97.6643 cv
134.272 97.6262 133.973 97.5828 133.674 97.5393 cv
133.423 97.5066 133.178 97.4465 132.933 97.3977 cv
132.732 97.3596 132.531 97.3215 132.329 97.2776 cv
131.736 97.1633 131.148 97.0491 130.554 96.9348 cv
130.44 96.9128 130.326 96.886 130.211 96.8533 cv
130.146 96.9895 130.075 97.1306 129.999 97.2615 cv
129.847 97.5447 129.678 97.8167 129.509 98.0945 cv
129.449 98.1868 129.389 98.2795 129.329 98.3665 cv
129.504 98.4099 129.683 98.4539 129.858 98.4919 cv
130.184 98.5681 130.511 98.6277 130.838 98.6877 cv
131.044 98.7258 131.251 98.7693 131.464 98.8074 cv
131.768 98.8674 132.073 98.927 132.378 98.9871 cv
132.656 99.0417 132.939 99.0906 133.222 99.1506 cv
133.499 99.2048 133.788 99.2268 134.071 99.2649 cv
134.588 99.3357 135.111 99.4065 135.628 99.4827 cv
135.819 99.5042 136.004 99.5315 136.194 99.5588 cv
136.341 99.5803 136.493 99.6077 136.64 99.6184 cv
137.451 99.6838 138.268 99.7546 139.085 99.8201 cv
139.308 99.8416 139.542 99.8689 139.765 99.8743 cv
140.157 99.8855 140.543 99.8962 140.93 99.907 cv
141.599 99.9236 142.269 99.9563 142.939 99.9451 cv
143.445 99.929 143.946 99.9177 144.452 99.907 cv
144.735 99.9016 145.018 99.907 145.301 99.8909 cv
146.134 99.8362 146.972 99.782 147.805 99.7327 cv
148.486 99.6892 149.161 99.5969 149.841 99.5261 cv
150.2 99.488 150.565 99.4553 150.925 99.4172 cv
151.219 99.3845 151.518 99.3298 151.812 99.2864 cv
152.617 99.1614 153.423 99.0305 154.229 98.9109 cv
154.31 98.9001 154.386 98.8782 154.463 98.8621 cv
154.68 98.8127 154.893 98.7693 155.111 98.7205 cv
155.617 98.6116 156.123 98.5027 156.629 98.3938 cv
156.836 98.345 157.043 98.3123 157.25 98.2522 cv
157.664 98.1379 158.083 98.0183 158.502 97.9041 cv
158.905 97.7893 159.308 97.675 159.71 97.5662 cv
159.967 97.4954 160.217 97.4031 160.467 97.3215 cv
161.164 97.0925 161.855 96.864 162.547 96.6135 cv
162.939 96.4666 163.325 96.325 163.717 96.1838 cv
164.626 95.8459 165.519 95.4543 166.379 95.0134 cv
166.923 94.7356 167.44 94.4197 167.941 94.0769 cv
168.301 93.9626 168.655 93.843 169.013 93.7288 cv
169.433 93.5979 169.852 93.4617 170.266 93.304 cv
171.262 92.9392 172.241 92.5256 173.189 92.0466 cv
174.098 91.5891 174.952 91.0232 175.709 90.3372 cv
176.471 89.6458 177.087 88.7966 177.593 87.9094 cv
178.115 86.9729 178.507 85.9714 178.888 84.9753 cv
179.063 84.5017 179.231 84.0334 179.367 83.5491 cv
179.525 82.9773 179.623 82.4001 179.705 81.8123 cv
179.77 81.3118 179.798 80.8054 179.83 80.2991 cv
179.868 79.7493 179.874 79.1995 179.841 78.6497 cv
cp
f
133.195 94.3655 mo
133.173 94.594 133.156 94.8337 133.108 95.0569 cv
133.026 95.3943 132.939 95.7209 132.824 96.0422 cv
132.699 96.4124 132.563 96.7771 132.4 97.1252 cv
132.378 97.1746 132.356 97.2288 132.329 97.2776 cv
132.285 97.3811 132.242 97.4846 132.187 97.5774 cv
132.1 97.7405 132.013 97.9041 131.926 98.0671 cv
131.79 98.323 131.627 98.5681 131.464 98.8074 cv
131.464 98.8127 li
131.267 99.1013 131.066 99.3845 130.854 99.6731 cv
130.62 99.9885 130.369 100.299 130.124 100.609 cv
129.934 100.844 129.721 101.067 129.52 101.29 cv
129.384 101.442 129.226 101.584 129.079 101.725 cv
128.97 101.829 128.862 101.927 128.747 102.025 cv
128.556 102.182 128.377 102.341 128.176 102.482 cv
128.018 102.602 127.865 102.727 127.702 102.836 cv
127.087 103.239 126.466 103.625 125.829 103.99 cv
125.72 104.055 125.612 104.115 125.497 104.175 cv
125.231 104.317 124.942 104.469 124.632 104.469 cv
124.3 104.469 123.957 104.284 123.788 103.995 cv
123.641 103.745 123.635 103.429 123.712 103.157 cv
123.821 102.754 123.946 102.362 124.049 101.965 cv
124.218 101.306 124.327 100.636 124.43 99.967 cv
124.545 98.9543 124.632 97.9363 124.708 96.9187 cv
124.719 96.7336 124.735 96.5486 124.746 96.363 cv
124.773 95.9548 124.79 95.5413 124.806 95.1331 cv
124.811 94.9641 124.817 94.801 124.822 94.6321 cv
124.844 94.0662 124.904 93.4998 124.882 92.9392 cv
124.877 92.7595 125.024 92.6614 125.171 92.6614 cv
125.29 92.6614 125.405 92.7268 125.437 92.863 cv
125.503 93.1243 125.579 93.3748 125.655 93.6306 cv
125.726 93.8699 125.781 94.1042 125.829 94.3489 cv
125.873 94.5398 125.889 94.7356 125.916 94.926 cv
125.933 95.0842 125.966 95.2473 125.971 95.405 cv
125.976 95.4705 125.982 95.5413 125.982 95.6067 cv
126.004 95.9006 126.02 96.1946 126.02 96.4885 cv
126.02 96.7932 126.02 97.0984 126.014 97.4031 cv
126.009 97.8713 125.998 98.3391 125.971 98.8074 cv
125.927 99.6023 125.862 100.397 125.759 101.186 cv
125.72 101.448 125.677 101.703 125.628 101.959 cv
126.009 101.714 126.379 101.464 126.749 101.208 cv
126.684 101.257 126.624 101.306 126.559 101.355 cv
126.739 101.219 126.934 101.083 127.103 100.93 cv
127.277 100.778 127.468 100.626 127.626 100.457 cv
127.805 100.272 127.996 100.097 128.159 99.9016 cv
128.312 99.7166 128.464 99.5369 128.616 99.3518 cv
128.862 99.0305 129.106 98.7039 129.329 98.3665 cv
129.389 98.2795 129.449 98.1868 129.509 98.0945 cv
129.678 97.8167 129.847 97.5447 129.999 97.2615 cv
130.075 97.1306 130.146 96.9895 130.211 96.8533 cv
130.26 96.7605 130.304 96.6682 130.347 96.5754 cv
130.522 96.1292 130.691 95.6829 130.821 95.22 cv
130.897 94.9426 130.957 94.6541 131.061 94.3816 cv
131.132 94.1858 131.197 93.9734 131.3 93.7937 cv
131.344 93.7229 131.387 93.6521 131.431 93.5872 cv
131.523 93.4348 131.637 93.342 131.763 93.2332 cv
131.975 93.0427 132.242 92.95 132.525 93.032 cv
132.786 93.1023 132.993 93.3093 133.069 93.5759 cv
133.091 93.6521 133.113 93.7288 133.135 93.8103 cv
133.156 93.8865 133.167 94.0227 133.173 94.1204 cv
133.178 94.1965 133.2 94.2893 133.195 94.3655 cv
cp
f
73.8557 124.61 mo
73.8489 124.607 73.8416 124.605 73.8347 124.602 cv
73.8416 124.605 73.8489 124.607 73.8557 124.61 cv
73.8557 124.61 li
73.8557 124.61 li
cp
28.1575 148.227 mo
28.1897 148.24 28.2219 148.254 28.2537 148.267 cv
28.2214 148.254 28.1897 148.241 28.1575 148.227 cv
28.1575 148.227 li
28.1575 148.227 li
cp
38.28 146.843 mo
38.3508 146.852 38.4221 146.862 38.4924 146.871 cv
38.4216 146.862 38.3508 146.852 38.28 146.843 cv
38.28 146.843 li
38.28 146.843 li
cp
23.1487 144.476 mo
23.1633 144.496 23.1785 144.515 23.1926 144.534 cv
23.178 144.515 23.1633 144.496 23.1487 144.476 cv
23.1487 144.476 li
23.1487 144.476 li
cp
25.6414 131.749 mo
25.6082 131.775 25.5745 131.8 25.5408 131.826 cv
25.574 131.801 25.6077 131.775 25.6414 131.749 cv
25.6414 131.749 li
25.6414 131.749 li
cp
32.4309 127.822 mo
32.4138 127.828 32.3972 127.836 32.3806 127.843 cv
32.3972 127.836 32.4138 127.828 32.4309 127.822 cv
32.4309 127.822 li
32.4309 127.822 li
cp
53.6614 122.389 mo
53.9412 122.352 54.2244 122.297 54.5066 122.279 cv
54.9275 122.25 55.3494 122.223 55.7703 122.194 cv
56.3777 122.154 56.9836 122.114 57.5911 122.073 cv
57.8157 122.058 58.0408 122.037 58.2654 122.037 cv
59.3352 122.035 60.4055 122.034 61.4753 122.031 cv
61.9607 122.031 62.4451 122.083 62.929 122.117 cv
63.6038 122.166 64.28 122.213 64.9548 122.261 cv
65.741 122.373 66.5276 122.482 67.3142 122.594 cv
68.0066 122.691 68.6941 122.834 69.3743 122.991 cv
70.4241 123.234 71.4622 123.523 72.4592 123.93 cv
72.6975 124.033 72.9309 124.142 73.1614 124.26 cv
73.3982 124.381 73.6287 124.51 73.8728 124.617 cv
73.8674 124.615 73.8616 124.613 73.8557 124.61 cv
73.8855 124.623 73.9143 124.637 73.9421 124.654 cv
73.9539 124.667 73.9661 124.68 73.9778 124.694 cv
73.9763 124.692 73.9744 124.689 73.9729 124.687 cv
74.1218 124.841 74.3889 124.82 74.5076 124.626 cv
74.5925 124.485 74.5496 124.335 74.4548 124.217 cv
74.3391 124.071 74.1741 124.005 74.0164 123.917 cv
73.8943 123.848 73.7795 123.759 73.6638 123.681 cv
73.5452 123.603 73.4255 123.527 73.3059 123.452 cv
73.0618 123.298 72.8103 123.153 72.554 123.018 cv
72.7434 123.064 72.9324 123.111 73.1208 123.159 cv
74.7229 123.57 76.2966 124.094 77.8259 124.725 cv
80.0535 125.681 82.1843 126.865 84.1155 128.333 cv
85.425 129.367 86.6248 130.529 87.6599 131.839 cv
88.3142 132.712 88.8816 133.647 89.321 134.645 cv
89.6394 135.438 89.8728 136.254 90.0066 137.097 cv
90.0667 137.644 90.0735 138.187 90.0178 138.734 cv
89.947 139.163 89.8391 139.579 89.6824 139.985 cv
89.4412 140.508 89.1462 141 88.8044 141.463 cv
87.9548 142.522 86.9451 143.432 85.8782 144.268 cv
84.8484 145.051 83.7693 145.761 82.6492 146.409 cv
81.5457 147.047 80.4011 147.606 79.2361 148.122 cv
78.3948 148.456 77.551 148.785 76.7087 149.117 cv
76.4573 149.216 76.198 149.291 75.9421 149.376 cv
75.3586 149.568 74.7756 149.759 74.1931 149.95 cv
73.9587 150.028 73.7268 150.108 73.489 150.17 cv
72.9573 150.309 72.4241 150.448 71.8918 150.587 cv
71.4221 150.711 70.9509 150.832 70.4812 150.956 cv
70.2336 151.02 69.9778 151.058 69.7278 151.109 cv
68.7595 151.3 67.7903 151.492 66.8215 151.684 cv
66.825 151.683 66.8279 151.683 66.8313 151.682 cv
66.8254 151.683 66.8191 151.684 66.8132 151.685 cv
66.8215 151.684 66.8298 151.683 66.8381 151.682 cv
65.8992 151.807 64.9617 151.933 64.0242 152.059 cv
63.7493 152.096 63.4705 152.151 63.1946 152.169 cv
62.7893 152.194 62.3826 152.22 61.9773 152.247 cv
61.3582 152.286 60.739 152.325 60.1208 152.365 cv
59.8601 152.382 59.5959 152.413 59.3342 152.414 cv
58.2952 152.415 57.2551 152.417 56.2161 152.418 cv
55.5315 152.419 54.8499 152.399 54.1648 152.377 cv
53.2908 152.351 52.4148 152.341 51.5417 152.296 cv
49.866 152.21 48.1863 152.155 46.5134 152.003 cv
45.4036 151.903 44.2917 151.802 43.1819 151.701 cv
42.302 151.569 41.4207 151.438 40.5398 151.306 cv
39.8894 151.208 39.24 151.12 38.5955 150.991 cv
37.4729 150.765 36.3503 150.54 35.2278 150.314 cv
33.4324 149.954 31.658 149.478 29.9236 148.891 cv
29.3713 148.705 28.8235 148.503 28.2844 148.281 cv
27.1536 147.788 26.0725 147.177 25.0886 146.433 cv
24.3528 145.845 23.7 145.173 23.1165 144.433 cv
22.656 143.817 22.2556 143.164 21.9216 142.472 cv
22.1589 142.664 22.4031 142.849 22.6462 143.032 cv
23.1448 143.406 23.6687 143.742 24.2043 144.06 cv
25.2766 144.695 26.3894 145.251 27.5217 145.767 cv
29.8303 146.821 32.2166 147.706 34.6946 148.266 cv
35.9773 148.555 37.2805 148.758 38.5847 148.925 cv
39.1946 149.002 39.8079 149.062 40.4202 149.115 cv
40.8025 149.15 41.1863 149.189 41.5691 149.209 cv
42.6257 149.264 43.6838 149.32 44.7405 149.375 cv
45.5105 149.416 46.2839 149.421 47.0549 149.437 cv
47.7893 149.454 48.5232 149.474 49.2571 149.467 cv
50.2268 149.458 51.1965 149.449 52.1672 149.44 cv
52.2688 149.439 52.3728 149.426 52.4744 149.419 cv
52.7493 149.402 53.0232 149.384 53.2966 149.365 cv
53.8972 149.326 54.4958 149.288 55.0959 149.248 cv
55.9041 149.196 56.7078 149.076 57.5125 148.979 cv
57.9656 148.925 58.4231 148.884 58.8738 148.811 cv
59.2756 148.745 59.6775 148.679 60.0789 148.615 cv
61.7385 148.344 63.3953 148.054 65.0393 147.694 cv
65.8796 147.511 66.7239 147.342 67.5559 147.124 cv
68.1296 146.974 68.7024 146.826 69.2761 146.677 cv
70.0701 146.47 70.8528 146.208 71.6204 145.92 cv
73.177 145.336 74.6736 144.605 76.0056 143.602 cv
76.3425 143.348 76.6765 143.087 76.9885 142.802 cv
77.2595 142.555 77.512 142.288 77.7605 142.018 cv
78.051 141.701 78.301 141.341 78.5486 140.99 cv
78.7874 140.652 78.9524 140.275 79.1497 139.913 cv
79.342 139.56 79.2991 139.124 79.01 138.834 cv
78.6775 138.501 78.0823 138.478 77.7512 138.834 cv
77.5393 139.063 77.322 139.285 77.0984 139.501 cv
76.9597 139.636 76.8376 139.796 76.7063 139.939 cv
76.5745 140.084 76.4373 140.223 76.2971 140.362 cv
76.0369 140.62 75.7878 140.888 75.5178 141.138 cv
75.2683 141.369 75.0071 141.588 74.741 141.801 cv
73.7209 142.565 72.613 143.18 71.4436 143.689 cv
70.9519 143.891 70.4553 144.076 69.9514 144.248 cv
69.5964 144.368 69.239 144.489 68.8767 144.587 cv
68.3386 144.733 67.801 144.878 67.2615 145.024 cv
66.9675 145.102 66.6746 145.19 66.3767 145.257 cv
65.8367 145.379 65.2961 145.5 64.7571 145.622 cv
63.9333 145.809 63.1072 145.973 62.2786 146.137 cv
61.9143 146.209 61.5496 146.292 61.1824 146.354 cv
60.7341 146.43 60.2859 146.506 59.8386 146.581 cv
59.3474 146.664 58.8562 146.746 58.365 146.828 cv
57.4885 146.939 56.6111 147.047 55.7346 147.156 cv
55.5037 147.185 55.2742 147.2 55.0413 147.216 cv
54.4348 147.257 53.8289 147.297 53.2229 147.338 cv
52.8723 147.362 52.5164 147.405 52.1648 147.408 cv
51.782 147.413 51.3997 147.417 51.0168 147.421 cv
50.4109 147.427 49.8049 147.434 49.1985 147.44 cv
48.9705 147.442 48.7434 147.447 48.5149 147.442 cv
47.7004 147.423 46.8855 147.404 46.0701 147.386 cv
45.6096 147.375 45.1506 147.366 44.6917 147.342 cv
43.8069 147.294 42.9221 147.246 42.0374 147.198 cv
40.8655 147.135 39.6956 147.026 38.531 146.876 cv
37.0291 146.668 35.5334 146.39 34.0681 145.995 cv
32.6316 145.607 31.2219 145.108 29.8489 144.534 cv
28.7747 144.073 27.7156 143.58 26.6814 143.035 cv
25.655 142.495 24.655 141.899 23.7278 141.201 cv
23.1545 140.745 22.6262 140.252 22.1638 139.682 cv
21.9226 139.351 21.7146 139.005 21.5413 138.634 cv
21.4255 138.326 21.3376 138.015 21.281 137.692 cv
21.2786 137.661 21.2761 137.631 21.2737 137.6 cv
21.3743 137.18 21.5071 136.77 21.6672 136.368 cv
21.9656 135.697 22.3362 135.068 22.7756 134.478 cv
23.6067 133.435 24.6125 132.552 25.6614 131.734 cv
26.6907 130.949 27.7532 130.219 28.8748 129.573 cv
29.9973 128.924 31.1663 128.362 32.3572 127.853 cv
33.3928 127.42 34.4583 127.058 35.5149 126.676 cv
35.7517 126.59 35.9871 126.497 36.2273 126.423 cv
36.7078 126.274 37.1887 126.126 37.6692 125.978 cv
38.3962 125.753 39.1204 125.515 39.8557 125.316 cv
40.9104 125.029 41.9656 124.74 43.0203 124.453 cv
43.5178 124.319 44.0222 124.211 44.5232 124.093 cv
45.366 123.895 46.2073 123.696 47.0491 123.498 cv
47.1853 123.466 47.3254 123.442 47.4626 123.416 cv
47.9182 123.33 48.3738 123.242 48.8279 123.155 cv
49.5491 123.018 50.2712 122.885 50.9924 122.743 cv
51.8826 122.626 52.7722 122.508 53.6614 122.389 cv
53.6614 122.389 li
53.6614 122.389 li
cp
61.6848 119.313 mo
61.2781 119.323 60.8718 119.331 60.4641 119.34 cv
59.8435 119.353 59.2229 119.368 58.6028 119.381 cv
58.3406 119.387 58.0764 119.384 57.8147 119.4 cv
56.7771 119.465 55.7395 119.529 54.7004 119.595 cv
53.9973 119.639 53.2991 119.707 52.5989 119.776 cv
51.677 119.865 50.7493 119.932 49.8323 120.061 cv
48.7781 120.209 47.7244 120.358 46.6711 120.506 cv
45.8713 120.618 45.0789 120.795 44.2849 120.947 cv
43.9119 121.019 43.5403 121.091 43.1672 121.161 cv
42.7825 121.234 42.4011 121.347 42.0208 121.44 cv
41.2332 121.631 40.4441 121.81 39.6682 122.041 cv
39.0798 122.214 38.4915 122.387 37.9045 122.562 cv
37.6487 122.637 37.3894 122.707 37.137 122.795 cv
36.1809 123.131 35.2244 123.469 34.2668 123.805 cv
33.8733 123.943 33.4871 124.108 33.0999 124.266 cv
32.4436 124.532 31.7908 124.813 31.1487 125.114 cv
30.0466 125.626 28.9729 126.201 27.9451 126.85 cv
27.323 127.242 26.7205 127.66 26.1311 128.101 cv
25.7214 128.408 25.3098 128.716 24.8997 129.023 cv
24.4802 129.336 24.0857 129.685 23.6829 130.02 cv
23.4065 130.251 23.1389 130.484 22.8748 130.729 cv
22.4504 131.122 22.0237 131.51 21.6228 131.926 cv
21.2009 132.362 20.822 132.832 20.4539 133.315 cv
20.0867 133.795 19.7771 134.321 19.5378 134.877 cv
19.408 135.182 19.2952 135.485 19.2107 135.806 cv
19.1267 136.124 19.0886 136.458 19.0525 136.784 cv
19.0227 137.071 19.0383 137.362 19.0647 137.647 cv
19.1003 138.034 19.1711 138.416 19.281 138.789 cv
19.3508 139.027 19.446 139.259 19.5471 139.487 cv
19.553 139.597 19.5613 139.707 19.5715 139.817 cv
19.6897 141.063 20.1023 142.247 20.656 143.364 cv
21.1926 144.447 21.9304 145.435 22.7542 146.317 cv
23.5706 147.193 24.5378 147.92 25.5608 148.537 cv
26.5999 149.162 27.7117 149.65 28.8489 150.064 cv
30.0071 150.485 31.1882 150.842 32.3826 151.147 cv
33.1272 151.337 33.8782 151.524 34.6326 151.675 cv
35.1311 151.776 35.6306 151.876 36.1306 151.976 cv
36.7317 152.096 37.3318 152.217 37.9333 152.338 cv
38.1833 152.388 38.4343 152.45 38.6868 152.488 cv
39.6775 152.636 40.6677 152.785 41.6584 152.934 cv
42.0662 152.995 42.4729 153.056 42.8806 153.117 cv
43.1531 153.158 43.4265 153.178 43.7004 153.203 cv
44.8376 153.306 45.9744 153.41 47.1111 153.514 cv
47.8225 153.578 48.5388 153.6 49.2512 153.637 cv
50.0569 153.679 50.8616 153.735 51.6672 153.762 cv
52.7483 153.797 53.8279 153.833 54.9084 153.869 cv
55.6008 153.892 56.2917 153.892 56.9836 153.894 cv
57.5876 153.895 58.1912 153.897 58.7961 153.898 cv
59.0188 153.899 59.241 153.907 59.4631 153.894 cv
60.5417 153.832 61.6189 153.771 62.697 153.709 cv
62.9114 153.697 63.1252 153.69 63.3367 153.663 cv
63.8293 153.602 64.3206 153.541 64.8123 153.481 cv
65.3977 153.407 65.9836 153.336 66.5696 153.263 cv
66.8337 153.229 67.0989 153.203 67.3611 153.154 cv
68.4177 152.958 69.4734 152.762 70.5291 152.567 cv
71.3108 152.421 72.0793 152.204 72.8518 152.015 cv
73.2644 151.913 73.6765 151.812 74.0906 151.71 cv
74.4275 151.626 74.76 151.501 75.092 151.398 cv
75.8835 151.152 76.6833 150.925 77.4607 150.634 cv
78.0222 150.424 78.5857 150.212 79.1487 150.002 cv
79.7107 149.791 80.2615 149.568 80.8137 149.328 cv
83.0398 148.364 85.1799 147.173 87.136 145.734 cv
88.1174 145.01 89.0559 144.236 89.9011 143.355 cv
90.3264 142.911 90.7141 142.427 91.0608 141.919 cv
91.4275 141.382 91.7112 140.802 91.9392 140.196 cv
92.1536 139.632 92.238 139.028 92.3088 138.432 cv
92.3889 137.743 92.3245 137.051 92.2273 136.367 cv
92.0515 135.114 91.6345 133.927 91.0847 132.79 cv
90.5442 131.672 89.8245 130.659 89.0427 129.699 cv
88.2908 128.775 87.4431 127.935 86.5417 127.158 cv
84.6443 125.521 82.5022 124.193 80.2449 123.116 cv
77.9436 122.018 75.5188 121.182 73.0383 120.597 cv
71.801 120.305 70.5471 120.079 69.2893 119.894 cv
68.6199 119.795 67.9465 119.71 67.2737 119.635 cv
66.9666 119.6 66.658 119.57 66.3494 119.541 cv
66.0911 119.517 65.8308 119.485 65.571 119.474 cv
64.5564 119.432 63.5413 119.389 62.5276 119.347 cv
62.2737 119.337 62.0159 119.312 61.762 119.312 cv
61.7361 119.312 61.7102 119.312 61.6848 119.313 cv
61.6848 119.313 li
61.6848 119.313 li
cp
f
151.303 155.367 mo
151.321 155.365 151.337 155.363 151.354 155.361 cv
151.337 155.363 151.32 155.365 151.303 155.367 cv
151.303 155.367 li
151.303 155.367 li
cp
150.404 115.23 mo
150.338 115.239 150.271 115.248 150.205 115.257 cv
150.271 115.248 150.338 115.239 150.404 115.23 cv
150.404 115.23 li
150.404 115.23 li
cp
153.977 114.951 mo
155.213 114.929 156.452 114.992 157.679 115.145 cv
158.972 115.329 160.245 115.645 161.508 115.974 cv
162.789 116.308 164.051 116.732 165.276 117.24 cv
166.924 117.953 168.485 118.849 169.917 119.933 cv
171.393 121.092 172.715 122.424 173.872 123.9 cv
174.539 124.775 175.159 125.683 175.726 126.626 cv
176.308 127.592 176.842 128.592 177.29 129.628 cv
177.594 130.365 177.866 131.114 178.088 131.881 cv
178.314 132.668 178.485 133.474 178.604 134.284 cv
178.76 135.536 178.769 136.801 178.616 138.053 cv
178.452 139.141 178.161 140.204 177.744 141.223 cv
177.292 142.246 176.723 143.2 176.049 144.091 cv
174.934 145.505 173.625 146.747 172.209 147.855 cv
171.249 148.59 170.247 149.263 169.203 149.875 cv
168.075 150.536 166.892 151.102 165.689 151.615 cv
165.219 151.811 164.747 151.998 164.271 152.177 cv
163.927 152.306 163.582 152.443 163.231 152.55 cv
162.864 152.663 162.498 152.776 162.131 152.889 cv
161.62 153.047 161.111 153.203 160.6 153.361 cv
160.398 153.423 160.197 153.494 159.991 153.546 cv
159.106 153.768 158.219 153.989 157.332 154.21 cv
157.06 154.279 156.789 154.347 156.517 154.414 cv
156.261 154.478 155.996 154.517 155.737 154.568 cv
154.994 154.714 154.25 154.859 153.506 155.005 cv
153.282 155.05 153.057 155.093 152.834 155.137 cv
152.298 155.242 151.752 155.306 151.211 155.38 cv
151.242 155.375 151.273 155.371 151.303 155.367 cv
149.482 155.608 147.653 155.741 145.815 155.77 cv
144.896 155.784 143.977 155.763 143.06 155.724 cv
142.464 155.699 141.865 155.678 141.271 155.618 cv
139.954 155.485 138.637 155.352 137.32 155.219 cv
136.583 155.099 135.845 154.979 135.109 154.859 cv
134.621 154.779 134.135 154.7 133.646 154.62 cv
133.475 154.593 133.3 154.573 133.13 154.534 cv
132.271 154.343 131.412 154.15 130.553 153.958 cv
130.128 153.863 129.7 153.768 129.275 153.673 cv
128.696 153.543 128.122 153.387 127.55 153.235 cv
125.869 152.787 124.203 152.256 122.597 151.588 cv
122.639 151.605 122.68 151.623 122.721 151.64 cv
120.82 150.837 119.012 149.804 117.368 148.556 cv
116.313 147.734 115.325 146.808 114.496 145.756 cv
113.932 145.008 113.449 144.203 113.073 143.344 cv
112.76 142.584 112.529 141.797 112.403 140.984 cv
112.305 140.196 112.305 139.4 112.401 138.612 cv
112.552 137.625 112.85 136.658 113.223 135.733 cv
113.195 136.085 113.186 136.439 113.195 136.791 cv
113.24 138.504 113.784 140.193 114.726 141.619 cv
115.189 142.319 115.734 142.974 116.331 143.562 cv
116.926 144.149 117.589 144.666 118.256 145.168 cv
118.908 145.66 119.627 146.067 120.336 146.472 cv
121.078 146.898 121.861 147.239 122.625 147.619 cv
122.783 147.697 122.943 147.731 123.115 147.683 cv
123.275 147.64 123.413 147.533 123.496 147.391 cv
123.673 147.088 123.563 146.701 123.268 146.521 cv
122.938 146.32 122.609 146.118 122.28 145.917 cv
121.917 145.695 121.563 145.457 121.205 145.23 cv
120.576 144.831 119.951 144.427 119.357 143.978 cv
118.875 143.599 118.403 143.21 117.952 142.795 cv
117.483 142.363 117.055 141.89 116.659 141.39 cv
116.228 140.814 115.85 140.206 115.556 139.549 cv
115.302 138.912 115.123 138.251 115.019 137.573 cv
114.945 136.897 114.945 136.217 115.023 135.54 cv
115.145 134.762 115.359 134.006 115.653 133.275 cv
116.144 132.15 116.783 131.104 117.524 130.125 cv
118.509 128.871 119.651 127.76 120.904 126.775 cv
121.7 126.168 122.532 125.611 123.392 125.097 cv
123.839 124.831 124.294 124.579 124.752 124.333 cv
125.034 124.18 125.317 124.022 125.606 123.883 cv
126.434 123.484 127.263 123.086 128.093 122.687 cv
129.478 122.021 130.889 121.414 132.294 120.791 cv
132.399 120.744 132.505 120.697 132.611 120.65 cv
133.293 120.368 133.976 120.087 134.659 119.805 cv
135.212 119.576 135.761 119.335 136.324 119.127 cv
137.236 118.789 138.147 118.452 139.058 118.115 cv
139.593 117.918 140.133 117.749 140.676 117.576 cv
141.395 117.348 142.113 117.12 142.832 116.891 cv
143.262 116.754 143.709 116.66 144.147 116.548 cv
144.893 116.357 145.639 116.166 146.385 115.976 cv
146.829 115.863 147.278 115.776 147.726 115.686 cv
148.63 115.504 149.539 115.349 150.453 115.224 cv
151.623 115.074 152.797 114.972 153.977 114.951 cv
153.977 114.951 li
153.977 114.951 li
cp
136.595 116.69 mo
137.281 116.449 137.969 116.205 138.669 116.012 cv
139.587 115.759 140.505 115.506 141.423 115.253 cv
141.741 115.165 142.059 115.077 142.377 114.99 cv
142.554 114.942 142.736 114.907 142.916 114.869 cv
142.848 114.887 142.78 114.905 142.712 114.922 cv
142.13 115.073 141.56 115.275 140.987 115.46 cv
140.495 115.618 140.003 115.777 139.511 115.935 cv
139.331 115.993 139.149 116.046 138.971 116.113 cv
138.11 116.434 137.25 116.757 136.389 117.078 cv
134.965 117.612 133.569 118.22 132.164 118.804 cv
131.58 119.047 131.006 119.309 130.429 119.567 cv
129.625 119.926 128.82 120.285 128.016 120.645 cv
127.998 120.653 127.979 120.661 127.961 120.67 cv
129.791 119.613 131.678 118.663 133.623 117.834 cv
134.602 117.423 135.593 117.041 136.595 116.69 cv
136.595 116.69 li
136.595 116.69 li
cp
151.661 112.189 mo
151.147 112.193 150.634 112.246 150.123 112.307 cv
149.722 112.353 149.317 112.397 148.918 112.466 cv
148.546 112.531 148.174 112.596 147.802 112.66 cv
147.28 112.75 146.757 112.842 146.234 112.931 cv
146.042 112.966 145.848 112.993 145.658 113.035 cv
144.748 113.231 143.837 113.427 142.927 113.622 cv
142.644 113.683 142.36 113.744 142.077 113.805 cv
141.84 113.856 141.606 113.932 141.372 113.996 cv
140.412 114.256 139.45 114.516 138.489 114.777 cv
137.945 114.924 137.411 115.103 136.876 115.281 cv
135.853 115.622 134.842 115.995 133.843 116.401 cv
131.808 117.226 129.831 118.179 127.916 119.254 cv
124.186 121.35 120.609 123.817 117.664 126.943 cv
116.92 127.731 116.225 128.567 115.565 129.426 cv
114.913 130.274 114.304 131.153 113.749 132.069 cv
113.199 132.979 112.715 133.927 112.296 134.905 cv
111.871 135.894 111.531 136.923 111.335 137.984 cv
111.137 139.056 111.149 140.148 111.302 141.224 cv
111.448 142.247 111.802 143.237 112.241 144.169 cv
113.11 146.016 114.514 147.556 116.066 148.856 cv
117.665 150.197 119.482 151.287 121.369 152.168 cv
123.338 153.085 125.429 153.74 127.528 154.29 cv
129.299 154.755 131.094 155.123 132.882 155.519 cv
133.074 155.562 133.274 155.583 133.468 155.615 cv
133.969 155.696 134.471 155.777 134.971 155.859 cv
135.479 155.941 135.986 156.023 136.494 156.104 cv
136.744 156.145 136.998 156.198 137.252 156.223 cv
139.012 156.401 140.77 156.614 142.536 156.714 cv
144.728 156.836 146.927 156.821 149.118 156.657 cv
150.617 156.546 152.117 156.375 153.598 156.112 cv
154.571 155.94 155.544 155.766 156.517 155.594 cv
157.105 155.49 157.684 155.344 158.264 155.211 cv
158.779 155.094 159.294 154.977 159.809 154.86 cv
160.007 154.815 160.208 154.778 160.403 154.722 cv
161.286 154.471 162.168 154.221 163.051 153.971 cv
164.529 153.55 165.966 152.999 167.38 152.394 cv
169.332 151.556 171.182 150.516 172.91 149.281 cv
174.622 148.055 176.216 146.646 177.528 144.993 cv
178.197 144.151 178.775 143.255 179.246 142.287 cv
179.725 141.301 180.082 140.258 180.321 139.188 cv
180.567 138.086 180.663 136.948 180.654 135.82 cv
180.645 134.697 180.491 133.575 180.263 132.476 cv
179.819 130.338 178.965 128.304 177.912 126.397 cv
177.391 125.453 176.813 124.542 176.187 123.663 cv
175.559 122.781 174.889 121.927 174.161 121.125 cv
172.725 119.542 171.059 118.155 169.242 117.03 cv
167.399 115.888 165.378 115.05 163.313 114.402 cv
162.265 114.073 161.192 113.822 160.121 113.579 cv
159.012 113.326 157.889 113.159 156.757 113.063 cv
156.467 113.038 156.177 113.019 155.887 113.005 cv
155.549 112.834 155.193 112.708 154.823 112.609 cv
154.335 112.478 153.836 112.375 153.335 112.299 cv
152.815 112.219 152.29 112.188 151.764 112.188 cv
151.73 112.188 151.696 112.188 151.661 112.189 cv
151.661 112.189 li
151.661 112.189 li
cp
f
169.266 157.734 mo
169.237 157.739 169.208 157.742 169.178 157.747 cv
169.208 157.742 169.237 157.738 169.266 157.734 cv
169.266 157.734 li
169.266 157.734 li
cp
166.735 157.504 mo
166.746 157.509 166.758 157.513 166.769 157.518 cv
166.758 157.513 166.746 157.509 166.735 157.504 cv
166.735 157.504 li
166.735 157.504 li
cp
171.415 153.469 mo
171.473 153.5 171.53 153.532 171.587 153.565 cv
171.656 153.605 171.735 153.634 171.807 153.668 cv
171.905 153.716 172.001 153.767 172.096 153.818 cv
172.268 153.911 172.443 153.998 172.611 154.095 cv
172.767 154.186 172.917 154.29 173.063 154.398 cv
173.224 154.531 173.372 154.677 173.507 154.838 cv
173.571 154.929 173.628 155.023 173.677 155.123 cv
173.706 155.205 173.729 155.288 173.747 155.374 cv
173.751 155.439 173.751 155.504 173.748 155.57 cv
173.733 155.643 173.714 155.715 173.691 155.786 cv
173.652 155.862 173.61 155.936 173.562 156.007 cv
173.46 156.123 173.35 156.227 173.233 156.325 cv
172.907 156.562 172.556 156.752 172.189 156.92 cv
172.021 156.989 171.853 157.055 171.685 157.123 cv
171.606 157.155 171.521 157.177 171.441 157.204 cv
171.301 157.249 171.161 157.295 171.022 157.341 cv
170.829 157.404 170.629 157.447 170.433 157.498 cv
170.052 157.596 169.671 157.675 169.282 157.732 cv
168.747 157.799 168.21 157.822 167.673 157.761 cv
167.376 157.715 167.089 157.642 166.809 157.533 cv
166.6 157.439 166.404 157.328 166.219 157.194 cv
166.112 157.104 166.015 157.009 165.927 156.903 cv
165.883 156.838 165.843 156.773 165.808 156.704 cv
165.786 156.643 165.768 156.581 165.754 156.517 cv
165.753 156.483 165.753 156.45 165.755 156.416 cv
165.764 156.377 165.775 156.337 165.787 156.298 cv
165.829 156.215 165.879 156.138 165.933 156.063 cv
166.107 155.853 166.307 155.67 166.52 155.501 cv
166.888 155.224 167.284 154.975 167.69 154.761 cv
167.888 154.656 168.085 154.545 168.288 154.45 cv
168.526 154.34 168.762 154.225 169.003 154.121 cv
169.724 153.823 170.472 153.6 171.246 153.489 cv
171.302 153.482 171.359 153.475 171.415 153.469 cv
171.415 153.469 li
171.415 153.469 li
cp
171.253 152.25 mo
171.108 152.29 170.982 152.387 170.906 152.517 cv
170.844 152.622 170.821 152.749 170.832 152.872 cv
170.694 152.884 170.557 152.902 170.421 152.921 cv
170.072 152.971 169.731 153.05 169.393 153.148 cv
168.959 153.275 168.543 153.454 168.131 153.635 cv
167.901 153.736 167.679 153.839 167.455 153.953 cv
167.221 154.071 166.994 154.198 166.766 154.328 cv
166.538 154.46 166.317 154.606 166.104 154.76 cv
165.845 154.95 165.599 155.155 165.382 155.39 cv
165.145 155.647 164.942 155.952 164.886 156.302 cv
164.83 156.664 164.931 157.016 165.111 157.33 cv
165.294 157.65 165.576 157.893 165.867 158.11 cv
166.135 158.311 166.45 158.449 166.762 158.568 cv
167.121 158.706 167.501 158.766 167.88 158.813 cv
168.608 158.9 169.353 158.815 170.071 158.697 cv
170.416 158.64 170.754 158.556 171.094 158.478 cv
171.566 158.369 172.025 158.213 172.481 158.052 cv
173.003 157.866 173.515 157.638 173.986 157.345 cv
174.143 157.248 174.288 157.129 174.43 157.011 cv
174.574 156.891 174.685 156.743 174.798 156.594 cv
175.05 156.257 175.151 155.831 175.173 155.418 cv
175.177 155.345 175.167 155.271 175.157 155.198 cv
175.14 155.059 175.12 154.927 175.085 154.792 cv
175.031 154.592 174.94 154.393 174.837 154.213 cv
174.73 154.026 174.585 153.856 174.446 153.693 cv
174.305 153.531 174.146 153.391 173.977 153.261 cv
173.798 153.122 173.617 152.989 173.424 152.871 cv
173.204 152.739 172.967 152.622 172.727 152.53 cv
172.551 152.461 172.37 152.402 172.188 152.347 cv
172.056 152.308 171.917 152.295 171.781 152.278 cv
171.713 152.268 171.644 152.26 171.575 152.252 cv
171.571 152.251 171.567 152.25 171.563 152.25 cv
171.511 152.236 171.459 152.229 171.408 152.229 cv
171.356 152.229 171.305 152.236 171.253 152.25 cv
171.253 152.25 li
171.253 152.25 li
cp
f
174.575 159.384 mo
174.578 159.406 174.581 159.427 174.584 159.449 cv
174.58 159.427 174.577 159.406 174.575 159.384 cv
174.575 159.384 li
174.575 159.384 li
cp
177.485 157.296 mo
177.495 157.319 177.508 157.341 177.523 157.36 cv
177.619 157.486 177.708 157.615 177.803 157.741 cv
177.783 157.715 177.763 157.689 177.742 157.662 cv
177.794 157.729 177.842 157.796 177.887 157.866 cv
177.932 157.934 177.986 157.999 178.039 158.064 cv
178.089 158.136 178.134 158.21 178.175 158.287 cv
178.177 158.293 178.178 158.3 178.18 158.306 cv
178.175 158.328 178.168 158.349 178.162 158.371 cv
178.12 158.451 178.073 158.527 178.022 158.601 cv
177.898 158.745 177.763 158.877 177.617 158.999 cv
177.375 159.175 177.117 159.322 176.844 159.446 cv
176.61 159.536 176.373 159.604 176.127 159.647 cv
175.858 159.673 175.591 159.675 175.323 159.649 cv
175.155 159.62 174.992 159.58 174.832 159.524 cv
174.769 159.492 174.708 159.459 174.649 159.422 cv
174.628 159.403 174.608 159.384 174.589 159.365 cv
174.585 159.358 174.581 159.352 174.577 159.346 cv
174.584 159.318 174.592 159.291 174.601 159.264 cv
174.635 159.199 174.673 159.137 174.715 159.076 cv
174.885 158.873 175.079 158.698 175.286 158.532 cv
175.928 158.051 176.646 157.654 177.382 157.337 cv
177.379 157.338 177.375 157.34 177.371 157.342 cv
177.409 157.326 177.447 157.311 177.485 157.296 cv
177.485 157.296 li
177.485 157.296 li
cp
179.198 156.837 mo
179.198 156.837 179.198 156.837 179.199 156.837 cv
179.2 156.837 179.2 156.837 179.201 156.837 cv
179.2 156.837 179.199 156.837 179.198 156.837 cv
179.198 156.837 li
179.198 156.837 li
cp
179.102 156.444 mo
179.01 156.451 178.919 156.454 178.826 156.457 cv
178.657 156.463 178.487 156.477 178.318 156.492 cv
178.282 156.483 178.247 156.474 178.211 156.465 cv
178.02 156.413 177.815 156.457 177.663 156.581 cv
177.474 156.615 177.286 156.656 177.099 156.702 cv
176.69 156.804 176.304 156.964 175.915 157.122 cv
175.654 157.226 175.4 157.356 175.155 157.495 cv
174.664 157.776 174.168 158.093 173.815 158.543 cv
173.693 158.701 173.587 158.859 173.524 159.05 cv
173.492 159.149 173.463 159.261 173.462 159.365 cv
173.462 159.473 173.479 159.577 173.493 159.683 cv
173.508 159.782 173.562 159.876 173.604 159.965 cv
173.641 160.045 173.722 160.14 173.776 160.203 cv
173.919 160.368 174.101 160.495 174.289 160.603 cv
174.47 160.709 174.679 160.781 174.879 160.846 cv
175.067 160.906 175.263 160.94 175.459 160.968 cv
175.679 161 175.899 161.021 176.123 161.025 cv
176.365 161.029 176.604 160.994 176.842 160.957 cv
177.206 160.901 177.545 160.763 177.883 160.62 cv
178.248 160.465 178.564 160.24 178.875 159.996 cv
179.021 159.882 179.15 159.75 179.27 159.611 cv
179.405 159.454 179.531 159.283 179.625 159.099 cv
179.739 158.876 179.813 158.64 179.828 158.39 cv
179.832 158.307 179.83 158.231 179.821 158.15 cv
179.814 158.049 179.798 157.95 179.775 157.852 cv
179.741 157.757 179.704 157.662 179.66 157.572 cv
179.589 157.421 179.504 157.297 179.398 157.167 cv
179.307 157.056 179.205 156.945 179.09 156.854 cv
179.122 156.849 179.155 156.843 179.188 156.838 cv
179.198 156.839 179.209 156.84 179.219 156.841 cv
179.224 156.842 179.23 156.842 179.235 156.843 cv
179.24 156.843 179.245 156.844 179.25 156.844 cv
179.247 156.844 179.243 156.843 179.24 156.843 cv
179.344 156.846 179.455 156.762 179.446 156.649 cv
179.446 156.648 li
179.439 156.565 179.391 156.478 179.302 156.46 cv
179.247 156.448 179.204 156.442 179.155 156.442 cv
179.138 156.442 179.121 156.443 179.102 156.444 cv
179.102 156.444 li
179.102 156.444 li
cp
f
59.1799 170.655 mo
58.1541 170.66 57.1282 170.701 56.1082 170.783 cv
56.3181 170.748 56.5281 170.713 56.7375 170.684 cv
58.7253 170.433 60.7542 170.27 62.7473 170.526 cv
63.2195 170.596 63.6858 170.696 64.1462 170.818 cv
64.3679 170.876 64.5896 170.952 64.8108 171.028 cv
64.9744 171.086 65.1433 171.133 65.3064 171.185 cv
65.3123 171.185 65.3123 171.185 65.3123 171.191 cv
63.2952 170.806 61.2322 170.655 59.1799 170.655 cv
cp
87.6082 191.371 mo
87.5149 190.088 87.2117 188.829 86.7161 187.64 cv
86.2327 186.463 85.6204 185.361 84.9094 184.306 cv
83.5164 182.242 81.8606 180.365 80.0012 178.716 cv
78.1418 177.061 76.0725 175.627 73.9041 174.408 cv
71.6716 173.155 69.2932 172.135 66.8103 171.511 cv
66.408 171.412 66.0002 171.325 65.592 171.243 cv
65.656 171.22 65.7205 171.179 65.7551 171.115 cv
65.8367 170.969 65.7786 170.818 65.6501 170.724 cv
65.5339 170.637 65.4055 170.596 65.2771 170.55 cv
64.782 170.323 64.2922 170.113 63.7849 169.938 cv
63.1731 169.728 62.532 169.611 61.8904 169.524 cv
61.1501 169.425 60.3982 169.39 59.6521 169.39 cv
59.1511 169.39 58.6555 169.401 58.1599 169.43 cv
57.4724 169.466 56.7903 169.524 56.1082 169.611 cv
55.5198 169.681 54.925 169.757 54.3362 169.833 cv
54.0447 169.867 53.759 169.903 53.4734 169.955 cv
52.908 170.06 52.3425 170.165 51.7776 170.27 cv
51.4509 170.334 51.1189 170.381 50.7981 170.456 cv
50.3552 170.567 49.9177 170.678 49.4807 170.783 cv
48.717 170.975 47.9534 171.15 47.2073 171.377 cv
46.2571 171.675 45.3074 171.966 44.363 172.263 cv
44.0188 172.363 43.6926 172.502 43.3601 172.625 cv
42.7947 172.829 42.2351 173.033 41.6697 173.237 cv
41.0051 173.476 40.364 173.767 39.7229 174.059 cv
39.6296 174.082 39.5364 174.111 39.4431 174.14 cv
39.1633 174.216 38.8835 174.292 38.6038 174.385 cv
37.9333 174.607 37.2629 174.828 36.5989 175.05 cv
36.3772 175.119 36.1555 175.19 35.9402 175.265 cv
35.2112 175.522 34.4944 175.831 33.7659 176.105 cv
33.5266 176.198 33.3342 176.309 33.2063 176.536 cv
33.0779 176.758 33.0432 177.02 33.1072 177.264 cv
33.1189 177.305 33.1306 177.341 33.1477 177.375 cv
32.635 177.69 32.1277 178.016 31.6267 178.355 cv
30.6179 179.036 29.6506 179.777 28.7239 180.575 cv
27.8142 181.368 26.969 182.237 26.2288 183.198 cv
25.8792 183.653 25.5583 184.125 25.2732 184.627 cv
24.9465 185.192 24.6843 185.804 24.4568 186.416 cv
24.0315 187.547 23.8333 188.771 23.7634 189.972 cv
23.6873 191.196 23.8098 192.426 24.0198 193.633 cv
24.2297 194.845 24.5969 196.016 25.075 197.147 cv
25.5354 198.232 26.2229 199.217 26.9924 200.091 cv
27.7737 200.983 28.7297 201.729 29.697 202.405 cv
30.6824 203.093 31.7488 203.676 32.8274 204.206 cv
33.3987 204.486 33.9817 204.754 34.5642 204.999 cv
34.8264 205.115 35.0833 205.22 35.3455 205.331 cv
35.363 205.284 35.3806 205.232 35.3977 205.185 cv
35.5725 204.696 35.7185 204.2 35.8586 203.699 cv
35.6194 203.606 35.3806 203.512 35.1414 203.413 cv
35.1062 203.396 35.0657 203.385 35.0305 203.367 cv
33.1594 202.562 31.3293 201.624 29.7087 200.383 cv
28.9626 199.794 28.2747 199.147 27.6746 198.406 cv
27.1848 197.748 26.7654 197.048 26.4387 196.296 cv
25.9548 195.107 25.6404 193.871 25.4597 192.601 cv
25.3137 191.447 25.2903 190.286 25.4246 189.133 cv
25.5642 188.2 25.7976 187.296 26.1531 186.422 cv
26.3396 185.996 26.5496 185.583 26.7883 185.18 cv
27.0159 184.796 27.2781 184.428 27.5461 184.073 cv
28.5896 182.761 29.8372 181.636 31.1545 180.605 cv
31.9182 180.028 32.7048 179.48 33.5095 178.967 cv
33.97 178.669 34.4363 178.389 34.9084 178.115 cv
35.1472 177.976 35.3806 177.836 35.6252 177.714 cv
35.7419 177.649 35.8586 177.591 35.9749 177.527 cv
36.2371 177.469 36.4939 177.405 36.7502 177.335 cv
37.3098 177.189 37.8635 177.037 38.4172 176.891 cv
39.1868 176.688 39.9563 176.478 40.7258 176.268 cv
41.4949 176.064 42.2585 175.854 43.0222 175.662 cv
43.8499 175.452 44.6775 175.219 45.511 175.032 cv
46.1697 174.886 46.8342 174.746 47.4988 174.601 cv
47.8777 174.513 48.2566 174.42 48.6355 174.35 cv
49.7488 174.146 50.8679 173.942 51.9812 173.744 cv
52.99 173.615 54.0042 173.488 55.0125 173.359 cv
55.5837 173.289 56.1667 173.26 56.7434 173.225 cv
57.5071 173.178 58.2708 173.161 59.0286 173.155 cv
60.4973 173.149 61.9607 173.237 63.4119 173.418 cv
63.4646 173.423 63.511 173.435 63.5637 173.441 cv
64.572 173.593 65.5803 173.796 66.5657 174.059 cv
67.5857 174.327 68.5823 174.677 69.5559 175.079 cv
72.0916 176.169 74.4871 177.597 76.6848 179.27 cv
76.7019 179.287 76.7253 179.299 76.7429 179.317 cv
78.6316 180.803 80.3567 182.499 81.843 184.393 cv
82.8108 185.67 83.697 187.022 84.3499 188.491 cv
84.6936 189.337 84.9382 190.211 85.0784 191.109 cv
85.1716 191.942 85.1775 192.781 85.0842 193.615 cv
84.9734 194.314 84.8044 194.996 84.5481 195.655 cv
84.3088 196.185 84.0232 196.681 83.6794 197.147 cv
83.1257 197.823 82.5017 198.406 81.8201 198.948 cv
81.0505 199.526 80.2288 200.044 79.3894 200.522 cv
78.8357 200.837 78.2703 201.14 77.6873 201.408 cv
76.97 201.74 76.2532 202.078 75.5364 202.411 cv
74.697 202.731 73.8518 203.052 73.0183 203.373 cv
72.7556 203.472 72.4934 203.542 72.2312 203.617 cv
71.6482 203.792 71.0657 203.967 70.4885 204.142 cv
69.6956 204.381 68.8855 204.538 68.075 204.725 cv
67.7371 204.801 67.405 204.894 67.0608 204.958 cv
66.6472 205.034 66.239 205.104 65.825 205.179 cv
64.9568 205.337 64.094 205.506 63.2253 205.634 cv
62.1995 205.786 61.1794 205.931 60.1536 206.083 cv
58.8772 206.223 57.6003 206.363 56.324 206.503 cv
55.7351 206.567 55.1462 206.596 54.5579 206.637 cv
53.6428 206.695 52.7332 206.724 51.8181 206.724 cv
49.9939 206.73 48.175 206.614 46.3679 206.375 cv
45.9309 206.322 45.4939 206.264 45.0564 206.177 cv
44.8118 206.13 44.5725 206.083 44.3279 206.031 cv
43.5876 205.885 42.8474 205.733 42.1072 205.588 cv
41.7341 205.512 41.3669 205.43 40.9998 205.337 cv
40.4631 205.209 39.9329 205.063 39.4026 204.911 cv
39.28 204.877 39.1575 204.842 39.0408 204.801 cv
39.0061 204.847 38.9709 204.894 38.9363 204.941 cv
38.8254 205.086 38.7087 205.226 38.5979 205.366 cv
38.4641 205.535 38.3181 205.693 38.1785 205.85 cv
38.0676 205.972 37.9568 206.101 37.8401 206.223 cv
38.47 206.433 39.1052 206.625 39.7405 206.794 cv
39.7581 206.8 39.7756 206.806 39.7927 206.812 cv
40.405 206.981 41.0168 207.138 41.6409 207.266 cv
42.2239 207.389 42.8005 207.506 43.3777 207.622 cv
43.7917 207.709 44.2053 207.791 44.6252 207.879 cv
45.074 207.972 45.5344 208.024 45.9832 208.088 cv
46.6594 208.187 47.3416 208.269 48.0178 208.339 cv
50.5476 208.59 53.0891 208.56 55.6243 208.391 cv
56.6736 208.322 57.717 208.199 58.7664 208.094 cv
59.2327 208.048 59.699 208.001 60.1653 207.954 cv
60.4861 207.925 60.8005 207.873 61.1155 207.832 cv
62.0774 207.698 63.0271 207.57 63.989 207.441 cv
64.03 207.435 64.0764 207.429 64.1174 207.424 cv
64.158 207.418 64.199 207.412 64.2454 207.406 cv
65.155 207.278 66.0583 207.103 66.9675 206.951 cv
67.7429 206.823 68.5125 206.655 69.282 206.491 cv
69.7131 206.398 70.1501 206.304 70.5818 206.217 cv
70.6633 206.199 70.7449 206.171 70.8264 206.147 cv
71.0886 206.072 71.3508 206.002 71.6135 205.926 cv
72.1614 205.774 72.7092 205.617 73.2571 205.465 cv
73.5017 205.395 73.741 205.302 73.9797 205.215 cv
74.551 205.01 75.1223 204.801 75.6936 204.591 cv
76.0085 204.48 76.323 204.364 76.6321 204.224 cv
77.6174 203.786 78.614 203.373 79.5818 202.889 cv
80.6599 202.347 81.7209 201.74 82.7175 201.058 cv
83.7375 200.359 84.7053 199.56 85.4919 198.605 cv
85.8884 198.127 86.2268 197.619 86.5125 197.072 cv
86.8328 196.465 87.072 195.824 87.2527 195.165 cv
87.4275 194.548 87.5208 193.906 87.5847 193.271 cv
87.6545 192.641 87.6545 192.006 87.6082 191.371 cv
cp
f
42.3694 202.492 mo
42.3518 202.667 42.3518 202.86 42.3113 203.029 cv
42.2937 203.081 42.2761 203.134 42.2644 203.192 cv
42.218 203.355 42.1711 203.501 42.0955 203.658 cv
42.0369 203.781 41.9788 203.897 41.9148 204.02 cv
41.8738 204.101 41.8157 204.183 41.7688 204.264 cv
41.53 204.643 41.2678 204.987 40.9998 205.337 cv
40.9412 205.413 40.8889 205.483 40.8303 205.558 cv
40.6731 205.762 40.5042 205.967 40.3293 206.159 cv
40.137 206.369 39.9387 206.59 39.7405 206.794 cv
39.7346 206.8 39.7346 206.8 39.7288 206.806 cv
39.5071 207.033 39.2859 207.255 39.0525 207.47 cv
38.8137 207.686 38.5803 207.896 38.3416 208.1 cv
37.8342 208.526 37.3098 208.933 36.7795 209.33 cv
36.2957 209.691 35.8059 210.047 35.2986 210.373 cv
35.0305 210.548 34.7683 210.711 34.4944 210.869 cv
34.2263 211.026 33.9524 211.166 33.6726 211.306 cv
33.5793 211.352 33.4802 211.387 33.3811 211.428 cv
33.2878 211.469 33.1887 211.51 33.0837 211.539 cv
32.967 211.568 32.8508 211.597 32.7283 211.603 cv
32.6116 211.609 32.5007 211.597 32.3845 211.568 cv
32.2737 211.539 32.1277 211.446 32.0403 211.364 cv
31.9587 211.282 31.9065 211.189 31.8772 211.078 cv
31.8655 211.02 31.8596 210.962 31.8538 210.904 cv
31.8303 210.723 31.9065 210.513 31.9998 210.356 cv
32.198 210.041 32.3845 209.726 32.571 209.406 cv
32.7283 209.143 32.8567 208.864 32.9963 208.59 cv
33.1189 208.351 33.2356 208.112 33.3459 207.873 cv
33.5969 207.33 33.8357 206.788 34.0691 206.246 cv
34.238 205.832 34.407 205.413 34.5642 204.999 cv
34.7683 204.474 34.9607 203.944 35.1414 203.413 cv
35.1589 203.367 35.1765 203.314 35.1941 203.268 cv
35.2756 203.023 35.3396 202.772 35.4153 202.528 cv
35.4504 202.411 35.4739 202.288 35.5085 202.166 cv
35.532 202.061 35.5671 201.95 35.5842 201.84 cv
35.7009 201.298 35.7942 200.75 35.9167 200.207 cv
35.9343 200.143 35.9866 200.114 36.0393 200.114 cv
36.1033 200.114 36.179 200.161 36.1731 200.242 cv
36.1731 200.546 36.1848 200.843 36.1907 201.14 cv
36.1965 201.408 36.1848 201.671 36.1731 201.939 cv
36.1672 202.061 36.1438 202.183 36.1326 202.306 cv
36.115 202.44 36.1091 202.58 36.0798 202.714 cv
36.0276 202.965 35.9924 203.221 35.9226 203.466 cv
35.8992 203.542 35.8816 203.623 35.8586 203.699 cv
35.7185 204.2 35.5725 204.696 35.3977 205.185 cv
35.3806 205.232 35.363 205.284 35.3455 205.331 cv
35.1531 205.885 34.9431 206.427 34.7278 206.975 cv
34.5002 207.529 34.261 208.076 34.0105 208.619 cv
33.824 209.004 33.6375 209.382 33.4568 209.767 cv
34.1448 209.347 34.7976 208.858 35.4446 208.374 cv
35.7419 208.129 36.0447 207.884 36.3362 207.634 cv
36.5056 207.488 36.6746 207.348 36.8318 207.202 cv
37.0183 207.028 37.199 206.852 37.3855 206.677 cv
37.5427 206.532 37.6946 206.381 37.8401 206.223 cv
37.9568 206.101 38.0676 205.972 38.1785 205.85 cv
38.3181 205.693 38.4641 205.535 38.5979 205.366 cv
38.7087 205.226 38.8254 205.086 38.9363 204.941 cv
38.9709 204.894 39.0061 204.847 39.0408 204.801 cv
39.1458 204.661 39.2566 204.515 39.3557 204.364 cv
39.5364 204.101 39.7112 203.833 39.886 203.565 cv
40.032 203.338 40.1658 203.105 40.3235 202.883 cv
40.4402 202.714 40.5564 202.551 40.6965 202.399 cv
40.7546 202.335 40.8132 202.265 40.8772 202.201 cv
40.9529 202.119 41.0579 202.055 41.1453 201.985 cv
41.2385 201.898 41.3435 201.84 41.4661 201.804 cv
41.5242 201.793 41.5881 201.787 41.6526 201.781 cv
41.7805 201.781 41.9031 201.81 42.0139 201.875 cv
42.218 201.991 42.3928 202.254 42.3694 202.492 cv
cp
f
204.918 87.4534 mo
204.927 87.4739 204.936 87.4944 204.945 87.5149 cv
204.935 87.4944 204.927 87.4739 204.918 87.4534 cv
204.918 87.4534 li
204.918 87.4534 li
cp
256.517 84.4993 mo
256.5 84.5125 256.483 84.5256 256.466 84.5388 cv
256.483 84.5256 256.5 84.5125 256.517 84.4993 cv
256.517 84.4993 li
256.517 84.4993 li
cp
208.863 71.5774 mo
208.537 71.9812 208.223 72.3948 207.919 72.8157 cv
207.59 73.2708 207.261 73.7253 206.932 74.1809 cv
206.39 74.9314 205.895 75.7229 205.426 76.5217 cv
204.799 77.594 204.252 78.7 203.774 79.8474 cv
203.315 80.9519 202.885 82.0842 202.617 83.2522 cv
202.331 84.4919 202.431 85.7937 202.745 87.0168 cv
202.849 87.4241 202.99 87.8206 203.152 88.2083 cv
203.022 88.0686 202.897 87.9246 202.776 87.7761 cv
202.473 87.365 202.21 86.9294 201.994 86.4661 cv
201.843 86.0691 201.729 85.6614 201.624 85.2488 cv
201.519 84.8352 201.422 84.4207 201.354 83.9998 cv
201.301 83.4749 201.307 82.9514 201.363 82.4285 cv
201.409 82.1492 201.471 81.8772 201.555 81.6047 cv
201.629 81.3669 201.721 81.135 201.816 80.905 cv
202.203 80.0168 202.694 79.1726 203.181 78.3362 cv
203.679 77.4778 204.24 76.6609 204.84 75.8718 cv
206.05 74.3293 207.407 72.8977 208.863 71.5774 cv
208.863 71.5774 li
208.863 71.5774 li
cp
262.177 71.2673 mo
262.193 71.2874 262.208 71.3069 262.224 71.3269 cv
262.208 71.3074 262.193 71.2874 262.177 71.2673 cv
262.177 71.2673 li
262.177 71.2673 li
cp
213.542 69.6936 mo
213.487 69.7371 213.43 69.7805 213.374 69.823 cv
213.43 69.78 213.486 69.7371 213.542 69.6936 cv
213.542 69.6936 li
213.542 69.6936 li
cp
237.718 61.1028 mo
239.457 61.1008 241.19 61.2322 242.913 61.4558 cv
246.142 61.905 249.337 62.6482 252.358 63.8879 cv
254.273 64.7112 256.076 65.7625 257.735 67.0222 cv
258.545 67.6541 259.331 68.3147 260.079 69.0198 cv
260.794 69.6926 261.489 70.4016 262.101 71.1707 cv
262.572 71.8044 263.003 72.4626 263.328 73.1833 cv
263.526 73.6882 263.679 74.2039 263.772 74.7395 cv
263.825 75.2502 263.82 75.7595 263.768 76.2708 cv
263.669 76.887 263.492 77.4768 263.26 78.0569 cv
262.957 78.7341 262.585 79.3708 262.165 79.9773 cv
261.961 79.9397 261.744 80.0051 261.577 80.1521 cv
261.174 80.5085 260.765 80.8577 260.356 81.2068 cv
259.907 81.5906 259.474 81.9934 259.034 82.3879 cv
258.595 82.781 258.141 83.1565 257.69 83.5369 cv
257.269 83.8923 256.844 84.2415 256.411 84.5803 cv
254.646 85.9177 252.705 86.99 250.683 87.8831 cv
249.942 88.1584 249.2 88.4338 248.46 88.7097 cv
248.166 88.8196 247.874 88.9465 247.574 89.0398 cv
247.249 89.1404 246.922 89.2405 246.597 89.3411 cv
245.618 89.6433 244.638 89.9446 243.658 90.2473 cv
243.435 90.3167 243.205 90.3689 242.98 90.429 cv
242.402 90.5818 241.826 90.7351 241.25 90.8894 cv
240.575 91.0671 239.905 91.2634 239.226 91.4163 cv
238.138 91.6614 237.05 91.9065 235.961 92.1516 cv
235.346 92.2903 234.729 92.4075 234.11 92.5247 cv
233.107 92.7136 232.104 92.9026 231.101 93.0911 cv
230.925 93.1248 230.745 93.1453 230.568 93.1702 cv
230.074 93.2429 229.581 93.3147 229.088 93.3865 cv
228.386 93.489 227.684 93.592 226.983 93.6946 cv
225.973 93.8059 224.963 93.8967 223.951 93.9583 cv
222.986 93.9089 222.022 93.8254 221.059 93.7283 cv
220.205 93.6077 219.35 93.49 218.495 93.3699 cv
217.85 93.28 217.208 93.1931 216.567 93.072 cv
215.478 92.8679 214.388 92.6624 213.299 92.4578 cv
212.542 92.3152 211.79 92.1384 211.041 91.9626 cv
209.992 91.7161 208.956 91.4163 207.936 91.0691 cv
207.745 90.9436 207.557 90.8123 207.373 90.6755 cv
206.844 90.2488 206.359 89.7756 205.93 89.2478 cv
205.556 88.7371 205.242 88.1863 204.986 87.6082 cv
204.74 86.9841 204.56 86.3411 204.456 85.678 cv
204.401 85.1521 204.4 84.6287 204.456 84.1028 cv
204.565 83.4651 204.765 82.8425 204.977 82.2336 cv
205.189 81.6208 205.429 81.0164 205.68 80.4177 cv
206.089 79.468 206.567 78.553 207.084 77.6575 cv
207.353 77.1936 207.636 76.738 207.929 76.2874 cv
208.147 75.9514 208.365 75.613 208.599 75.2878 cv
209.061 74.6482 209.525 74.0076 209.988 73.3679 cv
210.498 72.7151 211.026 72.0779 211.597 71.4778 cv
212.215 70.8289 212.884 70.2351 213.574 69.6692 cv
213.89 69.426 214.206 69.1833 214.522 68.9397 cv
214.823 68.7078 215.151 68.509 215.469 68.3 cv
215.762 68.1062 216.052 67.9114 216.354 67.7332 cv
216.83 67.4548 217.305 67.176 217.78 66.8962 cv
218.058 66.7327 218.35 66.5906 218.636 66.4397 cv
219.113 66.1897 219.588 65.9387 220.064 65.6892 cv
220.841 65.28 221.641 64.9094 222.43 64.5222 cv
223.423 64.0325 224.427 63.572 225.445 63.1384 cv
225.883 62.9563 226.323 62.781 226.767 62.613 cv
227.225 62.4973 227.682 62.3811 228.138 62.2649 cv
228.705 62.1218 229.286 62.0188 229.86 61.9075 cv
230.721 61.7405 231.586 61.5979 232.453 61.4768 cv
234.2 61.2478 235.955 61.1052 237.718 61.1028 cv
237.718 61.1028 li
237.718 61.1028 li
cp
238.402 58.4392 mo
237.752 58.4514 237.1 58.4788 236.449 58.5242 cv
235.149 58.614 233.851 58.7634 232.567 58.988 cv
232.073 59.0745 231.582 59.1726 231.094 59.2815 cv
230.619 59.3562 230.145 59.4368 229.672 59.5237 cv
228.907 59.6648 228.137 59.8083 227.383 60.0007 cv
226.304 60.2756 225.225 60.5505 224.147 60.8254 cv
223.606 60.9631 223.074 61.1248 222.542 61.2942 cv
221.363 61.6687 220.199 62.093 219.052 62.5554 cv
216.698 63.5071 214.41 64.6238 212.269 65.9905 cv
210.165 67.3328 208.212 68.9182 206.416 70.6492 cv
204.62 72.3826 202.961 74.2917 201.624 76.4045 cv
201.31 76.9016 201.023 77.4158 200.739 77.9309 cv
200.443 78.4666 200.15 79.0046 199.901 79.5642 cv
199.656 80.114 199.426 80.676 199.268 81.2571 cv
199.182 81.5784 199.139 81.9182 199.101 82.2478 cv
199.062 82.5818 199.043 82.9153 199.045 83.2512 cv
199.046 83.8835 199.15 84.5173 199.29 85.1316 cv
199.428 85.7439 199.6 86.3572 199.824 86.9441 cv
200.274 88.1213 201.026 89.1555 201.925 90.032 cv
202.35 90.447 202.828 90.8103 203.314 91.1521 cv
203.823 91.511 204.369 91.8157 204.927 92.0945 cv
205.868 92.5632 206.86 92.9172 207.863 93.2332 cv
208.635 93.6541 209.447 94.0066 210.27 94.3059 cv
212.617 95.1584 215.12 95.5637 217.599 95.7957 cv
219.353 95.9597 221.118 95.9929 222.879 95.927 cv
225.28 96.1018 227.692 96.052 230.085 95.7825 cv
231.374 95.6379 232.653 95.4177 233.923 95.156 cv
235.155 94.9026 236.383 94.6194 237.6 94.3 cv
240.247 93.6052 242.845 92.7517 245.453 91.9207 cv
246.062 91.7273 246.658 91.5027 247.258 91.2825 cv
247.841 91.0696 248.423 90.8557 249.005 90.6428 cv
249.359 90.5125 249.714 90.386 250.063 90.2434 cv
250.595 90.0256 251.128 89.8044 251.655 89.572 cv
251.656 89.5715 251.656 89.571 251.658 89.5706 cv
252.033 89.4329 252.397 89.2429 252.76 89.0779 cv
253.318 88.8245 253.875 88.571 254.432 88.3176 cv
256.071 87.573 257.644 86.676 259.126 85.6575 cv
261.153 84.2659 262.95 82.5481 264.32 80.5002 cv
264.64 80.0208 264.911 79.5139 265.15 78.989 cv
265.43 78.3733 265.667 77.7395 265.81 77.0774 cv
265.941 76.4783 266.002 75.8567 266 75.2434 cv
266 74.5789 265.885 73.907 265.712 73.2664 cv
265.397 72.0959 264.802 71.0378 264.104 70.0564 cv
263.384 69.0437 262.515 68.135 261.621 67.2742 cv
260.719 66.4065 259.745 65.616 258.753 64.8533 cv
257.791 64.1135 256.769 63.4617 255.707 62.8748 cv
254.549 62.2341 253.335 61.6877 252.092 61.2214 cv
252.652 61.3132 253.207 61.4333 253.76 61.5657 cv
254.642 61.7761 255.511 62.0354 256.351 62.3782 cv
256.728 62.5432 257.083 62.7356 257.415 62.9783 cv
257.58 63.1155 257.734 63.26 257.872 63.4246 cv
258.008 63.614 258.135 63.8079 258.252 64.0095 cv
258.35 64.178 258.574 64.2366 258.742 64.1384 cv
258.927 64.031 258.949 63.8264 258.871 63.6472 cv
258.775 63.4236 258.678 63.2 258.573 62.9797 cv
258.464 62.7517 258.3 62.553 258.142 62.3572 cv
257.781 61.9099 257.287 61.5886 256.794 61.3064 cv
256.295 61.0217 255.759 60.8054 255.223 60.6008 cv
254.637 60.3787 254.039 60.1956 253.435 60.0281 cv
252.407 59.7439 251.353 59.5583 250.309 59.342 cv
250.02 59.2825 249.722 59.2522 249.43 59.2092 cv
248.844 59.1233 248.258 59.0383 247.671 58.9524 cv
246.841 58.8313 246.006 58.7717 245.17 58.6975 cv
244.689 58.6545 244.209 58.6116 243.728 58.5696 cv
243.487 58.5481 243.242 58.5471 243 58.5388 cv
242.018 58.5027 241.038 58.467 240.056 58.4299 cv
239.885 58.4236 239.714 58.4211 239.542 58.4211 cv
239.162 58.4211 238.781 58.4329 238.402 58.4392 cv
238.402 58.4392 li
238.402 58.4392 li
cp
f
234.377 153.221 mo
234.298 153.232 234.22 153.242 234.142 153.252 cv
234.22 153.241 234.299 153.231 234.377 153.221 cv
234.377 153.221 li
234.377 153.221 li
cp
264.094 136.197 mo
264.096 136.221 264.099 136.245 264.102 136.268 cv
264.099 136.245 264.096 136.221 264.094 136.197 cv
264.094 136.197 li
264.094 136.197 li
cp
257.655 127.222 mo
257.679 127.241 257.704 127.26 257.728 127.279 cv
257.704 127.26 257.679 127.241 257.655 127.222 cv
257.655 127.222 li
257.655 127.222 li
cp
240.718 122.975 mo
240.73 122.98 240.742 122.985 240.755 122.99 cv
240.742 122.986 240.73 122.98 240.718 122.975 cv
240.718 122.975 li
240.718 122.975 li
cp
231.231 117.628 mo
226.466 118.04 221.808 119.2 217.32 120.835 cv
215.11 121.639 212.937 122.571 210.836 123.628 cv
209.798 124.15 208.783 124.72 207.788 125.321 cv
206.818 125.907 205.873 126.54 204.979 127.24 cv
203.799 128.163 202.687 129.191 201.66 130.283 cv
200.566 131.446 199.586 132.71 198.59 133.957 cv
198.45 134.131 198.419 134.367 198.59 134.539 cv
198.74 134.687 199.029 134.711 199.174 134.539 cv
199.688 133.927 200.205 133.32 200.722 132.71 cv
201.236 132.102 201.745 131.493 202.287 130.909 cv
202.814 130.34 203.375 129.8 203.941 129.27 cv
204.483 128.764 205.044 128.281 205.627 127.823 cv
206.967 126.793 208.416 125.911 209.894 125.093 cv
211.419 124.248 213.008 123.513 214.614 122.834 cv
214.579 122.848 214.544 122.863 214.51 122.877 cv
218.938 121.016 223.592 119.636 228.356 118.982 cv
230.022 118.764 231.701 118.629 233.381 118.605 cv
235.089 118.582 236.804 118.692 238.499 118.912 cv
240.111 119.134 241.7 119.483 243.265 119.922 cv
244.799 120.35 246.293 120.896 247.761 121.509 cv
251.259 122.992 254.601 124.888 257.621 127.196 cv
259.125 128.37 260.552 129.672 261.742 131.167 cv
262.423 132.066 263.01 133.024 263.467 134.057 cv
263.77 134.816 263.99 135.593 264.118 136.399 cv
264.185 137.003 264.194 137.605 264.132 138.21 cv
264.044 138.745 263.9 139.265 263.702 139.77 cv
263.462 140.286 263.159 140.76 262.82 141.215 cv
261.898 142.371 260.774 143.357 259.612 144.266 cv
258.486 145.121 257.302 145.895 256.074 146.595 cv
254.802 147.322 253.478 147.945 252.132 148.519 cv
250.674 149.128 249.187 149.684 247.672 150.135 cv
246.612 150.451 245.551 150.768 244.492 151.084 cv
244.267 151.151 244.044 151.231 243.816 151.284 cv
243.536 151.35 243.258 151.416 242.978 151.482 cv
241.88 151.74 240.781 151.998 239.683 152.257 cv
237.856 152.686 235.998 152.999 234.139 153.252 cv
229.093 153.906 223.972 153.986 218.923 153.319 cv
215.369 152.822 211.83 151.976 208.51 150.602 cv
207.246 150.057 206.029 149.397 204.927 148.57 cv
204.266 148.043 203.662 147.451 203.134 146.79 cv
202.753 146.272 202.427 145.72 202.165 145.134 cv
201.952 144.59 201.799 144.034 201.708 143.458 cv
201.639 142.82 201.644 142.184 201.717 141.548 cv
201.836 140.795 202.051 140.065 202.339 139.361 cv
202.859 138.19 203.53 137.096 204.302 136.075 cv
205.372 134.711 206.638 133.524 208.001 132.454 cv
209.235 131.509 210.53 130.641 211.888 129.883 cv
212.701 129.427 213.514 128.971 214.327 128.517 cv
214.594 128.369 214.88 128.248 215.154 128.115 cv
215.685 127.857 216.216 127.599 216.745 127.341 cv
217.003 127.215 217.258 127.078 217.52 126.964 cv
217.865 126.815 218.212 126.668 218.559 126.519 cv
219.208 126.241 219.856 125.96 220.505 125.684 cv
221.201 125.422 221.897 125.158 222.591 124.895 cv
223.083 124.709 223.568 124.527 224.067 124.366 cv
224.882 124.103 225.696 123.842 226.51 123.578 cv
227.199 123.357 227.91 123.19 228.614 123.025 cv
229.59 122.795 230.575 122.613 231.568 122.474 cv
232.694 122.327 233.821 122.24 234.956 122.204 cv
236.052 122.169 237.153 122.2 238.241 122.34 cv
239.08 122.463 239.912 122.648 240.699 122.968 cv
240.928 123.069 241.151 123.179 241.369 123.299 cv
241.567 123.407 241.771 123.524 241.954 123.657 cv
241.959 123.662 241.964 123.667 241.969 123.672 cv
241.97 123.675 241.971 123.677 241.972 123.68 cv
241.993 123.735 242.031 123.782 242.088 123.815 cv
242.217 123.89 242.399 123.849 242.471 123.715 cv
242.634 123.42 242.278 123.175 242.072 123.036 cv
241.869 122.898 241.675 122.749 241.469 122.616 cv
241.215 122.455 240.946 122.315 240.675 122.186 cv
239.672 121.707 238.584 121.445 237.49 121.281 cv
236.319 121.104 235.131 121.067 233.948 121.081 cv
232.742 121.094 231.54 121.198 230.344 121.365 cv
228.714 121.59 227.101 121.942 225.525 122.419 cv
224.968 122.586 224.412 122.755 223.855 122.923 cv
223.61 122.997 223.36 123.062 223.118 123.148 cv
222.196 123.482 221.273 123.815 220.35 124.149 cv
219.656 124.4 218.981 124.702 218.301 124.985 cv
217.624 125.264 216.944 125.535 216.282 125.847 cv
215.379 126.274 214.476 126.701 213.573 127.128 cv
213.357 127.23 213.15 127.355 212.94 127.469 cv
212.429 127.747 211.919 128.025 211.408 128.303 cv
211.101 128.47 210.793 128.638 210.484 128.806 cv
210.042 129.047 209.617 129.329 209.195 129.599 cv
208.692 129.918 208.199 130.253 207.714 130.597 cv
206.772 131.269 205.864 131.99 205.009 132.77 cv
204.154 133.55 203.392 134.407 202.687 135.323 cv
202.002 136.213 201.414 137.173 200.924 138.181 cv
200.669 138.705 200.453 139.248 200.275 139.802 cv
200.078 140.41 199.968 141.033 199.89 141.667 cv
199.744 142.836 199.874 144.053 200.227 145.174 cv
200.589 146.326 201.214 147.362 201.976 148.292 cv
202.697 149.173 203.576 149.909 204.509 150.556 cv
205.427 151.192 206.425 151.719 207.445 152.17 cv
209.627 153.136 211.92 153.837 214.24 154.383 cv
216.658 154.952 219.124 155.318 221.596 155.532 cv
226.47 155.954 231.383 155.683 236.214 154.951 cv
237.595 154.74 238.97 154.497 240.333 154.19 cv
241.434 153.942 242.535 153.695 243.636 153.447 cv
243.882 153.392 244.127 153.34 244.372 153.282 cv
244.635 153.22 244.893 153.133 245.153 153.06 cv
246.211 152.757 247.269 152.456 248.327 152.154 cv
248.786 152.023 249.238 151.877 249.69 151.727 cv
250.802 151.357 251.902 150.956 252.985 150.512 cv
254.122 150.047 255.245 149.551 256.341 148.994 cv
257.38 148.464 258.387 147.872 259.364 147.235 cv
260.369 146.578 261.335 145.856 262.256 145.083 cv
262.676 144.732 263.087 144.366 263.484 143.988 cv
263.908 143.583 264.294 143.144 264.657 142.684 cv
265.021 142.222 265.365 141.75 265.644 141.233 cv
265.797 140.949 265.917 140.646 266.036 140.348 cv
266.153 140.057 266.243 139.757 266.323 139.454 cv
266.474 138.88 266.547 138.277 266.568 137.684 cv
266.59 137.036 266.506 136.387 266.403 135.749 cv
266.32 135.219 266.169 134.704 265.992 134.199 cv
265.781 133.603 265.522 133.017 265.229 132.458 cv
264.696 131.438 263.995 130.498 263.249 129.627 cv
262.529 128.786 261.71 128.033 260.87 127.313 cv
259.964 126.535 258.996 125.825 258.01 125.152 cv
256.088 123.842 254.053 122.709 251.96 121.7 cv
249.842 120.68 247.642 119.804 245.396 119.112 cv
243.104 118.406 240.741 117.932 238.359 117.677 cv
237.112 117.545 235.858 117.482 234.604 117.482 cv
233.478 117.482 232.352 117.532 231.231 117.628 cv
231.231 117.628 li
231.231 117.628 li
cp
f
164.093 264.844 mo
164.057 264.86 164.021 264.875 163.985 264.89 cv
164.021 264.875 164.056 264.86 164.093 264.844 cv
164.093 264.844 li
164.093 264.844 li
cp
119.569 262.344 mo
119.585 262.357 119.6 262.369 119.616 262.381 cv
119.6 262.369 119.585 262.357 119.569 262.344 cv
119.569 262.344 li
119.569 262.344 li
cp
120.72 237.798 mo
120.699 237.814 120.677 237.831 120.656 237.847 cv
120.677 237.83 120.698 237.814 120.72 237.798 cv
120.72 237.798 li
120.72 237.798 li
cp
127.943 232.166 mo
127.9 232.184 127.858 232.201 127.815 232.219 cv
127.858 232.201 127.901 232.183 127.943 232.166 cv
127.943 232.166 li
127.943 232.166 li
cp
143.592 228.046 mo
143.536 228.053 143.481 228.06 143.426 228.068 cv
143.481 228.06 143.536 228.053 143.592 228.046 cv
143.592 228.046 li
143.592 228.046 li
cp
149.397 227.634 mo
151.328 227.613 153.252 227.735 155.166 227.983 cv
158.643 228.467 162.086 229.334 165.331 230.682 cv
167.272 231.515 169.129 232.527 170.816 233.805 cv
171.995 234.736 173.062 235.796 173.993 236.974 cv
174.826 238.081 175.539 239.278 176.095 240.546 cv
176.554 241.673 176.878 242.846 177.058 244.05 cv
177.26 245.717 177.214 247.398 177.003 249.061 cv
176.748 250.839 176.29 252.58 175.608 254.242 cv
174.988 255.68 174.209 257.048 173.264 258.299 cv
172.378 259.422 171.36 260.426 170.236 261.309 cv
168.365 262.734 166.312 263.889 164.154 264.819 cv
160.626 266.295 156.889 267.184 153.108 267.701 cv
153.174 267.692 153.24 267.683 153.305 267.674 cv
152.633 267.764 151.957 267.861 151.281 267.914 cv
150.887 267.945 150.494 267.976 150.1 268.007 cv
149.124 268.084 148.146 268.16 147.169 268.237 cv
146.663 268.277 146.154 268.273 145.647 268.282 cv
144.626 268.302 143.606 268.324 142.587 268.344 cv
141.637 268.364 140.687 268.322 139.739 268.275 cv
138.075 268.194 136.416 268.039 134.765 267.823 cv
131.286 267.346 127.831 266.54 124.582 265.187 cv
122.784 264.416 121.057 263.477 119.499 262.29 cv
118.482 261.491 117.554 260.595 116.752 259.577 cv
116.049 258.647 115.463 257.65 114.996 256.58 cv
114.497 255.373 114.154 254.114 113.966 252.821 cv
113.794 251.437 113.786 250.034 113.96 248.65 cv
114.141 247.404 114.478 246.187 114.959 245.021 cv
115.518 243.735 116.242 242.534 117.091 241.418 cv
118.163 240.048 119.404 238.827 120.775 237.756 cv
121.76 237.006 122.8 236.337 123.876 235.722 cv
124.43 235.406 124.998 235.11 125.57 234.823 cv
125.812 234.701 126.055 234.579 126.302 234.469 cv
127.183 234.075 128.063 233.683 128.943 233.288 cv
129.711 233.003 130.48 232.718 131.248 232.432 cv
131.467 232.351 131.685 232.258 131.907 232.19 cv
132.285 232.075 132.661 231.96 133.039 231.846 cv
133.704 231.644 134.365 231.422 135.039 231.251 cv
135.877 231.038 136.714 230.825 137.553 230.613 cv
137.709 230.573 137.869 230.548 138.027 230.516 cv
138.399 230.439 138.771 230.363 139.141 230.286 cv
139.44 230.225 139.739 230.164 140.038 230.102 cv
140.539 229.999 141.047 229.93 141.553 229.862 cv
141.521 229.866 141.49 229.87 141.458 229.875 cv
142.096 229.793 142.736 229.73 143.378 229.696 cv
144.069 229.658 144.758 229.665 145.448 229.691 cv
145.695 229.7 145.943 229.728 146.189 229.746 cv
146.477 229.767 146.766 229.787 147.053 229.818 cv
147.136 229.832 147.219 229.851 147.303 229.86 cv
147.397 229.869 147.487 229.786 147.511 229.702 cv
147.538 229.601 147.49 229.516 147.412 229.458 cv
147.372 229.429 147.28 229.415 147.244 229.405 cv
147.151 229.383 147.054 229.373 146.959 229.36 cv
146.861 229.346 146.762 229.333 146.663 229.322 cv
146.417 229.292 146.171 229.263 145.925 229.233 cv
145.205 229.146 144.485 229.081 143.76 229.067 cv
142.242 229.037 140.731 229.194 139.237 229.45 cv
138.725 229.539 138.214 229.628 137.702 229.716 cv
137.503 229.75 137.307 229.784 137.113 229.828 cv
136.258 230.02 135.404 230.21 134.549 230.401 cv
134.295 230.458 134.044 230.54 133.792 230.609 cv
133.272 230.753 132.752 230.895 132.232 231.038 cv
132.01 231.099 131.781 231.15 131.563 231.225 cv
131.191 231.354 130.821 231.482 130.448 231.61 cv
129.962 231.778 129.474 231.946 128.988 232.114 cv
128.766 232.19 128.55 232.268 128.335 232.359 cv
127.473 232.724 126.611 233.09 125.749 233.454 cv
125.135 233.714 124.538 234.016 123.944 234.32 cv
123.113 234.746 122.302 235.211 121.516 235.716 cv
123.51 234.269 125.718 233.116 127.98 232.151 cv
130.427 231.132 132.95 230.332 135.511 229.658 cv
138.175 228.958 140.878 228.416 143.608 228.044 cv
145.529 227.797 147.461 227.655 149.397 227.634 cv
149.397 227.634 li
149.397 227.634 li
cp
144.607 225.755 mo
142.362 226.012 140.128 226.395 137.921 226.882 cv
135.765 227.356 133.628 227.932 131.527 228.607 cv
129.425 229.282 127.357 230.096 125.371 231.06 cv
123.451 231.99 121.597 233.094 119.944 234.446 cv
119.138 235.104 118.384 235.826 117.646 236.559 cv
116.893 237.307 116.243 238.154 115.569 238.972 cv
115.462 239.103 115.352 239.234 115.241 239.363 cv
115.105 239.523 115.017 239.69 115.017 239.906 cv
115.017 240.109 115.098 240.306 115.241 240.449 cv
115.466 240.673 115.804 240.728 116.084 240.613 cv
115.552 241.294 115.065 242.011 114.628 242.758 cv
114.088 243.682 113.652 244.671 113.306 245.682 cv
112.613 247.707 112.396 249.877 112.547 252.007 cv
112.623 253.095 112.815 254.176 113.105 255.228 cv
113.385 256.242 113.789 257.227 114.266 258.163 cv
114.743 259.098 115.349 259.961 116.01 260.774 cv
116.658 261.573 117.403 262.286 118.195 262.939 cv
119.83 264.287 121.672 265.339 123.606 266.197 cv
125.579 267.074 127.648 267.738 129.747 268.241 cv
131.899 268.759 134.085 269.109 136.284 269.354 cv
137.388 269.478 138.497 269.571 139.606 269.636 cv
140.139 269.668 140.673 269.69 141.206 269.71 cv
141.531 269.721 141.859 269.74 142.184 269.736 cv
143.765 269.716 145.347 269.702 146.928 269.678 cv
147.163 269.675 147.399 269.646 147.632 269.631 cv
148.148 269.596 148.664 269.56 149.18 269.525 cv
149.93 269.474 150.681 269.424 151.431 269.371 cv
151.968 269.334 152.505 269.26 153.039 269.197 cv
153.64 269.125 154.241 269.045 154.841 268.956 cv
155.938 268.794 157.03 268.592 158.113 268.359 cv
160.244 267.898 162.34 267.269 164.366 266.465 cv
166.401 265.656 168.349 264.664 170.172 263.452 cv
171.06 262.864 171.915 262.221 172.71 261.512 cv
173.48 260.827 174.185 260.07 174.823 259.26 cv
176.196 257.51 177.253 255.551 178.014 253.464 cv
178.778 251.368 179.185 249.136 179.31 246.911 cv
179.436 244.711 179.167 242.47 178.43 240.388 cv
177.694 238.304 176.519 236.389 175.084 234.715 cv
173.702 233.102 172.03 231.763 170.23 230.644 cv
169.344 230.092 168.418 229.607 167.471 229.169 cv
166.456 228.698 165.417 228.277 164.364 227.9 cv
162.298 227.162 160.16 226.61 158.005 226.206 cv
155.787 225.789 153.531 225.531 151.276 225.46 cv
150.842 225.447 150.406 225.44 149.972 225.44 cv
148.18 225.44 146.387 225.552 144.607 225.755 cv
144.607 225.755 li
144.607 225.755 li
cp
f
202.529 203.259 mo
202.536 203.264 202.543 203.27 202.55 203.275 cv
202.538 203.266 202.528 203.258 202.516 203.25 cv
202.521 203.253 202.525 203.256 202.529 203.259 cv
202.529 203.259 li
202.529 203.259 li
cp
210.971 208.128 mo
210.958 208.122 210.945 208.117 210.931 208.112 cv
210.945 208.117 210.958 208.123 210.971 208.128 cv
210.971 208.128 li
210.971 208.128 li
cp
252.623 206.221 mo
252.594 206.233 252.564 206.246 252.535 206.259 cv
252.564 206.245 252.594 206.233 252.623 206.221 cv
252.623 206.221 li
252.623 206.221 li
cp
260.418 201.779 mo
260.39 201.801 260.363 201.822 260.336 201.844 cv
260.363 201.822 260.39 201.8 260.418 201.779 cv
260.418 201.779 li
260.418 201.779 li
cp
198.672 199.501 mo
198.688 199.52 198.702 199.539 198.717 199.558 cv
198.702 199.539 198.687 199.52 198.672 199.501 cv
198.672 199.501 li
198.672 199.501 li
cp
196.957 196.632 mo
196.963 196.644 196.968 196.657 196.973 196.67 cv
196.968 196.657 196.963 196.645 196.957 196.632 cv
196.957 196.632 li
196.957 196.632 li
cp
196.939 189.444 mo
196.933 189.458 196.927 189.472 196.921 189.486 cv
196.927 189.471 196.933 189.457 196.939 189.444 cv
196.939 189.444 li
196.939 189.444 li
cp
198.445 186.946 mo
198.434 186.961 198.423 186.976 198.411 186.99 cv
198.423 186.976 198.434 186.961 198.445 186.946 cv
198.445 186.946 li
198.445 186.946 li
cp
243.189 173.382 mo
243.24 173.388 243.293 173.395 243.345 173.402 cv
243.293 173.395 243.24 173.388 243.189 173.382 cv
243.189 173.382 li
243.189 173.382 li
cp
243.034 173.36 mo
243.067 173.365 243.1 173.369 243.133 173.374 cv
243.1 173.369 243.067 173.365 243.034 173.36 cv
243.034 173.36 li
243.034 173.36 li
cp
224.599 172.997 mo
225.168 172.951 225.736 172.914 226.305 172.881 cv
226.694 172.858 227.084 172.826 227.473 172.819 cv
228.322 172.804 229.171 172.79 230.021 172.775 cv
230.977 172.758 231.934 172.742 232.89 172.724 cv
233.016 172.722 233.14 172.725 233.265 172.73 cv
233.694 172.747 234.123 172.764 234.551 172.781 cv
235.704 172.823 236.858 172.868 238.011 172.912 cv
238.501 172.931 238.987 172.966 239.475 173.003 cv
240.714 173.098 241.95 173.219 243.181 173.381 cv
245.164 173.655 247.134 174.01 249.072 174.515 cv
251.021 175.023 252.934 175.673 254.793 176.449 cv
257.282 177.514 259.701 178.789 261.864 180.425 cv
263.111 181.406 264.257 182.5 265.243 183.745 cv
265.868 184.579 266.407 185.475 266.828 186.427 cv
267.136 187.195 267.362 187.99 267.49 188.806 cv
267.572 189.533 267.568 190.26 267.488 190.989 cv
267.334 191.977 267.021 192.922 266.64 193.846 cv
265.964 195.401 265.083 196.867 264.058 198.217 cv
263.01 199.546 261.778 200.711 260.448 201.756 cv
258.073 203.572 255.435 205.012 252.692 206.191 cv
250.871 206.96 249 207.606 247.102 208.156 cv
246.147 208.432 245.182 208.678 244.214 208.907 cv
243.83 208.997 243.449 209.086 243.062 209.157 cv
241.555 209.438 240.052 209.736 238.543 209.999 cv
236.924 210.196 235.302 210.388 233.681 210.58 cv
233.507 210.602 233.329 210.602 233.153 210.611 cv
232.652 210.638 232.151 210.666 231.649 210.694 cv
230.627 210.751 229.605 210.807 228.583 210.864 cv
228.267 210.882 227.951 210.884 227.636 210.887 cv
226.735 210.898 225.832 210.894 224.93 210.873 cv
223.105 210.829 221.277 210.69 219.466 210.453 cv
219.485 210.455 219.505 210.458 219.524 210.461 cv
218.03 210.259 216.556 209.96 215.102 209.561 cv
213.694 209.177 212.318 208.695 210.971 208.128 cv
210.984 208.134 210.996 208.139 211.009 208.145 cv
208.007 206.866 205.142 205.258 202.55 203.275 cv
202.558 203.281 202.566 203.288 202.574 203.295 cv
202.559 203.283 202.544 203.271 202.529 203.259 cv
202.521 203.254 202.514 203.248 202.506 203.242 cv
202.51 203.244 202.513 203.247 202.516 203.25 cv
201.12 202.164 199.811 200.951 198.717 199.558 cv
198.012 198.637 197.404 197.659 196.942 196.594 cv
196.619 195.806 196.385 194.996 196.26 194.153 cv
196.17 193.401 196.163 192.651 196.254 191.9 cv
196.377 191.07 196.599 190.274 196.916 189.498 cv
197.3 188.615 197.801 187.796 198.382 187.03 cv
199.909 185.082 201.741 183.371 203.686 181.848 cv
203.684 181.85 203.681 181.852 203.679 181.854 cv
204.816 180.977 206.006 180.182 207.251 179.468 cv
208.525 178.739 209.852 178.114 211.195 177.526 cv
211.968 177.218 212.739 176.907 213.51 176.599 cv
214.081 176.369 214.648 176.123 215.231 175.925 cv
216.75 175.409 218.262 174.868 219.795 174.394 cv
221.295 173.931 222.793 173.459 224.301 173.021 cv
224.4 173.013 224.5 173.005 224.599 172.997 cv
224.599 172.997 li
224.599 172.997 li
cp
235.974 169.534 mo
235.354 169.592 234.734 169.661 234.12 169.768 cv
233.152 169.934 232.184 170.101 231.215 170.269 cv
231.011 170.304 230.81 170.361 230.609 170.408 cv
230.576 170.416 230.542 170.425 230.509 170.432 cv
230.274 170.437 230.039 170.441 229.804 170.446 cv
229.019 170.46 228.234 170.475 227.448 170.49 cv
226.972 170.498 226.495 170.541 226.021 170.57 cv
225.405 170.61 224.789 170.655 224.174 170.707 cv
222.934 170.814 221.7 170.965 220.469 171.139 cv
218.13 171.468 215.82 171.935 213.541 172.556 cv
211.263 173.176 209.043 173.977 206.885 174.931 cv
205.842 175.393 204.821 175.906 203.845 176.497 cv
202.879 177.083 201.956 177.738 201.055 178.418 cv
200.589 178.769 200.13 179.126 199.688 179.51 cv
199.244 179.896 198.817 180.304 198.394 180.713 cv
198 181.092 197.605 181.467 197.229 181.864 cv
196.821 182.298 196.421 182.741 196.018 183.18 cv
195.986 183.214 195.955 183.247 195.924 183.281 cv
195.662 183.557 195.648 183.993 195.924 184.269 cv
196.054 184.4 196.233 184.474 196.418 184.474 cv
196.617 184.474 196.763 184.391 196.912 184.269 cv
197.483 183.802 198.056 183.337 198.639 182.885 cv
198.58 182.929 198.522 182.974 198.464 183.019 cv
199.217 182.439 199.931 181.81 200.68 181.224 cv
201.216 180.817 201.767 180.429 202.317 180.044 cv
202.946 179.604 203.588 179.183 204.242 178.785 cv
205.482 178.03 206.787 177.385 208.121 176.814 cv
210.168 175.963 212.274 175.259 214.418 174.693 cv
215.76 174.339 217.113 174.042 218.476 173.793 cv
218.235 173.873 217.994 173.954 217.753 174.036 cv
216.783 174.362 215.813 174.69 214.843 175.015 cv
214.691 175.066 214.543 175.127 214.393 175.187 cv
213.924 175.376 213.453 175.564 212.984 175.753 cv
212.107 176.103 211.224 176.437 210.363 176.823 cv
209.304 177.295 208.26 177.798 207.248 178.362 cv
206.238 178.926 205.26 179.543 204.321 180.218 cv
202.455 181.559 200.725 183.1 199.168 184.789 cv
198.421 185.601 197.71 186.462 197.109 187.387 cv
196.507 188.31 196.04 189.317 195.728 190.374 cv
195.411 191.445 195.304 192.583 195.392 193.694 cv
195.477 194.787 195.762 195.848 196.197 196.853 cv
197.061 198.853 198.451 200.56 200.031 202.042 cv
201.665 203.574 203.525 204.87 205.445 206.018 cv
207.39 207.18 209.42 208.19 211.514 209.052 cv
213.664 209.937 215.919 210.592 218.203 211.016 cv
219.352 211.229 220.512 211.378 221.673 211.498 cv
222.851 211.62 224.032 211.705 225.215 211.753 cv
225.785 211.776 226.354 211.789 226.924 211.797 cv
227.4 211.804 227.882 211.824 228.358 211.807 cv
228.64 211.796 228.922 211.786 229.204 211.776 cv
230.327 211.736 231.449 211.696 232.573 211.655 cv
233.07 211.635 233.564 211.625 234.059 211.575 cv
235.135 211.467 236.211 211.36 237.288 211.252 cv
237.873 211.194 238.463 211.154 239.042 211.056 cv
240.066 210.884 241.089 210.713 242.111 210.541 cv
242.559 210.465 243.008 210.39 243.456 210.315 cv
244.054 210.216 244.644 210.075 245.235 209.941 cv
249.826 208.896 254.308 207.283 258.405 204.949 cv
260.393 203.816 262.282 202.481 263.955 200.918 cv
264.797 200.133 265.531 199.249 266.218 198.327 cv
266.895 197.419 267.5 196.454 268.028 195.451 cv
268.3 194.931 268.538 194.395 268.764 193.855 cv
268.993 193.305 269.198 192.748 269.352 192.173 cv
269.508 191.598 269.585 191 269.644 190.409 cv
269.701 189.818 269.693 189.221 269.631 188.631 cv
269.569 188.036 269.461 187.449 269.31 186.871 cv
269.153 186.264 268.923 185.686 268.676 185.111 cv
268.242 184.109 267.663 183.174 266.999 182.31 cv
266.285 181.38 265.501 180.519 264.632 179.73 cv
263.751 178.931 262.8 178.207 261.813 177.541 cv
259.93 176.268 257.891 175.236 255.801 174.349 cv
253.6 173.414 251.335 172.651 249.013 172.079 cv
246.684 171.505 244.298 171.146 241.915 170.885 cv
240.524 170.731 239.126 170.612 237.727 170.56 cv
236.841 170.527 235.954 170.494 235.068 170.461 cv
235.092 170.458 235.115 170.454 235.139 170.451 cv
237.652 170.114 240.202 169.993 242.723 170.313 cv
243.215 170.383 243.702 170.474 244.184 170.597 cv
244.667 170.722 245.13 170.904 245.588 171.096 cv
245.573 171.09 245.559 171.084 245.546 171.079 cv
245.62 171.119 245.688 171.173 245.777 171.149 cv
245.833 171.134 245.881 171.088 245.895 171.03 cv
245.895 171.03 245.895 171.029 245.896 171.029 cv
245.916 170.95 245.882 170.88 245.816 170.835 cv
245.625 170.704 245.409 170.605 245.201 170.501 cv
244.997 170.399 244.788 170.309 244.576 170.226 cv
244.01 170.001 243.422 169.851 242.826 169.734 cv
241.722 169.517 240.593 169.422 239.47 169.396 cv
239.283 169.392 239.095 169.39 238.908 169.39 cv
237.928 169.39 236.949 169.445 235.974 169.534 cv
235.974 169.534 li
235.974 169.534 li
cp
f
125.459 201.475 mo
125.469 201.479 125.479 201.483 125.488 201.487 cv
125.473 201.481 125.459 201.475 125.444 201.469 cv
125.449 201.471 125.454 201.473 125.459 201.475 cv
125.459 201.475 li
125.459 201.475 li
cp
149.073 204.464 mo
149.083 204.463 149.092 204.462 149.101 204.461 cv
149.108 204.46 149.115 204.459 149.123 204.458 cv
149.107 204.46 149.09 204.462 149.073 204.464 cv
149.073 204.464 li
149.073 204.464 li
cp
136.624 204.414 mo
136.637 204.416 136.65 204.417 136.663 204.419 cv
136.65 204.417 136.637 204.416 136.624 204.414 cv
136.624 204.414 li
136.624 204.414 li
cp
119.302 197.93 mo
119.318 197.942 119.334 197.955 119.351 197.968 cv
119.334 197.955 119.318 197.942 119.302 197.93 cv
119.302 197.93 li
119.302 197.93 li
cp
170.99 195.836 mo
170.933 195.881 170.877 195.924 170.819 195.968 cv
170.877 195.924 170.933 195.88 170.99 195.836 cv
170.99 195.836 li
170.99 195.836 li
cp
176.703 189.658 mo
176.694 189.682 176.684 189.706 176.674 189.73 cv
176.684 189.706 176.694 189.682 176.703 189.658 cv
176.703 189.658 li
176.703 189.658 li
cp
166.207 177.164 mo
166.29 177.198 166.373 177.234 166.456 177.269 cv
166.373 177.234 166.29 177.199 166.207 177.164 cv
166.207 177.164 li
166.207 177.164 li
cp
142.465 172.042 mo
142.664 172.024 142.857 172.012 143.057 172.009 cv
143.567 172 144.075 171.992 144.584 171.982 cv
144.719 171.98 144.856 171.974 144.992 171.969 cv
145.676 172.038 146.358 172.108 147.041 172.181 cv
147.739 172.283 148.438 172.386 149.136 172.49 cv
149.619 172.56 150.101 172.63 150.583 172.701 cv
150.747 172.725 150.913 172.744 151.075 172.776 cv
151.954 172.948 152.833 173.123 153.712 173.296 cv
154.275 173.407 154.847 173.497 155.404 173.642 cv
155.715 173.722 156.026 173.803 156.337 173.884 cv
156.503 173.948 156.669 174.015 156.833 174.084 cv
157.31 174.287 157.774 174.514 158.241 174.738 cv
158.416 174.822 158.587 174.911 158.76 174.997 cv
158.82 175.028 158.88 175.057 158.941 175.087 cv
159.058 175.147 159.214 175.258 159.353 175.223 cv
159.518 175.181 159.553 174.94 159.401 174.858 cv
159.227 174.763 159.061 174.656 158.895 174.548 cv
158.963 174.565 159.031 174.583 159.099 174.6 cv
159.323 174.659 159.545 174.748 159.764 174.821 cv
160.685 175.124 161.605 175.429 162.525 175.734 cv
162.672 175.781 162.816 175.837 162.959 175.893 cv
163.4 176.065 163.842 176.239 164.283 176.41 cv
165.01 176.694 165.741 176.969 166.462 177.272 cv
168.84 178.284 171.181 179.418 173.253 180.977 cv
174.116 181.658 174.917 182.421 175.604 183.282 cv
176.029 183.855 176.399 184.463 176.694 185.112 cv
176.899 185.632 177.05 186.168 177.14 186.719 cv
177.189 187.199 177.187 187.677 177.135 188.156 cv
177.054 188.642 176.921 189.11 176.74 189.568 cv
176.598 189.885 176.44 190.191 176.26 190.489 cv
176.07 190.804 175.853 191.103 175.63 191.395 cv
174.954 192.249 174.193 193.023 173.401 193.771 cv
172.576 194.548 171.706 195.277 170.811 195.974 cv
168.544 197.705 166.095 199.195 163.491 200.362 cv
162.76 200.658 162.027 200.949 161.295 201.241 cv
160.679 201.489 160.043 201.691 159.417 201.911 cv
158.948 202.074 158.479 202.24 158.011 202.405 cv
157.518 202.577 157.019 202.725 156.518 202.872 cv
154.399 203.491 152.244 203.974 150.064 204.32 cv
149.751 204.369 149.437 204.414 149.123 204.458 cv
149.152 204.454 149.181 204.45 149.21 204.447 cv
149.173 204.451 149.137 204.456 149.101 204.461 cv
149.071 204.465 149.042 204.469 149.012 204.473 cv
149.032 204.47 149.053 204.467 149.073 204.464 cv
147.058 204.725 145.034 204.864 143.002 204.866 cv
140.864 204.868 138.726 204.696 136.607 204.411 cv
132.808 203.878 129.037 202.958 125.488 201.487 cv
125.511 201.497 125.533 201.507 125.556 201.516 cv
125.524 201.503 125.491 201.489 125.459 201.475 cv
125.434 201.465 125.408 201.454 125.383 201.444 cv
125.404 201.452 125.424 201.46 125.444 201.469 cv
123.311 200.557 121.273 199.429 119.425 198.024 cv
118.279 197.13 117.22 196.132 116.318 194.99 cv
115.728 194.209 115.227 193.374 114.833 192.478 cv
114.52 191.707 114.295 190.909 114.17 190.087 cv
114.089 189.404 114.08 188.715 114.155 188.03 cv
114.283 187.176 114.528 186.355 114.857 185.556 cv
115.075 185.054 115.315 184.564 115.586 184.087 cv
115.866 183.591 116.187 183.118 116.53 182.665 cv
117.253 181.749 118.095 180.941 119.01 180.219 cv
119.67 179.717 120.357 179.252 121.066 178.822 cv
121.576 178.513 122.095 178.207 122.63 177.943 cv
123.353 177.587 124.076 177.229 124.8 176.872 cv
125.23 176.66 125.67 176.475 126.111 176.286 cv
126.717 176.029 127.322 175.771 127.927 175.513 cv
128.182 175.406 128.451 175.322 128.713 175.226 cv
129.216 175.042 129.72 174.856 130.225 174.671 cv
130.445 174.591 130.666 174.498 130.891 174.428 cv
131.259 174.317 131.626 174.204 131.994 174.091 cv
132.495 173.938 132.996 173.785 133.496 173.632 cv
133.676 173.577 133.854 173.52 134.037 173.475 cv
134.954 173.256 135.871 173.035 136.788 172.817 cv
137.246 172.707 137.715 172.646 138.178 172.57 cv
138.798 172.466 139.418 172.366 140.038 172.261 cv
140.847 172.189 141.656 172.115 142.465 172.042 cv
142.465 172.042 li
142.465 172.042 li
cp
139.974 169.4 mo
139.398 169.417 138.822 169.483 138.25 169.555 cv
137.668 169.63 137.09 169.718 136.511 169.817 cv
135.949 169.914 135.4 170.057 134.851 170.212 cv
134.389 170.341 133.927 170.48 133.464 170.603 cv
132.997 170.726 132.719 171.229 132.845 171.69 cv
132.906 171.911 133.054 172.102 133.252 172.218 cv
133.323 172.248 133.393 172.278 133.464 172.306 cv
133.471 172.308 133.479 172.311 133.488 172.313 cv
132.602 172.571 131.717 172.828 130.832 173.085 cv
130.202 173.269 129.588 173.506 128.969 173.724 cv
128.362 173.939 127.753 174.143 127.158 174.389 cv
126.333 174.732 125.509 175.076 124.682 175.418 cv
124.403 175.534 124.134 175.673 123.861 175.805 cv
123.377 176.04 122.893 176.274 122.408 176.509 cv
121.057 177.162 119.759 177.922 118.541 178.803 cv
117.687 179.42 116.885 180.105 116.161 180.868 cv
115.425 181.646 114.785 182.527 114.252 183.454 cv
113.999 183.893 113.78 184.351 113.575 184.815 cv
113.354 185.318 113.153 185.831 112.996 186.36 cv
112.684 187.409 112.564 188.513 112.629 189.605 cv
112.759 191.766 113.629 193.84 114.901 195.571 cv
116.15 197.271 117.745 198.664 119.468 199.866 cv
121.227 201.094 123.139 202.071 125.117 202.892 cv
127.121 203.726 129.204 204.362 131.311 204.868 cv
133.483 205.391 135.689 205.756 137.908 206.001 cv
140.122 206.244 142.348 206.345 144.577 206.283 cv
146.811 206.22 149.038 205.99 151.244 205.638 cv
153.427 205.29 155.58 204.791 157.703 204.178 cv
158.555 203.934 159.39 203.633 160.231 203.353 cv
160.82 203.156 161.411 202.967 161.992 202.746 cv
162.957 202.382 163.925 202.033 164.868 201.618 cv
166.829 200.755 168.687 199.677 170.452 198.468 cv
172.225 197.254 173.894 195.89 175.438 194.397 cv
176.214 193.646 176.922 192.838 177.568 191.975 cv
178.213 191.115 178.711 190.118 178.989 189.079 cv
179.127 188.553 179.195 188.002 179.223 187.461 cv
179.254 186.87 179.175 186.274 179.067 185.694 cv
178.872 184.649 178.417 183.651 177.864 182.749 cv
177.301 181.83 176.578 181.004 175.806 180.254 cv
175.022 179.495 174.132 178.839 173.231 178.225 cv
172.366 177.637 171.445 177.137 170.517 176.656 cv
169.563 176.159 168.584 175.719 167.597 175.295 cv
166.683 174.901 165.757 174.541 164.83 174.175 cv
164.259 173.948 163.691 173.7 163.106 173.506 cv
162.181 173.195 161.254 172.885 160.329 172.575 cv
160.123 172.507 159.916 172.424 159.707 172.368 cv
159.406 172.29 159.106 172.211 158.806 172.133 cv
157.867 171.887 156.929 171.642 155.99 171.397 cv
155.853 171.36 155.717 171.331 155.577 171.303 cv
155.139 171.217 154.701 171.131 154.264 171.044 cv
153.402 170.874 152.54 170.704 151.678 170.533 cv
151.506 170.5 151.33 170.481 151.157 170.456 cv
150.667 170.384 150.178 170.312 149.688 170.24 cv
149.173 170.165 148.658 170.09 148.143 170.014 cv
147.816 169.967 147.486 169.906 147.157 169.875 cv
146.361 169.797 145.566 169.716 144.771 169.635 cv
144.332 169.593 143.893 169.548 143.455 169.504 cv
142.822 169.441 142.183 169.424 141.549 169.404 cv
141.262 169.395 140.975 169.39 140.689 169.39 cv
140.45 169.39 140.212 169.393 139.974 169.4 cv
139.974 169.4 li
139.974 169.4 li
cp
f
270.36 247.667 mo
270.269 246.948 270.145 246.242 269.95 245.544 cv
269.735 244.804 269.455 244.078 269.149 243.372 cv
268.615 242.141 267.911 240.987 267.162 239.894 cv
266.375 238.739 265.509 237.653 264.577 236.623 cv
263.672 235.627 262.689 234.707 261.654 233.856 cv
260.566 232.964 259.433 232.148 258.235 231.422 cv
255.89 230.004 253.351 228.932 250.765 228.095 cv
249.476 227.674 248.167 227.314 246.852 227.003 cv
245.771 226.747 244.677 226.505 243.576 226.353 cv
242.449 226.194 241.329 226.034 240.209 225.883 cv
239.832 225.827 239.454 225.779 239.076 225.723 cv
238.796 225.682 238.503 225.689 238.217 225.668 cv
237.031 225.592 235.846 225.523 234.655 225.454 cv
234.518 225.44 234.381 225.44 234.244 225.44 cv
234.049 225.44 li
232.213 225.461 li
231.412 225.468 230.617 225.461 229.816 225.516 cv
229.178 225.564 228.54 225.613 227.902 225.661 cv
227.452 225.696 227.003 225.723 226.554 225.793 cv
226.039 225.868 225.531 225.945 225.017 226.021 cv
224.483 226.104 223.949 226.18 223.422 226.304 cv
222.907 226.422 222.399 226.553 221.885 226.664 cv
221.474 226.761 221.168 227.169 221.103 227.597 cv
220.83 227.653 220.563 227.715 220.289 227.77 cv
220.061 227.819 219.827 227.861 219.606 227.929 cv
218.486 228.248 217.372 228.573 216.259 228.898 cv
216.05 228.953 215.848 229.022 215.646 229.098 cv
215.073 229.306 214.5 229.52 213.927 229.735 cv
213.419 229.921 212.911 230.108 212.403 230.295 cv
212.156 230.385 211.921 230.489 211.687 230.592 cv
211.023 230.869 210.365 231.173 209.714 231.477 cv
207.311 232.618 205.006 233.988 202.85 235.599 cv
201.762 236.415 200.708 237.293 199.705 238.234 cv
198.76 239.126 197.868 240.094 197.087 241.153 cv
196.696 241.685 196.325 242.224 196.006 242.812 cv
195.674 243.435 195.394 244.098 195.166 244.776 cv
194.73 246.063 194.567 247.46 194.599 248.822 cv
194.619 249.541 194.717 250.26 194.847 250.966 cv
194.977 251.678 195.179 252.377 195.42 253.054 cv
195.648 253.698 195.928 254.327 196.247 254.928 cv
196.592 255.565 197.002 256.159 197.439 256.734 cv
198.266 257.812 199.281 258.719 200.376 259.486 cv
201.489 260.275 202.726 260.842 203.977 261.346 cv
204.576 261.589 205.181 261.803 205.787 261.996 cv
206.119 262.1 206.451 262.211 206.79 262.308 cv
207.024 262.384 207.259 262.446 207.493 262.508 cv
207.884 262.598 208.288 262.702 208.678 262.799 cv
208.841 262.308 208.985 261.803 209.108 261.284 cv
209.154 261.104 209.193 260.918 209.232 260.738 cv
208.906 260.662 208.574 260.579 208.249 260.503 cv
207.975 260.433 207.701 260.365 207.434 260.288 cv
207.161 260.205 206.894 260.122 206.627 260.046 cv
205.605 259.735 204.602 259.362 203.625 258.933 cv
202.564 258.442 201.567 257.854 200.642 257.121 cv
199.939 256.519 199.301 255.848 198.741 255.094 cv
198.214 254.348 197.777 253.546 197.426 252.695 cv
197.087 251.775 196.84 250.821 196.703 249.845 cv
196.605 248.974 196.598 248.096 196.69 247.224 cv
196.801 246.464 196.99 245.724 197.256 245.005 cv
197.608 244.168 198.044 243.386 198.565 242.653 cv
199.835 240.945 201.378 239.479 202.987 238.151 cv
205.794 235.889 208.88 234.071 212.116 232.605 cv
213.178 232.135 214.266 231.74 215.346 231.325 cv
215.724 231.18 216.095 231.035 216.467 230.889 cv
216.792 230.765 217.137 230.682 217.469 230.578 cv
218.108 230.378 218.746 230.177 219.384 229.984 cv
219.677 229.894 219.97 229.783 220.263 229.707 cv
221.338 229.444 222.406 229.188 223.473 228.926 cv
223.584 228.898 223.701 228.87 223.812 228.843 cv
224.086 228.828 224.353 228.815 224.626 228.787 cv
225.251 228.732 225.883 228.677 226.515 228.621 cv
227.407 228.538 228.299 228.497 229.185 228.441 cv
229.562 228.414 229.947 228.365 230.318 228.365 cv
230.708 228.365 231.099 228.358 231.483 228.358 cv
232.128 228.351 232.766 228.344 233.411 228.338 cv
233.45 228.351 233.495 228.358 233.534 228.372 cv
233.926 228.469 234.303 228.607 234.687 228.725 cv
234.694 228.725 234.694 228.732 234.7 228.739 cv
234.824 228.863 235.019 228.863 235.143 228.739 cv
235.241 228.635 235.254 228.497 235.202 228.372 cv
236.491 228.455 237.781 228.531 239.07 228.614 cv
239.291 228.628 239.519 228.677 239.74 228.704 cv
240.261 228.78 240.789 228.856 241.317 228.932 cv
241.968 229.022 242.625 229.112 243.283 229.209 cv
246.884 229.866 250.447 230.841 253.826 232.328 cv
256.008 233.324 258.085 234.575 259.98 236.097 cv
261.738 237.563 263.314 239.251 264.701 241.111 cv
265.632 242.418 266.472 243.808 267.097 245.316 cv
267.436 246.208 267.683 247.121 267.833 248.075 cv
267.905 248.76 267.911 249.445 267.846 250.136 cv
267.761 250.696 267.625 251.242 267.436 251.775 cv
267.202 252.307 266.922 252.805 266.596 253.282 cv
266.114 253.912 265.541 254.465 264.942 254.97 cv
263.978 255.738 262.936 256.395 261.882 257.003 cv
260.813 257.619 259.713 258.165 258.599 258.67 cv
258.573 258.684 258.547 258.698 258.521 258.712 cv
258.502 258.719 258.475 258.732 258.456 258.739 cv
258.072 258.905 257.681 259.057 257.297 259.209 cv
256.711 259.445 256.125 259.68 255.539 259.915 cv
254.718 260.247 253.872 260.503 253.031 260.786 cv
252.667 260.911 252.309 261.056 251.938 261.16 cv
251.534 261.277 251.13 261.395 250.726 261.512 cv
250.108 261.692 249.483 261.872 248.864 262.052 cv
248.642 262.121 248.421 262.183 248.193 262.239 cv
247.392 262.425 246.591 262.619 245.79 262.805 cv
245.334 262.909 244.879 263.041 244.416 263.117 cv
243.114 263.331 241.805 263.546 240.503 263.753 cv
239.532 263.829 238.569 263.912 237.598 263.988 cv
237.103 264.023 236.615 264.064 236.12 264.106 cv
235.918 264.119 235.716 264.113 235.508 264.113 cv
231.816 264.113 li
231.6 264.113 231.392 264.119 231.177 264.106 cv
230.721 264.071 230.266 264.036 229.81 264.009 cv
228.891 263.94 227.967 263.878 227.049 263.808 cv
226.677 263.788 226.313 263.753 225.948 263.705 cv
224.49 263.525 223.037 263.338 221.578 263.158 cv
220.66 262.999 219.736 262.847 218.818 262.688 cv
218.069 262.564 217.313 262.453 216.571 262.308 cv
215.451 262.086 214.324 261.879 213.204 261.644 cv
212.501 261.506 211.798 261.353 211.101 261.187 cv
210.886 261.139 210.671 261.084 210.456 261.035 cv
210.222 261.312 209.981 261.581 209.746 261.851 cv
209.44 262.19 209.121 262.515 208.789 262.826 cv
209.401 262.979 210.02 263.124 210.632 263.269 cv
210.938 263.345 211.244 263.435 211.55 263.497 cv
211.576 263.504 211.596 263.504 211.622 263.511 cv
212.612 263.705 213.608 263.912 214.598 264.113 cv
215.268 264.244 215.939 264.389 216.616 264.507 cv
217.841 264.714 219.065 264.929 220.289 265.136 cv
220.98 265.254 221.67 265.358 222.373 265.448 cv
223.591 265.607 224.815 265.765 226.046 265.925 cv
226.73 266.014 227.42 266.042 228.104 266.097 cv
229.152 266.174 230.2 266.257 231.249 266.333 cv
231.431 266.346 231.614 266.346 231.789 266.34 cv
232.056 266.34 li
232.708 266.34 233.359 266.346 234.01 266.346 cv
234.576 266.353 235.136 266.353 235.703 266.353 cv
235.892 266.353 236.074 266.353 236.263 266.34 cv
237.455 266.25 238.653 266.16 239.851 266.07 cv
240.197 266.042 240.542 266.029 240.88 265.973 cv
241.29 265.911 241.701 265.848 242.111 265.78 cv
243.114 265.627 244.116 265.468 245.113 265.316 cv
245.211 265.295 245.315 265.268 245.406 265.247 cv
245.679 265.185 245.947 265.122 246.214 265.06 cv
246.865 264.915 247.516 264.763 248.167 264.617 cv
248.447 264.555 248.74 264.5 249.02 264.424 cv
249.489 264.285 249.965 264.154 250.433 264.023 cv
251.26 263.788 252.087 263.573 252.901 263.303 cv
253.507 263.103 254.113 262.903 254.718 262.702 cv
255.083 262.577 255.461 262.474 255.819 262.335 cv
256.789 261.955 257.759 261.574 258.723 261.194 cv
259.615 260.848 260.488 260.433 261.354 260.011 cv
262.546 259.431 263.705 258.781 264.831 258.061 cv
265.951 257.342 267.026 256.519 267.957 255.53 cv
268.406 255.046 268.797 254.486 269.149 253.919 cv
269.527 253.297 269.813 252.605 270.034 251.906 cv
270.249 251.222 270.347 250.503 270.412 249.79 cv
270.484 249.085 270.445 248.372 270.36 247.667 cv
cp
f
215.457 257.149 mo
215.431 257.377 215.405 257.605 215.373 257.833 cv
215.36 257.93 215.36 257.965 215.327 258.048 cv
215.275 258.2 215.223 258.352 215.171 258.504 cv
215.093 258.719 215.008 258.898 214.91 259.092 cv
214.852 259.202 214.8 259.32 214.735 259.424 cv
214.266 260.192 213.758 260.938 213.204 261.644 cv
213.178 261.678 213.152 261.713 213.126 261.747 cv
212.826 262.121 212.527 262.488 212.221 262.854 cv
212.026 263.075 211.823 263.297 211.622 263.511 cv
211.517 263.629 211.413 263.739 211.302 263.857 cv
211.042 264.134 210.762 264.403 210.482 264.652 cv
210.098 264.991 209.707 265.33 209.303 265.634 cv
208.952 265.897 208.607 266.174 208.242 266.416 cv
208.053 266.533 207.877 266.665 207.682 266.775 cv
207.422 266.934 207.161 267.073 206.881 267.183 cv
206.608 267.294 206.276 267.335 206.002 267.218 cv
205.82 267.17 205.657 267.073 205.527 266.927 cv
205.468 266.851 205.409 266.775 205.357 266.692 cv
205.26 266.519 205.207 266.326 205.207 266.118 cv
205.207 265.821 205.292 265.551 205.429 265.302 cv
205.468 265.226 205.513 265.15 205.552 265.081 cv
205.605 264.97 205.657 264.866 205.709 264.756 cv
205.845 264.479 205.982 264.202 206.113 263.926 cv
206.327 263.463 206.523 262.992 206.718 262.515 cv
206.744 262.446 206.77 262.377 206.79 262.308 cv
207.031 261.644 207.246 260.973 207.434 260.288 cv
207.611 259.659 207.76 259.023 207.89 258.38 cv
208.17 256.983 208.431 255.586 208.685 254.189 cv
208.718 253.905 208.75 253.629 208.776 253.345 cv
208.796 253.172 208.9 253.027 209.075 253.027 cv
209.212 253.027 209.329 253.124 209.362 253.262 cv
209.473 253.67 209.525 254.092 209.59 254.513 cv
209.623 254.728 209.655 254.949 209.675 255.164 cv
209.688 255.365 209.727 255.579 209.727 255.779 cv
209.727 256.236 209.727 256.685 209.707 257.142 cv
209.681 257.612 209.635 258.082 209.59 258.552 cv
209.512 259.285 209.388 260.019 209.232 260.738 cv
209.193 260.918 209.154 261.104 209.108 261.284 cv
208.985 261.803 208.841 262.308 208.678 262.799 cv
208.659 262.861 208.639 262.923 208.62 262.986 cv
208.678 262.93 208.737 262.882 208.789 262.826 cv
209.121 262.515 209.44 262.19 209.746 261.851 cv
209.981 261.581 210.222 261.312 210.456 261.035 cv
210.528 260.945 210.599 260.863 210.671 260.772 cv
210.906 260.489 211.134 260.192 211.355 259.894 cv
211.694 259.417 212.026 258.933 212.332 258.435 cv
212.52 258.137 212.703 257.84 212.885 257.543 cv
212.97 257.405 213.068 257.28 213.165 257.149 cv
213.243 257.031 213.354 256.858 213.432 256.775 cv
213.556 256.657 213.673 256.54 213.79 256.415 cv
214.109 256.097 214.585 256.014 214.975 256.257 cv
215.119 256.346 215.236 256.471 215.321 256.63 cv
215.412 256.789 215.457 256.962 215.457 257.149 cv
cp
f
44.1057 259.914 mo
44.1726 259.923 44.24 259.932 44.3074 259.942 cv
44.24 259.932 44.1731 259.923 44.1057 259.914 cv
44.1057 259.914 li
44.1057 259.914 li
cp
30.3127 258.534 mo
30.3259 258.54 30.3396 258.546 30.3528 258.552 cv
30.3396 258.546 30.3259 258.54 30.3127 258.534 cv
30.3127 258.534 li
30.3127 258.534 li
cp
28.8127 257.842 mo
29.1321 257.977 29.4524 258.108 29.7732 258.236 cv
30.8396 258.66 31.9314 259.021 33.0276 259.363 cv
35.2156 260.049 37.4475 260.593 39.6951 261.044 cv
40.3962 261.185 41.1003 261.313 41.8069 261.43 cv
41.5291 261.4 41.2522 261.367 40.9753 261.332 cv
40.9285 261.326 40.8811 261.32 40.8337 261.314 cv
37.2561 260.825 33.7068 259.95 30.3689 258.558 cv
29.8435 258.333 29.3235 258.096 28.8127 257.842 cv
28.8127 257.842 li
28.8127 257.842 li
cp
78.2908 257.612 mo
78.2668 257.622 78.2429 257.633 78.219 257.643 cv
78.2429 257.633 78.2668 257.622 78.2908 257.612 cv
78.2908 257.612 li
78.2908 257.612 li
cp
29.8938 256.272 mo
29.925 256.285 29.9558 256.299 29.9875 256.312 cv
29.9563 256.299 29.925 256.285 29.8938 256.272 cv
29.8938 256.272 li
29.8938 256.272 li
cp
29.7625 256.218 mo
29.7825 256.226 29.802 256.234 29.8215 256.242 cv
29.802 256.234 29.7825 256.226 29.7625 256.218 cv
29.7625 256.218 li
29.7625 256.218 li
cp
85.092 253.622 mo
85.0554 253.65 85.0193 253.678 84.9827 253.706 cv
85.0193 253.678 85.0559 253.65 85.092 253.622 cv
85.092 253.622 li
85.092 253.622 li
cp
21.9626 244.648 mo
21.9397 244.678 21.9163 244.708 21.8928 244.739 cv
21.9158 244.708 21.9392 244.678 21.9626 244.648 cv
21.9626 244.648 li
21.9626 244.648 li
cp
26.5564 242.855 mo
26.5452 242.864 26.5339 242.872 26.5227 242.881 cv
26.5339 242.872 26.5452 242.864 26.5564 242.855 cv
26.5564 242.855 li
26.5564 242.855 li
cp
68.5354 233.875 mo
68.5598 233.892 68.5833 233.91 68.6062 233.929 cv
68.5828 233.911 68.5598 233.894 68.5354 233.875 cv
68.5354 233.875 li
68.5354 233.875 li
cp
68.4153 233.782 mo
68.4226 233.788 68.4299 233.794 68.4373 233.8 cv
68.4299 233.794 68.4226 233.788 68.4153 233.782 cv
68.4153 233.782 li
68.4153 233.782 li
cp
37.3049 233.435 mo
37.28 233.446 37.2551 233.456 37.2297 233.467 cv
37.2546 233.456 37.28 233.446 37.3049 233.435 cv
37.3049 233.435 li
37.3049 233.435 li
cp
72.0862 227.944 mo
72.116 227.948 72.1458 227.952 72.176 227.956 cv
72.1458 227.952 72.116 227.948 72.0862 227.944 cv
72.0862 227.944 li
72.0862 227.944 li
cp
71.8997 227.919 mo
71.9578 227.927 72.0164 227.934 72.0745 227.943 cv
72.0164 227.935 71.9578 227.927 71.8997 227.919 cv
71.8997 227.919 li
71.8997 227.919 li
cp
64.7971 227.528 mo
67.2327 227.476 69.6633 227.628 72.0769 227.943 cv
73.5081 228.139 74.9333 228.384 76.3376 228.729 cv
77.7693 229.083 79.1892 229.501 80.5559 230.06 cv
82.1091 230.729 83.5891 231.548 84.9392 232.569 cv
85.9812 233.393 86.929 234.321 87.7551 235.361 cv
88.4675 236.305 89.0706 237.317 89.5447 238.401 cv
89.9778 239.468 90.2849 240.571 90.4539 241.711 cv
90.5847 242.809 90.5823 243.91 90.4524 245.01 cv
90.2917 246.106 90.0066 247.17 89.5876 248.196 cv
89.1951 249.079 88.7083 249.901 88.1252 250.672 cv
87.6941 251.215 87.2297 251.726 86.7288 252.207 cv
86.1589 252.753 85.5515 253.263 84.9285 253.747 cv
82.9138 255.278 80.7087 256.571 78.3845 257.572 cv
77.0422 258.131 75.6638 258.572 74.2571 258.937 cv
74.2209 258.947 74.1843 258.956 74.1477 258.966 cv
74.4934 258.849 74.8396 258.734 75.1848 258.617 cv
75.51 258.508 75.8352 258.399 76.1594 258.291 cv
76.3889 258.213 76.6111 258.113 76.8362 258.022 cv
77.2952 257.836 77.7507 257.64 78.2122 257.459 cv
78.3923 257.387 78.5383 257.303 78.6399 257.13 cv
78.7366 256.964 78.7629 256.761 78.7117 256.577 cv
78.6101 256.204 78.2058 255.968 77.8308 256.076 cv
76.6184 256.427 75.3992 256.751 74.1853 257.095 cv
73.5579 257.272 72.9324 257.454 72.3 257.609 cv
71.2839 257.86 70.2688 258.11 69.2527 258.361 cv
68.6946 258.499 68.1277 258.594 67.5637 258.704 cv
66.2869 258.952 65.0134 259.23 63.7249 259.413 cv
62.2366 259.623 60.7468 259.827 59.2585 260.045 cv
56.7795 260.303 54.2952 260.464 51.8005 260.449 cv
49.2229 260.435 46.6497 260.25 44.0955 259.913 cv
41.6941 259.58 39.3171 259.112 36.9646 258.527 cv
35.7639 258.228 34.572 257.892 33.3923 257.519 cv
32.2029 257.143 31.0208 256.737 29.8669 256.261 cv
28.948 255.869 28.0422 255.451 27.1648 254.973 cv
26.3137 254.511 25.4968 253.98 24.7244 253.395 cv
23.9148 252.758 23.1628 252.047 22.5066 251.253 cv
22.4646 251.072 22.4294 250.889 22.4006 250.703 cv
22.3372 250.15 22.3362 249.6 22.3982 249.045 cv
22.4958 248.402 22.6648 247.781 22.9065 247.177 cv
23.197 246.516 23.5667 245.903 23.9983 245.325 cv
24.7507 244.377 25.6536 243.557 26.6077 242.816 cv
27.5359 242.113 28.5095 241.477 29.5237 240.904 cv
30.5696 240.312 31.6648 239.804 32.7703 239.336 cv
33.26 239.133 33.7532 238.939 34.2493 238.752 cv
34.7302 238.572 35.2131 238.384 35.7019 238.227 cv
36.0066 238.13 36.3127 238.031 36.6189 237.932 cv
37.5491 237.634 38.4792 237.335 39.4104 237.035 cv
40.0798 236.821 40.7649 236.646 41.4402 236.452 cv
42.1169 236.259 42.7927 236.054 43.4729 235.872 cv
44.9744 235.472 46.4709 235.053 47.9822 234.69 cv
48.9529 234.456 49.9236 234.222 50.8958 233.988 cv
51.0608 233.949 51.2268 233.918 51.3943 233.884 cv
51.8953 233.785 52.3962 233.685 52.8982 233.585 cv
53.7302 233.419 54.5623 233.227 55.4026 233.104 cv
56.4402 232.949 57.4792 232.797 58.5178 232.643 cv
59.6223 232.516 60.7292 232.425 61.843 232.425 cv
62.3821 232.425 62.9216 232.448 63.4592 232.475 cv
64.0408 232.502 64.6194 232.532 65.1975 232.603 cv
65.9421 232.711 66.6868 232.873 67.3875 233.152 cv
67.7483 233.316 68.075 233.527 68.3923 233.765 cv
68.4636 233.821 68.5354 233.876 68.6077 233.931 cv
68.6213 233.943 68.6345 233.955 68.6477 233.968 cv
68.7781 234.279 69.3113 234.257 69.3855 233.904 cv
69.4226 233.732 69.3606 233.566 69.2395 233.443 cv
69.0876 233.289 68.9084 233.158 68.7375 233.028 cv
68.5295 232.867 68.3167 232.718 68.0896 232.584 cv
67.8386 232.434 67.5598 232.326 67.2874 232.224 cv
66.802 232.042 66.2917 231.928 65.7844 231.824 cv
65.2024 231.704 64.6082 231.647 64.0154 231.601 cv
62.8831 231.512 61.7488 231.439 60.6116 231.47 cv
59.8455 231.492 59.0696 231.535 58.3088 231.636 cv
57.3074 231.771 56.3054 231.905 55.3035 232.037 cv
54.6736 232.122 54.053 232.245 53.429 232.363 cv
52.5266 232.533 51.6238 232.703 50.7209 232.874 cv
50.5061 232.913 50.2932 232.972 50.0803 233.021 cv
49.5378 233.147 48.9958 233.273 48.4534 233.399 cv
47.8293 233.544 47.2029 233.678 46.5823 233.84 cv
45.5867 234.099 44.5896 234.359 43.5925 234.618 cv
42.1228 235.001 40.6658 235.431 39.2034 235.843 cv
39.0085 235.898 38.8162 235.965 38.6228 236.027 cv
38.1038 236.192 37.5847 236.357 37.0662 236.52 cv
36.5964 236.671 36.1252 236.821 35.6541 236.97 cv
35.072 237.155 34.4983 237.367 33.9255 237.578 cv
31.7854 238.368 29.6873 239.308 27.7468 240.513 cv
26.8025 241.099 25.8977 241.754 25.0417 242.462 cv
24.2009 243.159 23.4358 243.941 22.782 244.815 cv
22.1267 245.692 21.6404 246.689 21.3416 247.741 cv
21.2361 248.111 21.1648 248.491 21.116 248.873 cv
20.9958 248.516 20.905 248.151 20.8445 247.777 cv
20.8147 247.478 20.8069 247.181 20.8318 246.882 cv
20.8914 246.558 20.9851 246.245 21.1042 245.938 cv
21.3347 245.452 21.6672 245.037 21.9919 244.611 cv
22.3337 244.177 22.6956 243.76 23.0583 243.345 cv
23.4934 242.847 23.9324 242.353 24.3865 241.874 cv
25.2341 240.981 26.1555 240.153 27.1233 239.392 cv
27.8811 238.812 28.6614 238.26 29.4446 237.716 cv
30.259 237.15 31.0911 236.616 31.9446 236.114 cv
33.6252 235.125 35.3757 234.261 37.1677 233.493 cv
39.2644 232.615 41.4099 231.861 43.5837 231.197 cv
44.0286 231.06 44.4749 230.924 44.9255 230.809 cv
45.3201 230.71 45.7146 230.611 46.1101 230.51 cv
47.2112 230.233 48.3123 229.955 49.4143 229.676 cv
49.7888 229.582 50.1638 229.487 50.5383 229.393 cv
50.6458 229.365 50.7512 229.339 50.8586 229.319 cv
52.0432 229.1 53.2268 228.881 54.4119 228.662 cv
55.0408 228.546 55.6682 228.43 56.2971 228.314 cv
56.7771 228.226 57.2566 228.153 57.7405 228.086 cv
60.0823 227.778 62.4348 227.578 64.7971 227.528 cv
64.7971 227.528 li
64.7971 227.528 li
cp
64.0979 225.467 mo
61.7273 225.543 59.3684 225.784 57.0193 226.11 cv
56.2263 226.219 55.4446 226.373 54.6589 226.519 cv
53.5535 226.724 52.4475 226.93 51.3416 227.135 cv
50.8992 227.218 50.4524 227.284 50.0168 227.395 cv
48.1482 227.871 46.28 228.346 44.4114 228.823 cv
43.9939 228.927 43.5837 229.053 43.1716 229.179 cv
42.0647 229.516 40.9656 229.878 39.8767 230.265 cv
37.6711 231.051 35.4988 231.953 33.4089 233.009 cv
32.406 233.516 31.4246 234.066 30.4631 234.647 cv
29.4983 235.229 28.5745 235.872 27.6584 236.526 cv
26.7068 237.207 25.7659 237.904 24.8777 238.666 cv
24.0481 239.378 23.2673 240.145 22.532 240.952 cv
21.7708 241.786 21.0271 242.642 20.3386 243.539 cv
20.031 243.94 19.7131 244.339 19.4739 244.786 cv
19.3352 245.047 19.2312 245.331 19.1321 245.61 cv
19.0295 245.893 18.9626 246.188 18.9192 246.486 cv
18.8752 246.782 18.8523 247.071 18.8596 247.371 cv
18.8655 247.669 18.9133 247.966 18.9563 248.261 cv
19.0413 248.847 19.2327 249.409 19.4631 249.952 cv
19.8972 250.975 20.5442 251.898 21.26 252.742 cv
21.4802 253.001 21.7122 253.249 21.9529 253.488 cv
22.0647 253.704 22.1838 253.916 22.3098 254.122 cv
22.8694 255.039 23.6116 255.855 24.4211 256.558 cv
26.0828 258.001 28.0745 258.995 30.0901 259.841 cv
32.198 260.727 34.407 261.384 36.6355 261.886 cv
38.9417 262.407 41.2908 262.736 43.6487 262.911 cv
46.0012 263.088 48.3577 263.081 50.7141 262.982 cv
52.8669 262.89 55.0144 262.726 57.1638 262.578 cv
58.658 262.475 60.1492 262.352 61.6423 262.231 cv
63.2444 262.102 64.8425 261.954 66.4421 261.803 cv
67.033 261.747 67.6208 261.692 68.2092 261.615 cv
69.1658 261.492 70.1208 261.37 71.0759 261.247 cv
72.0242 261.124 72.9685 260.945 73.9036 260.747 cv
75.0247 260.51 76.1365 260.211 77.2258 259.854 cv
78.3352 259.491 79.4182 259.038 80.4749 258.544 cv
81.509 258.061 82.5085 257.508 83.4807 256.91 cv
84.4539 256.312 85.3933 255.665 86.2961 254.966 cv
87.1736 254.285 88.0247 253.562 88.7825 252.749 cv
89.53 251.948 90.2029 251.061 90.7458 250.111 cv
91.0281 249.615 91.2576 249.095 91.4797 248.57 cv
91.7034 248.039 91.8826 247.491 92.0334 246.937 cv
92.3323 245.828 92.4817 244.668 92.5173 243.52 cv
92.5535 242.352 92.4124 241.173 92.1658 240.033 cv
91.9221 238.902 91.5046 237.809 91.01 236.767 cv
90.5271 235.748 89.8982 234.809 89.2034 233.925 cv
87.8323 232.177 86.1023 230.729 84.2004 229.59 cv
82.2502 228.421 80.113 227.602 77.926 226.998 cv
75.6809 226.378 73.3855 226.004 71.0735 225.738 cv
69.3035 225.535 67.5247 225.44 65.7444 225.44 cv
65.1956 225.44 64.6467 225.449 64.0979 225.467 cv
64.0979 225.467 li
64.0979 225.467 li
cp
f
36.3948 268.101 mo
36.3821 268.106 36.3699 268.111 36.3577 268.116 cv
36.3699 268.111 36.3821 268.106 36.3948 268.101 cv
36.3948 268.101 li
36.3948 268.101 li
cp
30.9768 268.015 mo
30.991 268.02 31.0051 268.026 31.0198 268.032 cv
31.0051 268.027 30.991 268.021 30.9768 268.015 cv
30.9768 268.015 li
30.9768 268.015 li
cp
34.4475 264.628 mo
34.4783 264.641 34.5095 264.654 34.5403 264.667 cv
34.5095 264.655 34.4783 264.641 34.4475 264.628 cv
34.4475 264.628 li
34.4475 264.628 li
cp
33.1482 264.137 mo
33.1814 264.149 33.2146 264.16 33.2483 264.173 cv
33.6467 264.315 34.0437 264.461 34.4338 264.623 cv
34.7854 264.776 35.1311 264.943 35.4705 265.12 cv
35.8137 265.3 36.137 265.507 36.4465 265.737 cv
36.6414 265.892 36.8235 266.059 36.9841 266.249 cv
37.0706 266.37 37.1467 266.494 37.2117 266.628 cv
37.2405 266.706 37.2639 266.785 37.282 266.867 cv
37.2869 266.949 37.2859 267.031 37.281 267.114 cv
37.2659 267.189 37.2458 267.261 37.2209 267.334 cv
37.176 267.427 37.1243 267.517 37.0657 267.605 cv
36.9915 267.692 36.9124 267.772 36.8254 267.846 cv
36.6658 267.957 36.4993 268.05 36.322 268.13 cv
35.8289 268.324 35.3137 268.454 34.7888 268.529 cv
34.1345 268.603 33.4812 268.591 32.8279 268.511 cv
32.2166 268.421 31.615 268.271 31.0413 268.041 cv
30.7014 267.893 30.3811 267.719 30.0818 267.502 cv
29.8987 267.355 29.7336 267.194 29.5847 267.013 cv
29.4929 266.884 29.4124 266.75 29.3459 266.607 cv
29.302 266.488 29.2678 266.369 29.2439 266.245 cv
29.2356 266.149 29.2361 266.054 29.2439 265.957 cv
29.2605 265.866 29.2834 265.779 29.3127 265.691 cv
29.3572 265.6 29.4089 265.516 29.4675 265.433 cv
29.5393 265.349 29.615 265.273 29.699 265.201 cv
29.9441 265.024 30.2073 264.885 30.4851 264.764 cv
31.2449 264.463 32.0496 264.281 32.8572 264.171 cv
32.9539 264.158 33.051 264.147 33.1482 264.137 cv
33.1482 264.137 li
33.1482 264.137 li
cp
31.4226 262.555 mo
31.2996 262.627 31.2063 262.746 31.1692 262.885 cv
31.1296 263.027 31.1501 263.182 31.2244 263.309 cv
31.3005 263.44 31.4153 263.516 31.554 263.564 cv
31.5681 263.569 31.5823 263.573 31.5964 263.578 cv
31.3909 263.617 31.1868 263.662 30.9836 263.712 cv
30.3572 263.869 29.718 264.094 29.1931 264.478 cv
28.9348 264.667 28.7244 264.902 28.5618 265.178 cv
28.3894 265.47 28.3201 265.83 28.3191 266.166 cv
28.3176 266.509 28.4324 266.838 28.5701 267.146 cv
28.6321 267.287 28.7195 267.416 28.8079 267.54 cv
28.9192 267.696 29.0437 267.84 29.1775 267.976 cv
29.3987 268.198 29.6604 268.388 29.9246 268.555 cv
30.2175 268.741 30.5378 268.88 30.8582 269.013 cv
31.5168 269.289 32.2283 269.441 32.9363 269.53 cv
33.6331 269.617 34.3298 269.63 35.0295 269.548 cv
35.7517 269.464 36.4641 269.301 37.1287 269.002 cv
37.7766 268.711 38.3049 268.115 38.4749 267.421 cv
38.5193 267.243 38.5325 267.049 38.53 266.867 cv
38.5286 266.688 38.4929 266.504 38.4417 266.333 cv
38.3899 266.164 38.3113 266.002 38.2312 265.846 cv
38.1379 265.667 38.0125 265.509 37.8889 265.351 cv
37.7024 265.112 37.4661 264.915 37.2292 264.729 cv
37.0076 264.557 36.7825 264.394 36.5471 264.245 cv
36.6628 264.268 36.7781 264.294 36.8933 264.322 cv
37.0105 264.35 37.1335 264.286 37.1658 264.166 cv
37.2004 264.042 37.1238 263.937 37.0105 263.894 cv
36.3445 263.64 35.6438 263.495 34.9333 263.427 cv
34.7649 263.355 34.5955 263.285 34.4255 263.219 cv
34.2512 263.149 34.0754 263.076 33.8962 263.02 cv
33.7561 262.976 33.615 262.931 33.4739 262.888 cv
33.2219 262.808 32.9685 262.712 32.7087 262.657 cv
32.4231 262.597 32.134 262.555 31.8484 262.499 cv
31.7952 262.488 31.7439 262.482 31.6931 262.482 cv
31.5999 262.482 31.5105 262.503 31.4226 262.555 cv
31.4226 262.555 li
31.4226 262.555 li
cp
f
26.0481 271.472 mo
26.0481 271.472 26.0481 271.472 26.0481 271.472 cv
26.0461 271.477 26.0442 271.482 26.0417 271.487 cv
26.0437 271.482 26.0461 271.477 26.0481 271.472 cv
26.0481 271.472 li
26.0481 271.472 li
cp
23.9841 271.445 mo
23.9861 271.457 23.9875 271.468 23.9895 271.48 cv
23.9871 271.469 23.9856 271.457 23.9841 271.445 cv
23.9841 271.445 li
23.9841 271.445 li
cp
26.072 271.381 mo
26.072 271.382 26.072 271.382 26.072 271.383 cv
26.072 271.383 26.0715 271.383 26.0715 271.384 cv
26.0715 271.383 26.0715 271.383 26.0715 271.382 cv
26.072 271.382 26.072 271.381 26.072 271.381 cv
26.072 271.381 li
26.072 271.381 li
cp
26.0144 271.098 mo
26.0071 271.172 26.012 271.248 26.0286 271.324 cv
26.031 271.333 26.033 271.342 26.0349 271.35 cv
26.0364 271.362 26.0374 271.373 26.0388 271.384 cv
25.946 271.446 25.8499 271.501 25.7502 271.55 cv
25.5989 271.605 25.4446 271.648 25.2859 271.677 cv
25.0354 271.702 24.7869 271.7 24.5364 271.675 cv
24.4001 271.651 24.2683 271.618 24.1375 271.574 cv
24.115 271.563 24.0925 271.552 24.071 271.539 cv
24.0754 271.535 24.0803 271.531 24.0852 271.526 cv
24.1609 271.477 24.238 271.433 24.3201 271.394 cv
24.6462 271.273 24.9856 271.215 25.3279 271.16 cv
25.5569 271.135 25.7849 271.113 26.0144 271.098 cv
26.0144 271.098 li
26.0144 271.098 li
cp
24.0955 270.252 mo
23.3889 270.415 22.6033 271.031 22.7937 271.841 cv
22.9753 272.62 23.8157 272.948 24.5271 273.045 cv
24.7209 273.071 24.9119 273.092 25.1067 273.098 cv
25.3328 273.107 25.5574 273.083 25.78 273.05 cv
26.1707 272.991 26.5476 272.86 26.8904 272.665 cv
27.0339 272.585 27.1667 272.477 27.2839 272.364 cv
27.4871 272.166 27.5886 271.915 27.6091 271.638 cv
27.6174 271.531 27.6057 271.397 27.5793 271.302 cv
27.5623 271.24 27.5403 271.187 27.5144 271.139 cv
27.5183 271.139 27.5222 271.14 27.5266 271.14 cv
27.5222 271.14 27.5183 271.139 27.5139 271.138 cv
27.5139 271.138 li
27.6223 271.152 27.7327 271.165 27.8337 271.204 cv
27.8328 271.203 27.8323 271.203 27.8313 271.202 cv
27.9021 271.224 27.9788 271.219 28.0491 271.177 cv
28.1687 271.108 28.239 270.919 28.1482 270.799 cv
28.0911 270.721 28.0154 270.664 27.9202 270.641 cv
27.7551 270.599 27.5901 270.554 27.4226 270.515 cv
27.2625 270.477 27.1023 270.435 26.9407 270.393 cv
26.6956 270.33 26.4495 270.279 26.1995 270.232 cv
25.866 270.168 25.5198 270.135 25.1746 270.135 cv
24.8093 270.135 24.4451 270.172 24.0955 270.252 cv
24.0955 270.252 li
24.0955 270.252 li
cp
f
102.107 29.342 mo
102.13 30.3093 102.146 31.2708 102.158 32.2268 cv
102.169 33.1829 102.197 34.1448 102.242 35.1116 cv
102.264 35.5164 102.332 35.9211 102.445 36.3264 cv
102.557 36.7312 102.799 37.0178 103.17 37.1868 cv
103.541 37.3552 103.918 37.3386 104.301 37.136 cv
104.615 36.9563 104.896 36.7258 105.144 36.4441 cv
105.391 36.1633 105.549 35.8318 105.616 35.449 cv
105.729 35.0217 105.976 34.7405 106.359 34.6057 cv
106.673 34.5159 106.96 34.5608 107.219 34.7405 cv
107.477 34.9207 107.629 35.179 107.675 35.5164 cv
107.719 35.8318 107.697 36.1238 107.607 36.3938 cv
107.517 36.6638 107.393 36.9226 107.236 37.1697 cv
106.966 37.5525 106.673 37.9119 106.359 38.2493 cv
106.043 38.5867 105.661 38.8567 105.211 39.0593 cv
104.536 39.3743 103.879 39.4812 103.238 39.3796 cv
102.596 39.2786 101.979 39.0369 101.385 38.6545 cv
101.157 38.5422 100.985 38.3792 100.871 38.1653 cv
100.757 37.9514 100.654 37.7214 100.563 37.4734 cv
100.357 36.9563 100.225 36.4275 100.168 35.8875 cv
100.112 35.3479 100.083 34.8079 100.083 34.2683 cv
100.06 32.5134 100.043 30.7649 100.032 29.0212 cv
100.021 27.2786 100.027 25.5291 100.049 23.7747 cv
100.072 23.2576 100.112 22.7405 100.169 22.2229 cv
100.226 21.7053 100.288 21.1882 100.357 20.6707 cv
100.471 19.8835 100.768 19.2258 101.247 18.697 cv
101.727 18.1687 102.295 17.7351 102.951 17.3977 cv
103.535 17.0833 104.132 16.948 104.739 16.9929 cv
105.346 17.0383 105.942 17.2517 106.527 17.634 cv
106.752 17.7688 106.899 17.9495 106.966 18.1741 cv
107.033 18.3992 107.022 18.635 106.932 18.8826 cv
106.82 19.1301 106.651 19.3098 106.426 19.4221 cv
106.201 19.5349 105.965 19.5686 105.718 19.5237 cv
105.605 19.4788 105.504 19.4338 105.414 19.3884 cv
105.323 19.3435 105.222 19.2991 105.11 19.2537 cv
104.615 19.051 104.143 19.0964 103.693 19.3884 cv
102.906 19.8835 102.467 20.5696 102.377 21.4465 cv
102.332 21.8967 102.287 22.3523 102.242 22.8132 cv
102.197 23.2747 102.163 23.7297 102.141 24.1794 cv
102.118 25.0349 102.113 25.8953 102.124 26.761 cv
102.135 27.6272 102.141 28.4875 102.141 29.342 cv
102.107 29.342 li
cp
f
110.812 33.593 mo
110.812 37.9797 li
110.812 38.0696 110.812 38.1599 110.812 38.2493 cv
110.812 38.3396 110.801 38.4299 110.778 38.5193 cv
110.711 39.0369 110.418 39.3293 109.901 39.3967 cv
109.698 39.4421 109.496 39.4026 109.294 39.2786 cv
109.091 39.155 108.945 38.9807 108.855 38.7556 cv
108.765 38.5759 108.72 38.3621 108.72 38.1145 cv
108.72 36.6526 108.725 35.196 108.737 33.7449 cv
108.748 32.2942 108.754 30.8381 108.754 29.3757 cv
108.754 29.0608 108.742 28.7571 108.72 28.4646 cv
108.698 28.1726 108.686 27.8801 108.686 27.5876 cv
108.708 26.8679 108.731 26.1423 108.754 25.4114 cv
108.776 24.6804 108.799 23.9548 108.821 23.2351 cv
108.844 22.2903 108.849 21.3679 108.838 20.468 cv
108.826 19.5686 108.832 18.6462 108.855 17.7014 cv
108.855 17.1956 li
108.9 16.948 109.001 16.7458 109.158 16.5881 cv
109.316 16.4309 109.507 16.3298 109.732 16.2844 cv
109.957 16.2625 110.165 16.3069 110.356 16.4192 cv
110.547 16.532 110.688 16.6892 110.778 16.8918 cv
110.823 17.0046 110.857 17.1228 110.88 17.2458 cv
110.902 17.3699 110.913 17.488 110.913 17.6003 cv
110.913 18.7927 110.913 19.968 110.913 21.1262 cv
110.913 22.2849 110.902 23.4602 110.88 24.6521 cv
110.88 24.8772 110.868 25.0964 110.845 25.3098 cv
110.823 25.5242 110.812 25.7317 110.812 25.9343 cv
110.789 26.1365 110.812 26.2664 110.88 26.322 cv
110.947 26.3787 111.07 26.3953 111.251 26.3728 cv
111.498 26.3508 111.74 26.3337 111.976 26.322 cv
112.212 26.3113 112.454 26.2942 112.701 26.2717 cv
113.039 26.2717 113.207 26.1145 113.207 25.7991 cv
113.207 25.6194 113.213 25.4338 113.224 25.2424 cv
113.236 25.0515 113.23 24.866 113.207 24.6858 cv
113.094 23.741 113.061 22.8191 113.106 21.9192 cv
113.151 21.0198 113.207 20.0969 113.275 19.1521 cv
113.297 18.905 113.309 18.6687 113.309 18.4436 cv
113.309 18.219 113.32 17.9832 113.343 17.7351 cv
113.343 17.6228 113.365 17.4543 113.41 17.2292 cv
113.59 16.5544 114.006 16.2732 114.658 16.3855 cv
114.906 16.4309 115.108 16.5603 115.266 16.7737 cv
115.423 16.9875 115.49 17.2517 115.468 17.5667 cv
115.423 18.0618 115.384 18.551 115.35 19.0344 cv
115.316 19.5183 115.3 20.0183 115.3 20.5359 cv
115.277 21.1428 115.271 21.7502 115.282 22.3577 cv
115.294 22.9651 115.288 23.5725 115.266 24.1794 cv
115.266 24.9895 115.271 25.7937 115.282 26.592 cv
115.294 27.3909 115.277 28.1946 115.232 29.0046 cv
115.209 29.7468 115.176 30.489 115.131 31.2312 cv
115.085 31.9739 115.052 32.7278 115.03 33.4919 cv
115.007 34.2122 115.007 34.926 115.03 35.6345 cv
115.052 36.343 115.063 37.0574 115.063 37.7771 cv
115.063 37.8899 115.069 37.991 115.08 38.0808 cv
115.091 38.1711 115.085 38.2722 115.063 38.3845 cv
114.95 38.8796 114.658 39.1604 114.186 39.2278 cv
113.938 39.2507 113.719 39.2112 113.528 39.1096 cv
113.337 39.0085 113.196 38.8459 113.106 38.6204 cv
113.061 38.5085 113.027 38.3845 113.005 38.2493 cv
112.982 38.1145 112.96 37.991 112.938 37.8782 cv
112.915 37.406 112.898 36.9285 112.887 36.4441 cv
112.875 35.9607 112.881 35.4827 112.904 35.0105 cv
112.904 34.5378 112.915 34.0657 112.938 33.593 cv
112.96 33.1208 112.982 32.6599 113.005 32.2097 cv
113.027 31.6702 113.05 31.136 113.073 30.6072 cv
113.094 30.0789 113.117 29.5442 113.14 29.0046 cv
113.162 28.7126 113.134 28.532 113.056 28.4646 cv
112.977 28.3972 112.791 28.3752 112.499 28.3972 cv
112.297 28.4197 112.094 28.4368 111.892 28.448 cv
111.689 28.4592 111.487 28.4646 111.284 28.4646 cv
111.014 28.4875 110.88 28.656 110.88 28.9709 cv
110.88 33.593 li
110.812 33.593 li
cp
f
120.259 29.1057 mo
120.259 29.1287 120.264 29.1565 120.276 29.1902 cv
120.287 29.2239 120.293 29.2634 120.293 29.3083 cv
120.428 29.3083 120.517 29.2859 120.563 29.241 cv
120.81 29.0608 121.057 28.8865 121.305 28.7175 cv
121.552 28.5491 121.8 28.3752 122.047 28.1946 cv
122.204 28.0823 122.261 27.9138 122.216 27.6887 cv
122.171 27.509 122.143 27.3235 122.132 27.1321 cv
122.12 26.9412 122.092 26.7439 122.047 26.5413 cv
121.934 25.9119 121.833 25.282 121.744 24.6521 cv
121.654 24.0227 121.552 23.3923 121.44 22.7625 cv
121.44 22.7175 121.423 22.6731 121.389 22.6277 cv
121.356 22.5828 121.327 22.5378 121.305 22.4924 cv
121.282 22.5378 121.249 22.6277 121.204 22.7625 cv
121.204 22.8752 121.192 22.9651 121.17 23.0325 cv
121.103 23.6624 121.03 24.2869 120.951 24.905 cv
120.872 25.5242 120.787 26.1365 120.698 26.7439 cv
120.63 27.1267 120.557 27.5149 120.478 27.908 cv
120.399 28.302 120.326 28.7009 120.259 29.1057 cv
cp
116.514 38.1145 mo
116.581 37.6423 116.649 37.1643 116.717 36.6804 cv
116.784 36.197 116.863 35.719 116.952 35.2463 cv
117.088 34.5042 117.234 33.7678 117.391 33.0364 cv
117.548 32.3059 117.695 31.5803 117.83 30.8601 cv
118.032 29.6682 118.24 28.4875 118.454 27.3176 cv
118.668 26.1482 118.864 24.967 119.045 23.7747 cv
119.179 22.8528 119.292 21.9358 119.382 21.0251 cv
119.471 20.114 119.573 19.1975 119.685 18.2751 cv
119.73 17.8928 119.798 17.5554 119.888 17.2629 cv
120 16.9031 120.146 16.6218 120.326 16.4192 cv
120.641 16.0818 120.979 15.9417 121.339 15.9978 cv
121.698 16.054 121.969 16.2961 122.149 16.7229 cv
122.396 17.3303 122.609 17.9939 122.79 18.7136 cv
123.127 20.1536 123.431 21.6609 123.7 23.2351 cv
123.813 23.7527 123.891 24.2698 123.937 24.7869 cv
123.982 25.3044 124.049 25.822 124.139 26.3391 cv
124.252 27.1267 124.381 27.908 124.527 28.6838 cv
124.673 29.4602 124.791 30.2419 124.882 31.0291 cv
125.016 32.176 125.191 33.2898 125.405 34.3694 cv
125.618 35.449 125.826 36.5515 126.029 37.676 cv
126.051 37.7214 126.062 37.7717 126.062 37.8279 cv
126.062 37.884 126.073 37.9348 126.096 37.9797 cv
126.118 38.2947 126.04 38.5647 125.86 38.7893 cv
125.68 39.0144 125.444 39.1492 125.152 39.1941 cv
124.882 39.217 124.629 39.1438 124.392 38.9749 cv
124.156 38.8064 124.015 38.5759 123.97 38.283 cv
123.79 37.114 123.583 35.9553 123.346 34.8079 cv
123.11 33.6609 122.936 32.4915 122.823 31.2991 cv
122.778 30.8044 122.705 30.5398 122.604 30.5061 cv
122.503 30.4724 122.261 30.613 121.879 30.928 cv
121.541 31.1755 121.204 31.4338 120.866 31.7039 cv
120.529 31.9739 120.203 32.2551 119.888 32.5471 cv
119.685 32.7278 119.562 32.9182 119.517 33.1208 cv
119.359 33.9758 119.213 34.8196 119.078 35.6516 cv
118.943 36.4836 118.808 37.3162 118.673 38.1482 cv
118.56 38.801 118.257 39.1604 117.762 39.2278 cv
117.402 39.2732 117.104 39.1887 116.868 38.9749 cv
116.632 38.7615 116.514 38.4744 116.514 38.1145 cv
cp
f
130.077 28.4485 mo
130.077 20.2292 li
130.077 20.0276 130.083 19.8308 130.094 19.6399 cv
130.105 19.449 130.111 19.2639 130.111 19.0842 cv
130.133 18.7922 129.998 18.6462 129.706 18.6462 cv
129.458 18.6462 129.228 18.6521 129.014 18.6628 cv
128.801 18.6746 128.57 18.658 128.323 18.6125 cv
128.03 18.5896 127.749 18.4753 127.479 18.2698 cv
127.299 18.1326 127.193 17.9558 127.159 17.7385 cv
127.125 17.5212 127.153 17.3098 127.243 17.1042 cv
127.4 16.6931 127.726 16.4866 128.221 16.4866 cv
129.076 16.4866 129.931 16.4924 130.786 16.5037 cv
131.64 16.5154 132.495 16.532 133.35 16.5544 cv
134.464 16.5544 li
134.823 16.532 135.115 16.6233 135.341 16.8289 cv
135.565 17.0344 135.689 17.2971 135.712 17.6165 cv
135.734 17.9373 135.633 18.1995 135.408 18.4055 cv
135.183 18.6111 134.89 18.7136 134.531 18.7136 cv
134.283 18.7136 134.03 18.7024 133.772 18.6799 cv
133.513 18.658 133.26 18.6462 133.013 18.6462 cv
132.653 18.6243 132.427 18.6521 132.338 18.7307 cv
132.248 18.8093 132.203 19.0281 132.203 19.3875 cv
132.203 20.2859 132.203 21.1838 132.203 22.0818 cv
132.203 22.9802 132.214 23.8904 132.237 24.8108 cv
132.237 26.4275 132.248 28.0505 132.27 29.6785 cv
132.293 31.3064 132.315 32.9402 132.338 34.5793 cv
132.36 35.0959 132.372 35.6125 132.372 36.1292 cv
132.372 36.6458 132.372 37.1619 132.372 37.678 cv
132.372 37.7908 132.372 37.8972 132.372 37.9983 cv
132.372 38.0999 132.349 38.2063 132.304 38.3181 cv
132.147 38.8347 131.82 39.093 131.325 39.093 cv
130.853 39.093 130.527 38.8464 130.347 38.3518 cv
130.302 38.1272 130.28 37.948 130.28 37.8127 cv
130.257 36.241 130.24 34.6804 130.229 33.1311 cv
130.218 31.5813 130.2 30.0203 130.178 28.4485 cv
130.077 28.4485 li
cp
f
145.699 23.6062 mo
145.631 23.6062 li
145.631 24.5168 li
145.654 24.8772 145.8 24.9558 146.07 24.7532 cv
146.362 24.5286 146.632 24.2869 146.88 24.0276 cv
147.127 23.7693 147.318 23.4709 147.453 23.1335 cv
147.97 21.7839 147.892 20.446 147.217 19.1184 cv
147.037 18.781 146.745 18.5564 146.34 18.4436 cv
146.159 18.3762 146.036 18.365 145.969 18.4099 cv
145.901 18.4553 145.856 18.5789 145.834 18.781 cv
145.811 19.5911 145.788 20.3953 145.766 21.1936 cv
145.743 21.9924 145.721 22.7961 145.699 23.6062 cv
cp
145.631 32.2434 mo
145.597 32.2434 li
145.597 33.9309 li
145.597 34.3811 145.592 34.8308 145.581 35.2805 cv
145.569 35.7307 145.575 36.1804 145.597 36.6301 cv
145.597 36.7649 145.642 36.9451 145.733 37.1697 cv
145.822 37.1248 145.912 37.0852 146.002 37.0515 cv
146.092 37.0178 146.171 36.9675 146.239 36.8997 cv
146.621 36.6077 146.913 36.2927 147.116 35.9553 cv
147.791 34.8752 148.196 33.7678 148.33 32.6316 cv
148.466 31.4958 148.297 30.3206 147.824 29.1057 cv
147.667 28.679 147.442 28.3357 147.15 28.0769 cv
146.857 27.8181 146.52 27.5989 146.137 27.4187 cv
145.8 27.2615 145.631 27.363 145.631 27.7224 cv
145.631 32.2434 li
cp
143.506 32.3113 mo
143.506 31.5242 143.506 30.7253 143.506 29.9158 cv
143.506 29.1057 143.517 28.3074 143.539 27.5198 cv
143.539 27.2727 143.551 27.0422 143.573 26.8284 cv
143.595 26.615 143.618 26.3953 143.64 26.1702 cv
143.64 26.0808 143.646 25.9963 143.657 25.9172 cv
143.669 25.8386 143.663 25.7542 143.64 25.6643 cv
143.528 24.967 143.494 24.281 143.539 23.6062 cv
143.584 22.9314 143.629 22.2454 143.675 21.5481 cv
143.719 21.0305 143.742 20.4968 143.742 19.9451 cv
143.742 19.3943 143.742 18.8489 143.742 18.3088 cv
143.764 18.1292 143.77 17.9543 143.759 17.7859 cv
143.747 17.6169 143.764 17.4431 143.809 17.2629 cv
143.877 16.7683 144.192 16.4646 144.754 16.3518 cv
145.136 16.2844 145.496 16.2395 145.834 16.217 cv
146.171 16.1946 146.531 16.2507 146.913 16.3855 cv
148.083 16.7903 148.892 17.5442 149.343 18.6462 cv
149.905 20.0862 150.017 21.5818 149.68 23.1335 cv
149.567 23.6062 149.393 24.0393 149.157 24.4329 cv
148.921 24.8264 148.645 25.2034 148.33 25.5632 cv
148.15 25.7434 148.061 25.8665 148.061 25.9343 cv
148.061 26.0017 148.162 26.1257 148.364 26.3054 cv
149.039 26.845 149.533 27.5652 149.849 28.4646 cv
150.95 31.614 150.591 34.5608 148.769 37.3049 cv
148.544 37.6199 148.297 37.907 148.027 38.1653 cv
147.757 38.4241 147.464 38.6658 147.15 38.8904 cv
146.475 39.3181 145.743 39.4861 144.956 39.3967 cv
144.259 39.3293 143.821 38.947 143.64 38.2493 cv
143.551 37.9119 143.506 37.5408 143.506 37.136 cv
143.506 32.3113 li
cp
f
159.228 23.4709 mo
159.206 24.2136 159.183 25.1077 159.161 26.1536 cv
159.138 27.1995 159.082 28.2625 158.992 29.342 cv
158.88 30.3542 158.791 31.3665 158.724 32.3787 cv
158.657 33.3909 158.5 34.4031 158.255 35.4153 cv
158.121 35.9329 157.942 36.4221 157.719 36.8831 cv
157.495 37.3445 157.193 37.7659 156.813 38.1482 cv
156.388 38.5984 155.93 38.8962 155.439 39.0422 cv
154.947 39.1887 154.411 39.1604 153.83 38.9578 cv
153.267 38.7556 152.84 38.4465 152.548 38.03 cv
152.255 37.614 152.064 37.1248 151.974 36.5623 cv
151.906 36.0901 151.844 35.6179 151.788 35.1453 cv
151.732 34.6731 151.693 34.1897 151.671 33.6946 cv
151.625 32.2097 151.58 30.7419 151.535 29.2913 cv
151.49 27.8406 151.49 26.3728 151.535 24.8884 cv
151.58 23.6736 151.614 22.4817 151.636 21.3118 cv
151.659 20.1423 151.671 18.95 151.671 17.7351 cv
151.671 16.8918 li
151.671 16.3069 151.94 15.9587 152.48 15.8459 cv
152.727 15.801 152.952 15.8406 153.155 15.9636 cv
153.358 16.0876 153.514 16.2732 153.627 16.5208 cv
153.717 16.7229 153.762 16.9817 153.762 17.2966 cv
153.784 18.1965 153.807 19.0906 153.83 19.9788 cv
153.852 20.8679 153.83 21.7502 153.762 22.6277 cv
153.65 24.0447 153.599 25.4397 153.611 26.8113 cv
153.621 28.1838 153.638 29.5784 153.661 30.9954 cv
153.661 31.8279 153.7 32.6599 153.779 33.4919 cv
153.858 34.3245 153.931 35.1682 153.998 36.0227 cv
154.021 36.2249 154.066 36.4163 154.134 36.5959 cv
154.201 36.7766 154.358 36.8889 154.606 36.9333 cv
154.853 36.9788 155.05 36.9392 155.197 36.8157 cv
155.343 36.6921 155.471 36.5403 155.584 36.3601 cv
155.899 35.9104 156.118 35.427 156.242 34.9089 cv
156.365 34.3918 156.462 33.8748 156.529 33.3572 cv
156.619 32.615 156.698 31.8782 156.765 31.1472 cv
156.833 30.4163 156.888 29.6912 156.934 28.9709 cv
157.024 27.1042 157.091 25.2034 157.136 23.2688 cv
157.158 22.2566 157.17 21.261 157.17 20.2825 cv
157.17 19.304 157.181 18.3088 157.204 17.2966 cv
157.204 17.1614 157.238 17.0046 157.305 16.824 cv
157.46 16.3298 157.791 16.1047 158.3 16.1492 cv
158.807 16.217 159.106 16.4866 159.195 16.9592 cv
159.217 17.072 159.228 17.1956 159.228 17.3303 cv
159.228 17.4651 159.228 17.5891 159.228 17.7014 cv
159.25 18.5564 159.256 19.428 159.245 20.3162 cv
159.234 21.2053 159.228 22.2566 159.228 23.4709 cv
cp
f
162.501 23.6062 mo
162.433 23.6062 li
162.433 24.5168 li
162.456 24.8772 162.602 24.9558 162.872 24.7532 cv
163.164 24.5286 163.434 24.2869 163.682 24.0276 cv
163.929 23.7693 164.12 23.4709 164.256 23.1335 cv
164.773 21.7839 164.694 20.446 164.019 19.1184 cv
163.839 18.781 163.547 18.5564 163.142 18.4436 cv
162.962 18.3762 162.839 18.365 162.771 18.4099 cv
162.703 18.4553 162.658 18.5789 162.636 18.781 cv
162.614 19.5911 162.591 20.3953 162.569 21.1936 cv
162.546 21.9924 162.523 22.7961 162.501 23.6062 cv
cp
162.433 32.2434 mo
162.4 32.2434 li
162.4 33.9309 li
162.4 34.3811 162.394 34.8308 162.383 35.2805 cv
162.371 35.7307 162.377 36.1804 162.4 36.6301 cv
162.4 36.7649 162.445 36.9451 162.535 37.1697 cv
162.624 37.1248 162.715 37.0852 162.804 37.0515 cv
162.894 37.0178 162.973 36.9675 163.041 36.8997 cv
163.423 36.6077 163.716 36.2927 163.918 35.9553 cv
164.593 34.8752 164.998 33.7678 165.133 32.6316 cv
165.268 31.4958 165.099 30.3206 164.627 29.1057 cv
164.469 28.679 164.244 28.3357 163.952 28.0769 cv
163.659 27.8181 163.322 27.5989 162.94 27.4187 cv
162.602 27.2615 162.433 27.363 162.433 27.7224 cv
162.433 32.2434 li
cp
160.308 32.3113 mo
160.308 31.5242 160.308 30.7253 160.308 29.9158 cv
160.308 29.1057 160.319 28.3074 160.342 27.5198 cv
160.342 27.2727 160.353 27.0422 160.375 26.8284 cv
160.398 26.615 160.42 26.3953 160.443 26.1702 cv
160.443 26.0808 160.448 25.9963 160.46 25.9172 cv
160.471 25.8386 160.465 25.7542 160.443 25.6643 cv
160.33 24.967 160.297 24.281 160.342 23.6062 cv
160.386 22.9314 160.431 22.2454 160.477 21.5481 cv
160.521 21.0305 160.544 20.4968 160.544 19.9451 cv
160.544 19.3943 160.544 18.8489 160.544 18.3088 cv
160.566 18.1292 160.572 17.9543 160.561 17.7859 cv
160.55 17.6169 160.566 17.4431 160.612 17.2629 cv
160.679 16.7683 160.994 16.4646 161.556 16.3518 cv
161.939 16.2844 162.299 16.2395 162.636 16.217 cv
162.973 16.1946 163.333 16.2507 163.716 16.3855 cv
164.885 16.7903 165.695 17.5442 166.145 18.6462 cv
166.707 20.0862 166.82 21.5818 166.482 23.1335 cv
166.369 23.6062 166.196 24.0393 165.959 24.4329 cv
165.723 24.8264 165.448 25.2034 165.133 25.5632 cv
164.952 25.7434 164.863 25.8665 164.863 25.9343 cv
164.863 26.0017 164.964 26.1257 165.166 26.3054 cv
165.841 26.845 166.336 27.5652 166.651 28.4646 cv
167.753 31.614 167.393 34.5608 165.572 37.3049 cv
165.346 37.6199 165.099 37.907 164.829 38.1653 cv
164.559 38.4241 164.266 38.6658 163.952 38.8904 cv
163.277 39.3181 162.546 39.4861 161.759 39.3967 cv
161.061 39.3293 160.623 38.947 160.443 38.2493 cv
160.353 37.9119 160.308 37.5408 160.308 37.136 cv
160.308 32.3113 li
cp
f
170.498 23.6062 mo
170.43 23.6062 li
170.43 24.5168 li
170.452 24.8772 170.599 24.9558 170.869 24.7532 cv
171.161 24.5286 171.431 24.2869 171.678 24.0276 cv
171.926 23.7693 172.117 23.4709 172.252 23.1335 cv
172.769 21.7839 172.691 20.446 172.016 19.1184 cv
171.836 18.781 171.544 18.5564 171.138 18.4436 cv
170.958 18.3762 170.835 18.365 170.767 18.4099 cv
170.7 18.4553 170.655 18.5789 170.633 18.781 cv
170.61 19.5911 170.587 20.3953 170.565 21.1936 cv
170.542 21.9924 170.52 22.7961 170.498 23.6062 cv
cp
170.43 32.2434 mo
170.396 32.2434 li
170.396 33.9309 li
170.396 34.3811 170.39 34.8308 170.38 35.2805 cv
170.368 35.7307 170.374 36.1804 170.396 36.6301 cv
170.396 36.7649 170.441 36.9451 170.531 37.1697 cv
170.621 37.1248 170.711 37.0852 170.801 37.0515 cv
170.891 37.0178 170.97 36.9675 171.037 36.8997 cv
171.42 36.6077 171.712 36.2927 171.915 35.9553 cv
172.59 34.8752 172.994 33.7678 173.129 32.6316 cv
173.264 31.4958 173.095 30.3206 172.623 29.1057 cv
172.466 28.679 172.24 28.3357 171.948 28.0769 cv
171.656 27.8181 171.319 27.5989 170.936 27.4187 cv
170.599 27.2615 170.43 27.363 170.43 27.7224 cv
170.43 32.2434 li
cp
168.304 32.3113 mo
168.304 31.5242 168.304 30.7253 168.304 29.9158 cv
168.304 29.1057 168.316 28.3074 168.338 27.5198 cv
168.338 27.2727 168.349 27.0422 168.372 26.8284 cv
168.394 26.615 168.417 26.3953 168.439 26.1702 cv
168.439 26.0808 168.445 25.9963 168.456 25.9172 cv
168.468 25.8386 168.462 25.7542 168.439 25.6643 cv
168.326 24.967 168.293 24.281 168.338 23.6062 cv
168.383 22.9314 168.428 22.2454 168.473 21.5481 cv
168.518 21.0305 168.541 20.4968 168.541 19.9451 cv
168.541 19.3943 168.541 18.8489 168.541 18.3088 cv
168.563 18.1292 168.569 17.9543 168.557 17.7859 cv
168.546 17.6169 168.563 17.4431 168.608 17.2629 cv
168.676 16.7683 168.99 16.4646 169.553 16.3518 cv
169.935 16.2844 170.295 16.2395 170.633 16.217 cv
170.97 16.1946 171.329 16.2507 171.712 16.3855 cv
172.882 16.7903 173.691 17.5442 174.141 18.6462 cv
174.703 20.0862 174.816 21.5818 174.479 23.1335 cv
174.366 23.6062 174.192 24.0393 173.956 24.4329 cv
173.72 24.8264 173.444 25.2034 173.129 25.5632 cv
172.949 25.7434 172.86 25.8665 172.86 25.9343 cv
172.86 26.0017 172.961 26.1257 173.163 26.3054 cv
173.838 26.845 174.332 27.5652 174.648 28.4646 cv
175.749 31.614 175.39 34.5608 173.568 37.3049 cv
173.343 37.6199 173.095 37.907 172.825 38.1653 cv
172.556 38.4241 172.263 38.6658 171.948 38.8904 cv
171.274 39.3181 170.542 39.4861 169.755 39.3967 cv
169.058 39.3293 168.619 38.947 168.439 38.2493 cv
168.349 37.9119 168.304 37.5408 168.304 37.136 cv
168.304 32.3113 li
cp
f
176.469 22.8298 mo
176.469 21.9753 176.469 21.1262 176.469 20.2825 cv
176.469 19.4392 176.48 18.5901 176.503 17.7351 cv
176.503 17.1614 li
176.615 16.5769 176.942 16.2844 177.482 16.2844 cv
177.729 16.2625 177.954 16.3298 178.156 16.4866 cv
178.359 16.6443 178.482 16.8582 178.528 17.1277 cv
178.55 17.218 178.561 17.3528 178.561 17.533 cv
178.561 19.2649 178.561 20.9861 178.561 22.6951 cv
178.561 24.4045 178.55 26.1145 178.528 27.8235 cv
178.528 28.5662 178.505 29.303 178.46 30.0334 cv
178.415 30.7649 178.392 31.4905 178.392 32.2097 cv
178.392 32.9524 178.398 33.6946 178.409 34.4368 cv
178.42 35.179 178.437 35.9211 178.46 36.6638 cv
178.46 36.9563 178.617 37.1023 178.932 37.1023 cv
179.179 37.0803 179.422 37.0745 179.658 37.0852 cv
179.894 37.0969 180.135 37.1023 180.383 37.1023 cv
180.72 37.1023 180.99 37.1926 181.193 37.3723 cv
181.395 37.5525 181.508 37.7996 181.531 38.1145 cv
181.531 38.407 181.446 38.6599 181.277 38.8738 cv
181.109 39.0876 180.866 39.1941 180.552 39.1941 cv
179.562 39.2395 178.561 39.2395 177.549 39.1941 cv
177.212 39.1941 176.947 39.093 176.756 38.8904 cv
176.565 38.6882 176.447 38.4182 176.402 38.0808 cv
176.379 37.9456 176.362 37.8054 176.351 37.6589 cv
176.34 37.5129 176.334 37.3723 176.334 37.2371 cv
176.334 35.8655 176.328 34.5042 176.318 33.1545 cv
176.306 31.8049 176.312 30.4441 176.334 29.072 cv
176.356 28.0149 176.385 26.9749 176.419 25.9509 cv
176.452 24.928 176.491 23.8875 176.537 22.8298 cv
176.469 22.8298 li
cp
f
182.61 30.8601 mo
182.61 30.2307 182.627 29.6008 182.661 28.9709 cv
182.695 28.3416 182.689 27.7004 182.644 27.0476 cv
182.644 26.7776 182.633 26.5027 182.61 26.2209 cv
182.588 25.9402 182.588 25.6531 182.61 25.3606 cv
182.633 25.2034 182.644 25.0569 182.644 24.9221 cv
182.644 24.7869 182.644 24.6296 182.644 24.4495 cv
182.644 23.3699 182.655 22.2903 182.677 21.2107 cv
182.7 20.1306 182.712 19.0398 182.712 17.9377 cv
182.712 17.1506 183.071 16.7229 183.791 16.6555 cv
184.241 16.6106 184.697 16.594 185.157 16.6047 cv
185.618 16.6165 186.074 16.6218 186.524 16.6218 cv
186.726 16.6218 186.923 16.6384 187.115 16.6726 cv
187.305 16.7063 187.491 16.7346 187.671 16.7566 cv
188.031 16.802 188.306 16.9373 188.498 17.1614 cv
188.689 17.387 188.762 17.6565 188.717 17.9714 cv
188.695 18.2869 188.571 18.5227 188.346 18.6799 cv
188.121 18.8376 187.828 18.8938 187.469 18.8489 cv
187.154 18.8264 186.833 18.7981 186.507 18.7644 cv
186.181 18.7307 185.861 18.7136 185.546 18.7136 cv
185.186 18.6917 184.977 18.7136 184.922 18.781 cv
184.865 18.8489 184.825 19.0627 184.803 19.4221 cv
184.803 20.9968 184.77 22.594 184.702 24.2136 cv
184.702 24.4387 184.697 24.658 184.685 24.8713 cv
184.674 25.0852 184.668 25.3044 184.668 25.5291 cv
184.668 25.8445 184.702 26.0354 184.77 26.1028 cv
184.837 26.1702 185.017 26.2039 185.309 26.2039 cv
185.534 26.2039 185.748 26.199 185.95 26.1873 cv
186.153 26.176 186.366 26.1594 186.592 26.1365 cv
187.199 26.0916 187.581 26.3508 187.739 26.9128 cv
187.806 27.2053 187.783 27.4695 187.671 27.7053 cv
187.558 27.9417 187.367 28.1052 187.098 28.1946 cv
186.985 28.24 186.856 28.2678 186.71 28.2791 cv
186.563 28.2908 186.423 28.2961 186.288 28.2961 cv
186.086 28.3186 185.883 28.3245 185.68 28.3127 cv
185.478 28.302 185.276 28.2961 185.073 28.2961 cv
184.781 28.2961 184.635 28.4539 184.635 28.7683 cv
184.635 30.2869 li
184.657 31.2991 184.674 32.3171 184.685 33.3401 cv
184.697 34.364 184.724 35.3816 184.77 36.3938 cv
184.77 36.7986 184.814 37.0408 184.905 37.1194 cv
184.994 37.198 185.253 37.2034 185.68 37.136 cv
185.861 37.0911 186.046 37.0515 186.238 37.0178 cv
186.428 36.9841 186.614 36.9675 186.794 36.9675 cv
187.109 36.9675 187.362 37.0515 187.553 37.2205 cv
187.744 37.3889 187.851 37.6082 187.874 37.8782 cv
187.919 38.1936 187.857 38.4465 187.688 38.6375 cv
187.519 38.8289 187.278 38.9578 186.963 39.0256 cv
186.04 39.2278 185.107 39.2952 184.162 39.2278 cv
183.78 39.1833 183.465 39.0593 183.218 38.8567 cv
182.97 38.6545 182.813 38.3621 182.745 37.9797 cv
182.633 37.3274 182.576 36.6638 182.576 35.989 cv
182.576 35.3142 182.576 34.6506 182.576 33.9983 cv
182.576 33.4812 182.582 32.9578 182.594 32.4294 cv
182.604 31.9011 182.61 31.3782 182.61 30.8601 cv
cp
f
190.674 34.9089 mo
190.674 34.5271 190.668 34.1501 190.657 33.7791 cv
190.645 33.4075 190.651 33.0315 190.674 32.6487 cv
190.719 32.2664 190.84 31.9797 191.034 31.7883 cv
191.228 31.5974 191.485 31.5242 191.806 31.5686 cv
192.125 31.5916 192.371 31.7156 192.542 31.9402 cv
192.714 32.1653 192.788 32.4578 192.766 32.8171 cv
192.766 35.9211 li
192.766 36.1238 192.777 36.3323 192.8 36.5457 cv
192.822 36.7595 192.856 36.9675 192.901 37.1697 cv
192.944 37.3948 193.037 37.53 193.179 37.5745 cv
193.321 37.6199 193.469 37.5525 193.621 37.3723 cv
193.862 37.0574 193.992 36.7429 194.014 36.4275 cv
194.059 35.3254 194.036 34.24 193.947 33.1716 cv
193.857 32.1033 193.643 31.0408 193.306 29.9832 cv
192.856 28.5886 192.192 27.2278 191.315 25.9006 cv
191.157 25.676 191.006 25.4617 190.86 25.2595 cv
190.713 25.0569 190.584 24.8323 190.471 24.5847 cv
189.999 23.7297 189.774 22.8298 189.797 21.8855 cv
189.819 21.4128 189.836 20.9407 189.847 20.468 cv
189.858 19.9958 189.886 19.5349 189.932 19.0847 cv
190.044 18.4099 190.252 17.8025 190.556 17.2629 cv
190.86 16.7229 191.315 16.2844 191.922 15.947 cv
192.125 15.8347 192.378 15.7561 192.681 15.7107 cv
192.985 15.6658 193.306 15.6604 193.643 15.6941 cv
193.981 15.7278 194.312 15.801 194.638 15.9133 cv
194.964 16.0261 195.229 16.1833 195.431 16.3855 cv
195.678 16.6335 195.864 16.9031 195.988 17.1956 cv
196.112 17.488 196.196 17.7917 196.241 18.1062 cv
196.286 18.3542 196.309 18.6125 196.309 18.8826 cv
196.309 19.1521 196.297 19.4114 196.275 19.6584 cv
196.23 20.3557 195.892 20.7043 195.262 20.7043 cv
194.61 20.6594 194.261 20.2883 194.217 19.5911 cv
194.217 19.4338 194.222 19.2761 194.234 19.1184 cv
194.245 18.9617 194.239 18.804 194.217 18.6462 cv
194.173 18.4666 194.134 18.3035 194.101 18.157 cv
194.068 18.011 193.941 17.9153 193.72 17.8704 cv
193.412 17.8025 193.175 17.7805 193.009 17.8025 cv
192.844 17.8254 192.684 17.9602 192.53 18.2078 cv
192.417 18.4099 192.316 18.6292 192.226 18.8655 cv
192.136 19.1018 192.069 19.3435 192.024 19.5911 cv
191.978 19.9958 191.95 20.4006 191.939 20.8054 cv
191.927 21.2107 191.922 21.6272 191.922 22.054 cv
191.922 22.7742 192.158 23.4373 192.631 24.0447 cv
193.143 24.7419 193.589 25.4734 193.968 26.238 cv
194.346 27.0027 194.702 27.7791 195.036 28.5662 cv
195.348 29.3538 195.582 30.1516 195.738 30.9617 cv
195.894 31.7712 195.994 32.6038 196.039 33.4583 cv
196.083 33.9758 196.106 34.4934 196.106 35.0105 cv
196.106 35.5281 196.106 36.0452 196.106 36.5623 cv
196.061 37.8674 195.487 38.823 194.385 39.4304 cv
193.733 39.7898 193.047 39.8572 192.327 39.6331 cv
191.9 39.4978 191.573 39.2615 191.349 38.9241 cv
191.124 38.5867 190.966 38.2156 190.876 37.8108 cv
190.786 37.4958 190.736 37.1814 190.724 36.866 cv
190.713 36.5515 190.696 36.2366 190.674 35.9211 cv
190.651 35.7415 190.64 35.573 190.64 35.4153 cv
190.64 35.2581 190.64 35.0896 190.64 34.9089 cv
190.674 34.9089 li
cp
f
126.609 42.1873 mo
127.625 42.1873 li
127.625 46.741 li
126.609 46.741 li
126.609 44.9495 li
124.798 44.9495 li
124.798 46.741 li
123.781 46.741 li
123.781 42.1873 li
124.798 42.1873 li
124.798 44.0896 li
126.609 44.0896 li
126.609 42.1873 li
cp
f
131.489 45.4055 mo
131.489 45.2361 li
130.876 45.2361 li
130.485 45.2361 130.29 45.3577 130.29 45.6008 cv
130.29 45.7268 130.337 45.8235 130.43 45.8909 cv
130.523 45.9583 130.657 45.9919 130.831 45.9919 cv
131.004 45.9919 131.157 45.9387 131.29 45.8323 cv
131.422 45.7258 131.489 45.5837 131.489 45.4055 cv
cp
132.472 46.741 mo
131.554 46.741 li
131.554 46.3176 li
131.302 46.6345 130.99 46.7932 130.619 46.7932 cv
130.247 46.7932 129.936 46.6858 129.684 46.4705 cv
129.432 46.2556 129.306 45.969 129.306 45.6106 cv
129.306 45.2522 129.436 44.9841 129.697 44.8059 cv
129.958 44.6282 130.314 44.5388 130.765 44.5388 cv
131.495 44.5388 li
131.495 44.5193 li
131.495 44.1458 131.298 43.9592 130.902 43.9592 cv
130.733 43.9592 130.553 43.9929 130.365 44.0603 cv
130.176 44.1277 130.016 44.2112 129.886 44.3108 cv
129.449 43.679 li
129.91 43.3445 130.435 43.1775 131.026 43.1775 cv
131.451 43.1775 131.799 43.2839 132.069 43.4963 cv
132.338 43.7092 132.472 44.0461 132.472 44.5066 cv
132.472 46.741 li
cp
f
135.189 44.7864 mo
135.189 46.741 li
134.212 46.741 li
134.212 43.2361 li
135.189 43.2361 li
135.189 43.6267 li
135.484 43.3274 135.817 43.1775 136.186 43.1775 cv
136.555 43.1775 136.865 43.3079 137.114 43.5681 cv
137.364 43.8289 137.489 44.1765 137.489 44.6106 cv
137.489 46.741 li
136.511 46.741 li
136.511 44.7605 li
136.511 44.2219 136.314 43.9524 135.919 43.9524 cv
135.723 43.9524 135.553 44.0232 135.407 44.1643 cv
135.262 44.3054 135.189 44.5129 135.189 44.7864 cv
cp
f
140.01 44.9949 mo
140.01 45.2776 140.094 45.5085 140.264 45.6887 cv
140.433 45.8689 140.631 45.9592 140.857 45.9592 cv
141.083 45.9592 141.275 45.8689 141.433 45.6887 cv
141.592 45.5085 141.671 45.2761 141.671 44.9919 cv
141.671 44.7073 141.592 44.4705 141.433 44.2815 cv
141.275 44.0925 141.08 43.9983 140.85 43.9983 cv
140.62 43.9983 140.423 44.094 140.258 44.2849 cv
140.093 44.4758 140.01 44.7126 140.01 44.9949 cv
cp
140.626 46.7932 mo
140.211 46.7932 139.841 46.6169 139.515 46.2654 cv
139.189 45.9138 139.026 45.4773 139.026 44.9558 cv
139.026 44.4348 139.185 44.0081 139.502 43.6755 cv
139.819 43.3435 140.19 43.1775 140.616 43.1775 cv
141.041 43.1775 141.389 43.3274 141.658 43.6267 cv
141.658 41.907 li
142.635 41.907 li
142.635 46.741 li
141.658 46.741 li
141.658 46.2786 li
141.385 46.6213 141.04 46.7932 140.626 46.7932 cv
cp
f
149.805 45.49 mo
150.054 45.2556 150.179 44.9148 150.179 44.467 cv
150.179 44.0198 150.054 43.6755 149.805 43.4348 cv
149.555 43.1936 149.172 43.073 148.655 43.073 cv
148.088 43.073 li
148.088 45.842 li
148.733 45.842 li
149.198 45.842 149.555 45.7249 149.805 45.49 cv
cp
150.551 42.783 mo
150.985 43.1804 151.202 43.7332 151.202 44.4412 cv
151.202 45.1492 150.99 45.7097 150.567 46.1218 cv
150.143 46.5349 149.497 46.741 148.629 46.741 cv
147.072 46.741 li
147.072 42.1873 li
148.681 42.1873 li
149.493 42.1873 150.116 42.386 150.551 42.783 cv
cp
f
154.675 44.0959 mo
154.384 44.0959 154.167 44.199 154.023 44.4055 cv
153.88 44.6116 153.808 44.884 153.808 45.2229 cv
153.808 46.741 li
152.831 46.741 li
152.831 43.2361 li
153.808 43.2361 li
153.808 43.6985 li
153.934 43.5554 154.092 43.4338 154.281 43.3337 cv
154.469 43.2336 154.662 43.1819 154.857 43.1775 cv
154.864 44.0959 li
154.675 44.0959 li
cp
f
158.317 45.4055 mo
158.317 45.2361 li
157.704 45.2361 li
157.313 45.2361 157.118 45.3577 157.118 45.6008 cv
157.118 45.7268 157.165 45.8235 157.258 45.8909 cv
157.351 45.9583 157.485 45.9919 157.659 45.9919 cv
157.832 45.9919 157.986 45.9387 158.118 45.8323 cv
158.25 45.7258 158.317 45.5837 158.317 45.4055 cv
cp
159.301 46.741 mo
158.382 46.741 li
158.382 46.3176 li
158.13 46.6345 157.818 46.7932 157.447 46.7932 cv
157.075 46.7932 156.764 46.6858 156.512 46.4705 cv
156.26 46.2556 156.134 45.969 156.134 45.6106 cv
156.134 45.2522 156.264 44.9841 156.525 44.8059 cv
156.786 44.6282 157.142 44.5388 157.594 44.5388 cv
158.323 44.5388 li
158.323 44.5193 li
158.323 44.1458 158.126 43.9592 157.73 43.9592 cv
157.561 43.9592 157.382 43.9929 157.193 44.0603 cv
157.004 44.1277 156.844 44.2112 156.714 44.3108 cv
156.278 43.679 li
156.738 43.3445 157.263 43.1775 157.854 43.1775 cv
158.28 43.1775 158.627 43.2839 158.897 43.4963 cv
159.166 43.7092 159.301 44.0461 159.301 44.5066 cv
159.301 46.741 li
cp
f
162.812 46.741 mo
161.802 46.741 li
160.61 43.2361 li
161.62 43.2361 li
162.303 45.3533 li
162.988 43.2361 li
163.932 43.2361 li
164.616 45.3533 li
165.301 43.2361 li
166.317 43.2361 li
165.125 46.741 li
164.108 46.741 li
163.463 44.8323 li
162.812 46.741 li
cp
f
168.688 44.7864 mo
168.688 46.741 li
167.711 46.741 li
167.711 43.2361 li
168.688 43.2361 li
168.688 43.6267 li
168.983 43.3274 169.316 43.1775 169.685 43.1775 cv
170.054 43.1775 170.364 43.3079 170.613 43.5681 cv
170.863 43.8289 170.988 44.1765 170.988 44.6106 cv
170.988 46.741 li
170.01 46.741 li
170.01 44.7605 li
170.01 44.2219 169.813 43.9524 169.418 43.9524 cv
169.222 43.9524 169.052 44.0232 168.906 44.1643 cv
168.761 44.3054 168.688 44.5129 168.688 44.7864 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.6
%%For: (Akash) ()
%%Title: (SL-030920-28760-27.eps)
%%CreationDate: 3/9/2020 6:34 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bm\i#dP1TJ^9;>O"(Wb^idHAoX9f2)80IeE^jq'R`0fuArSdS>Db77Z&f0YPH@QFQds[loP,b>3-03V,\C##V[:V:6r"JVJ
%Zm>E5ZqQBARM0uA-ns)!rblrP8@qjU+&Kk6a>+T>#`B*=UILaUKU*I2RO=(mVkH#NS8"5;Fus-rL=qU^'#0[.mo6:''?,0nlFQN7
%(Y=pM*SSFer(C5Be[/aC'[%kW.1B`oE9!uW["8e7B+,S`1(=6F<QbFNTl5UuH?g@r*>5%?cc3l!>1M>mWE>V:HjV"G=@OE=kLGkb
%*^FAR-iDYJLVBQf;*)9W`q4DYi1h%VTe:r2o+lqbE@V%oU@B>Jr^4EIOpc7.KP:#X0&"?AkVM7/I2j+PQV4&-(kNl,5)tE=N89$`
%0E?]@?m>+LRRX?OR.^19<Y72@W/[+G==Om`QDMGB_1Vc@);KHBctNp38K(JX)\uP/_pH%9(+@[/@"baXj+aYRLF(5_fG,M$LSk'0
%pl8=MXI?S^`(V\br<?tD,ROFW_3Z0J26WI;AICjV,Ei9p29Mp/7!+orFTm[scg9V?D2a'U<`KMA^sG/VI3Uq4Eh8hE)Hl0gMPQZK
%#<?_%c%9qp$)M&k_A"<#GUhB#.nDifbXoGI$o9I'PA/=_#\6IIKS+9!a+@e3JpKi`3?sAO$?@9WkGD;1RLr^+&I:+]5hW_fBPQY3
%.Ys$Z,6-TH_c"ffg%fCs%oZn>C=D-rAmQ+J4\A.s:\/8h<3r)K)JDk!k\D0fW<o#j)cccLpBuES?$'7.2]2%)Aj?I#M)tX^s.,9b
%dS!@(^r&Ogkd3+iMXd>=gPD,SU?]p::";`TqXDsaDZdlke,!dGFnhCSX%LuOKGCU(R*]Q]Y$.[U@(/&d:HH3j99s"<9U:+i`AdRD
%H9p]8="omPE"(W0*%r>LWgF:rck_+Rrp-CDfIe;\gAul&RQjd-B_?I@n@\C\e!6e>\s)9XdLUSs^oDRi7#7jcl`!YkmM8J(m\PD1
%-6i(ERP7^ql<%dbS\$pNMqq9'0YNpX_\]Ne\d!=(?S]$`Vg6N9<Xh0Wg+9^=,0AI)"JA=00J>R9'VM.7.]o.?o#8jK]B1U\L@4b!
%jLI?MmkakI[Ig7#^D]O.f@g[XQsN;n<'`&!CAq;h;C;`?3g2.k0!tb9,[JlI^)sAsKm=brQ1"pC/!`cf"XLW2*gR[q49:cZ,n^VT
%bFU00FAOj@,S9;qVBH8K2IBD*&D26'_oD[b3\Js?NjJn?'<d)]2Ygfsc;Y(=4Hb88^NfZD[AhlrRn"rS>'r1ZMQZmKb;1.Aqho/Z
%Rn?'@8ch<X@L?$5Zui)AM$<-%phEF:n?kD0M2hJQ1aG,JdBU@4?t4[D%@RS]h_P]Eqho0E)^`()Y;Fna?VCQkHqF5;fC0)5fHbKN
%br1TmgrA*13B#DPUEnaF9Z=>>mA#:jrNkGj#"04+C37npE?f0S44[p":M6AuR[urh?kuSf59'Skq4V-oX3jd;R"S,/X=="<c3!:t
%r_LVFrsB*nY5a0.U[@A3-)0m-1]O"8i0Jj@M'Z*n*80um,&6pdK?)3a^D\$ErUH,]4aX*C.;rF?39?-cY$N%HDZ%/%>5OsQNog6c
%\bM9CS15i2l-1p;01^$$OmjO-q$J$0Uc2fIpmBoc"WaAdRk]ST88l4oRLeZ-(bu<ES$*ZY7!^YDMW*gEQdG:X]bs>\L\0^ZB_[tO
%N$7.IHLhjc$r:f]:baf?q%?:`VDmPVplO?["V!iIRkZaI9Q.XuL6(TD3#XuV2d\kgOS!,n%3O&gYFo<'H8C;;s(Zl?Q&`VChKU(>
%Dl5PNBAmd)2dT#SbN[8!anQh>bpQ*X/*W%+RJ\#gNFtQTqXhend!m4Pq8ANtQ1W)fXT+"HLA1@a1Q]rT5Q(6^bg8Z2N9-*i)+[VZ
%NAQ_(r6]J9RE2W&S='>;#',od@3^m$40h$FVZWKiQ9mJJ7ul`oFFQ-o5h[u0V#EL<cUR4I-:::D1Qam?V42c>)oTuYrb.8ijC6b$
%IG)Q2NR^`FL(<;,$\(!*:P(9:P\rt[B;9QIJ>&aJ1&i>TdM([P)l4M(s3W62''oCm;8>j&JLtie3`rE84E$BM%j-iZfEd,-&n7_,
%g3i0V_LHbd\(.^Fi8HeXOtYd^))ata,Bk+H4BnT=@lcP/E_PXc/&SIM/Z$j8^3M`7F).2Dd_IYfUZd"sBb=?TO:LnF`&]X`KCP`b
%4[%d99_FrkVJ1u1EY?s$LQ1U?do=MnZ4@su!g:#Yqirj8eh#`epn=gp3;K2(<N9W<ie5cXLp@Ae1up`eV7PJ1N(+2G91DcL$\>pW
%q/2Ps9<)._4`_GI9g"D+;rhBdqCo&9(-6BFm=+ati7mX5p<4qcpiB?N;4h=sRd_`jg\@\?2rS0NAd3o*jLcN&D#n+i1mL@s;GGW`
%VV8s*N,Lf,[(6dq5LqL+2E]bKn6*Z#;q_90Frj,'.(ZV$%n5s>9e)MJHqJPbEYCbRN!hK8@;eksb?3mQVRL<_$U'n@XmCThKJY8m
%BSouabf3Fhn2tZ!j39J<2-$^./.^MqLsohR$T"PWXI"utAt+K]*a&4!nhQ'I=gNt/j9]LC)WrD>q4W*hJ\B.R>#hV5(+6G"WpPi7
%7F)slW<m:+i[;'2<8)*@<8TcPZfFPc#OnY1>gpbu)FQQK)/NeFoG\Z$EnH.19gS.00Z!$bp.26@I(>gJ$.\Z-W[GhTC1.`^4VWsL
%ql)+S9"--%Bs^\[bqM:38JcMQEgAXFAk>-2^MNBNoo7tG0C!>u\cLEOURYCM+3`7-"m991S<\@rQbPolc:oW!Yan`D^??c+S#KAI
%>GQ;Z,*cB.Ef3n7bRA_M&rT_,g8UTtU>-rVS%VLu@Oe#XqO+%b(V/<P)8/Hk\&dYH\_LHQEffD$eK:edN_+Y[D(G$9jZ9!#R@@G/
%`-d2R`u>]L45V3Q&f4*QJY2Rr]sXt_;Z3<BB9taacFrGjiiB#%7X;!ubi#?9"WT"_G$@n6n^6.:G22FMgr`r>@!RW!cjL@j9ON.'
%=gL'[R!J"/<%;b8)P[a_XR#&:\%1"/&*F/N*ODK)e9jj8^!nV0dAJ:.3XR%X.E)q6[e+3LF?\:=5C[t=Ol.fb_B6%6XrBLlN7+2@
%XPVBi#8mWH41\murb36E[HWCIO%lLkTQgAJ7^Hq\TAm'/A53dJ8@m`/PNV/=LIq;)`S?UM`5Sfj^pLSipt?__DoEPR6Yfk.D\\M=
%^ILcM<n4;=?fs3.q0#sDSiu>^`rr"cfmIC-@('-KhK#46m;gF>"n3)De@iq(I>Xc\_6qf`'gVV?i+AI6;/=_&"$P*fELld>"$8Xe
%'N;>Q%Ft$TTfcDJn[iY(J&9[\]Pl:W$btt7i>hl2nn64VI\tQj)1A":JtAuS<CJ](QdLh;7Ji\BnQ2\lSFTh\@cMNBR1b7Ja%]S4
%m9rLop(&q+Mh=]u\=*1Z-Jeh`ZX1WDZm=Q+*"s@dn0<<Z.;KqWB$`i6er#bNo_uaHR:gu8ULkQlR%$6A0C/-7-TfkWf.^DdoN"Kn
%k&(CPOG+RAGr,.7N7W:M3M;]\`[m)#IjYa)%VJAJK6hmsDj_^Gro2fj9iJmkp_9g-AXIVZn8OV9mXEu!oF`n(Mm?8finq^nqu>8s
%gHW$%2(su&c7^R_FZ-$sB>"6;@_+e8p_IbsP@i&<iJO?7Z'lWXl%POnh^OJ/fZ$J3P\*kEo.#%iNi/>na!T9pn']*[e*$Q(fOW.]
%-E4CW\l)EFC=>4D>'&qK.%g+OpYd@QpMobmif@D43<sQ$NQB=j-P'de\M<CZ"hO;Eb[Wg\l7]l'F.,!>JUTG&3c9(PgV.r:Mcj,(
%0>FobbPOIc'WU<8KR%"gX0mE-[*=4;p<87Qp_i4Ciku8`c`f<.9V^S.(a;G=(*AG5;u&:#>jL!,9//T0+MjQ`9=i\R'b?)E98[%:
%28#FsmQmBZ;nRlC.XS^0LgWr:%1gjWi?bogVT/f#@4@(KePe_Aj%YGsMT95I'i!;nSZ(,;a%XrqH=0/jPraoMR'Si%cDChl>&9TV
%XtP%XXBa=-m>!('>h#`b(.qM@GZop*^I>st\<nin/P`%a7"SJ9:+&oO0JbBDM`EtXib99B>qrusK/IjC;+fa3.*CP/JW$i_1K$7-
%U07*IHKP,VMMKQ!:<oS]$V0JR1M6Y<9'JF.7Ie7=i[i73/BWI[gO.2N..mPT=VOY$AELSSi[i6R7b!@&-o5Aj4KZT(X87$'Mc0CH
%B2Q;q1G;r3Q+JmEGc&L0>(4>'9QMfKqsljF-bL3F0n5Ngbg/WR<@Xk;_7."j0U?uUi]CRT^:6KdO8d<q`G]bFcdXU!q^WIm:Xu[u
%mZs8p?2KRd',Gc9_\=Zgg;:!Em+P^s[?LuZ7C`')_DN&[lGBPQXP3]_<EfTAh^V`4=LEi_qk(<3]fSP6;qU!![41W""b4*04'*AO
%$T7dn)MnhZnh:4T2-QqUT?QehO8!T3OYD4Jks/\gm^/^ns-`V"jg9M:4f9gF?Dd4]a'"U;X]\[T>''>J.f2t-[8b+;HFe6n#Bs?E
%4\>\9s&,;(GaV4:Ks#KbbgKa%k!FF*6=^RDF889aTpTT4(jU8Di[0oiNLNbA@gma,PbEI]&-#Nkp`"q5nD>WVnGSp8\4eOXq94gO
%ZPFI-YBTjA(D>QgSBpm#U@GcS`:&\Vs2ALG;bE+bfq+*lq3lGAp?A]Sg&I2Id:aD7aMZ=cU[6JPg9YK3JqV%t>Zq.=FeZG`!NT!n
%^-!)\l_F0<qKUq1RtjjVe].bT`UMae&#5.pp$ogmNsEYRXBJ!!]U7QdnrB=u_K4]_4_HHijWjfRjbr$58^??c`$a/[D@Qb#Id+>o
%s'>!kcK>,p'J:Gs2-F8Ps)'F^IqNHppKPAUA$Q'Gf`,7Ds8Ip6qMtHf3-mtS^^LtN(eH@RHtTfq1?8&"`LcO-cZcYWqrqe=X(^TX
%?A76k4gc-V6NjDh.\4#:0Ue(+1qdSJLDJ@um['s>`m;aXl<:T-!CE`<XqgWFiF%;;71C;3H,m!O\E$X>qpB'3p<C1H[2%X>3@2uk
%/Lk:P>9WTK%2WT]7@EMW'V]u=Qej@;A;`4rU.k8,&Uh$$WbO<s;5+s48$#^MkRYqb<@_gajeuT;c&qnWMu)*`9Xs/WS>lG;)BEVC
%qt^*,d(u6<'FGo6;0DZrZ$t8V4684l;Ssr1(579;4e%T[M+6'V7H[S8_&.U\g&o#:50S-=U"rU>&;-@"m?[p].s3c5WIJ(_gNb8O
%IV^bs#!M_sLY>PRA3VtT'ODQ/QUTkE;0Z4X?5A6]7H%fTGa[c=;43+P?L0-MY.lLp0/K,L/da8(.D/>-kkdR,HtK7+Pd_<t\ZR''
%]8J""<KrmH'$GLr-1,%m),8R8c1bc_?7n6?>W+;M#:=*_Z3`2MYdeLYW]oOJ]`)B[:CPO_J(->+Ve@=@m0i):_a\q1*+snZ=a,ma
%S![g?3I3X"1[c,ER0h3!Dd;)5oY#-MqS]rtDI6T&^,.DrrL^Wu-sooq`m;UsC;/H+nibbh[J3c$b_-+?s)W>o08_<AZCu[oHiBG)
%BR/RQ_qS3HdVPu)bZc`q;JE0IdKWW%HSik9VXru<a8a*ui8:X(pIkd'D.UHIbH_p%g*/nRo*k#EYE>AN0q>">-aW>A.sj<@B]DgH
%):f0O2:^I/2&C79m"B'/"$9gupaLsehO*dF`;a#j0kMUC&/KDI3Qc'u^5a@bK0"`'*YrmWRE]j::$3=8N("aselHB[a&phG(3PQR
%X(,7hV\<UuI@n(B`CF9Ip0*SjVf?%KPTQKGS(ii`/Z),]C2@s4ZOIZCE4&D;BrbrHIIF,ZP*_D@!.S1b23#8F=f"ta_S4_(_CK<2
%-R%ioSecA^;ZT>6cOA(AcQ#KfM4D-4c`CT(GI.=/0,jCj7HXWA+\r<M@N#\/0c<HM(+5"ZPIu_-oP[G"/f,jg4hMu[1;%id@sVB2
%mRipUV>hA"8t')Vk;1]orN3q4Tjnj"3]Qs2/.-j<gJ9qce[&RRpktK19X@^q\K?)K$DipijaX.(g,62iUOF(C=,4Mgmr[d:'/O]N
%kfX>i1OeE.$Obkh^mBiJ*ckD?\%i2sX("3!W5d.p2;XddoDCm+I[]fk,+"e$>gAhT>@_g(d?[3Z\&d_24IbpR!\CXffjeWVc-7"3
%h`I>!E!sK+S""RZk@'JgakZ5/F+<pteKUPgUiVH9DNW3rd^a:dcJ9=,\S<U#%+ae.Er:.(jZG7R2n<1LrW_&G2^Z7_553l>^u-C/
%=^9$%r>aAJ&*W3;2/mVdYJfFLbf.7.F*On,'Ueh^`p7CmaI#`=9S[_F]K\SXe<Nopl6@FHV3Eh&=2\#dZu,ci]i<Er]P5J.B(Hu+
%O[jl_7?,_dnE*W,^0Pm1X(6WK2`_34cM?&=5oX0dReU3tmG#B/O%<!ZUj*4LqQQkDBHF[h?UgG;ReSJr??2[S(=V:2B?en""M4QC
%o?]I\hojqcK5'l=iN-%k@oehWl;]80d2*,U+0jf#26M#\Qb:)#p7#E26F._T:\h+M3hEdF>g-n6XPi';.oh@C*m<A&\C4mn)sJg,
%an*!YVkf'\C"D%qhU^R0"<2onm0)T-RTi/aMo]:`[cp^DZCRKK^rq._%d0g@>"2H`PYQUB1;he.6gQ2KV2n=d6.$l)qMRYe+t!/,
%6LqPpcZN(Vm7R/GHscf1#7Z1QSFZ$McFghE@_RcV*ZSPCMgX'Q-sg5)(q$R)`re9L!G?fp:*1#=Cp1aT/"l``@&M%t@VSrGTmF<(
%J$(opG<<>#]g+aXr__:KS>)!:+W&FDL5kc@3R.g>ZgJgHaO7pccFa1LH,'-r9R,M8kMJ5D@g./JZGBZQHN&pVS=fKLX&R<>7!u1>
%E.?&T]hQ-nAKH&`(UqWJJ8T?]&Z0&X1!pfi4s+A9)>;1+9O9OQd>L+JM">!kBARbO6L4?4;dAp-j;SGJkM^l\H*S(Xk<,[&(n5@u
%n\#"<ms;snhu?.#1j*L"n&Pc_LJ'Bh*[:*A^Eqq/<LK`$cM;tSpTW,rr].]'inL$+qaAs0/Tk\92G)7r!b/2!f5@Jb()nQ@YVn;@
%6+!!QL<jEnh7HK)ISDe?=u>sSoloso8ChZ/WgVG^^JrFFa%^!^k@&;K;Mr&3mBurGLHVci`^G3X&m)Zn/7$Pt)$u3bb-qqgq%9sN
%q%PW2@Edk*b2Q>_*.h*/oTSHiWAN?E05jaU6(.arV2rrVBepiRIekuGF&D]T>YR/??BdX.XU[Pc(=VqFL@]?FF`G@jmi8V19,)dE
%,tP)A$r+F2RUu5)8/T>kd*%j)bX!oWNhMODO/l9_g&'hps**&2cQr'4Vg%(VF8YkY+=L8KMQ/=IG1nh2WR=bGWp)T(b<Y*`LHb8c
%U$0'g,n@g^/Js5V%KCTD[3:U?"2;!6&2;L-c<jsr"FZ)Y;%s6$F&3;.UF?QM7=Q.pq!%+dQcZS$C$!`ri,)<2PG[lVM8(4)gk[h-
%Q1PIf"D_dZCUA36I89U`iLd>J;&g,b(-.,5AGEqJ%*ru#6IE)tO)]k&=e]$jOQH^<@"#KkC@</4])@>s*Q+d6JGfW-IAaf7-d#Ni
%%m7KMW4-=\!M9?^,2.HRf+=[)1^>j3-=)c_L5*&s/FYnZ$Qh@H"HX@1.?S4&9J@]4#f;B1a5TSj"X!b&$R3PeF#Wn*!*?rH5#%j.
%4lhCt&;&8*^kaNsBU/g!VI^6eTE++A][@cQ3`O-``</8l#HS9*5!=cW=eg"pY$.,`(s*LW6i"a>-1oQm9Y@J-1PP#d2k%GZ#QOV7
%>\VhaD;='Mj6XhCB2$-3%[9lIDOQK-3Hb/nSC,CZ\UD[#EB4EK^U-krL%*"XY=?pd;-3d)YBLn8NZ,_\3bag>%7k&oM?Qq`qQfJg
%OAqsXIBaOfH31>pO%4s_JF!Ius/g1QBTuBaa6Lk#pi5t<A$+F5q4X2CkeuBkOO8];KdE(SG5p1)T.2P`P='0%du@72STkY\VSkdV
%RL'1V=qeTAEq4Km^]g.JX4A0N`WN!Lk[,bQIm,;k6hJnFDc<@',,Qa4n?UJ@(PL*RKuaenAc^l9L;5#t9:`M&1hOQ$rDaGhZkX;"
%+Wh&;kZq*d)g[^?Hnt0*:!`Q3j`]bK%*8/_=Rro'Q+i:sB/t\UF-OW>[P(WL+2bRcQPa4)]!!i[5(>E0Z!j6$\V^60H`o.NV<?+C
%e)rF'$>`f[Kuk<04SV^NQkd>Cl0,?:M8D[#-N4h^POWEX(]tEc2iMbS'FbGeNN?<gc:tE%\K6fgq:K@m+q&3BaVG#.^\qu%(?"^p
%JrYS#.:n=G^47'rO,7!lgP$;:1=q.QRQm=BAZaGN?)ha/n(:&_\"d&[VL<>n#"#7`bEpdG/CgV4qJrIe<\7ZSr^ZREU\h<TloS5%
%2;b7Y[T$3&N=0G`j#I$sl>(FsZ!&/`;Bq=5k7(F`Hkhtl'/p<t:eR*_qML05i8=2#C[jZZP-23?,m+>!s7f9q$DXsU1he,Qbo`t3
%pn=-.<8V_":gLXr9O(V4<]`oRp#V-5Vr_UaL\RTN`Ug*YUfbtWFK:juA/d`SD@Tq,XAMl;Zn-XX]bgne&u2.+gMIUQBI[SqN/0)'
%/RP4&BbYu`Af7Hme+=[CL.-W4NDT)uNo^qBN5R*o'!g'ooCq_;rdM988,rI9Hi5E+1G.M7<@6rl;1E_dO,-,-=4K'&E8;c(r=:QD
%8+1lM4-'np"'5D!D0>Jo=(FKg2!$9kU2)p87ple&?+4744YnBO2[AH=h(kK<A6lCj;Te*-iPr"C/M5a`LKMP4lWAlljphn'ca-p)
%Q@4X)'b/,5qsaJMHo/oWH&tuVC5uKp1scrU;LPd^\Erf!>P>Ih('nnaCNOZp8#b^7"$8<_E/ZWB3X,fU?*%JqeXK%-DLd=?9uGM4
%M-TfI4->8tWOgZ','%lg-dpAr0@PPeTsIiQ`C)Y=!0UB;M>]T]k0V%Q,-t-Cs06sNZ=YOS:"LpdqItLL@D1L)@m(Gso7tc>G<6h>
%X)T+ON)nOR+d6,\LI^+_>oG%RZPRD08T/f1Z7?VGo9'>u-U1fob3FM'TXh:4"*,Cu*<gHFbGmd+I>CQ&4m#^X>+,uKPt?-8"@q(4
%Wip9-7U>tcZm2e,R-gRo"GL0q(8Q.Vd?j=/OI^=en.(NJgbJJ^Ce8MW3RpM6l<2gOoah8a"neA]a6J!(raEoXopMu1I:4q`f3,<E
%F[X'N.p+!Oa3gRo[Hu(@@)e$koI[)f-lAYdnjA%#mj6L0B/U&cf.$He!-+H)*nSN1g<c;Mo;4]pW2m@q.>.XtFk8Xa]%;QmLdMX;
%lVsjaEMZWYX[u=\dXt"cnsrBAqe&TH3R^7C-#i[!Ejl=F?m1lk)qB=H#N;7s)V;4/4Wt"e*0G?#>^4sV)i>T;d9N%GpDt3Ta"ln>
%Xuk?RpC9u)B*7I%1<_Mp_FIhggHIEpro\\Q*6n8o<Ol#(1s:&92`?O<Xg1LlOH2o6Yf6LdWdcSRQceDS58\+s@C/hNB!1J1.V6>n
%["d9kjO]MKM]lT]otJ+o"j]mE`LI5rk.L&=3@@>X\;.=dGd"Gl)VlglV_rIiCEF<3:><<r2Y2>dek;`femTP(r@n>iG/c"R9lt;e
%:QS,/[!bZ#qKQ@Dhi!Jn+,<ON*5A,t8Li^*dWRQ6hgRA=iM'pA']_%SUjNGoX4jM-MoZhSPtJR8<^@e3F)Yf3UWF%K)N%[9UK41>
%0^)t8O"uOkJZ)Hklsr#/<E%-soE/j')Zt3DTGPX"S*dH.Cq:e\(c8O*diIp&0,VrRmd3=3q#OF5hQ/gGXjUpL]Ld?ddskQ[AtN1T
%kSu:8<k1!t0+MBsm0Eg/IF)Y%lE4Yk_Iu^f#mFMT#LbL<ZXbo/BNQP,RXbaRD#CM\B0C5O2Z1HhWun]]W*kt9EnE(HiS$8*`]2&)
%-psLi+/WrL9(POLnhBLTU_3_\$UTXUdj)d2l\eWfoFDgS*u6DJ\?>la8k`?ML+4aIC(9Z"rQ70;k1c1C/sDJ_fXAEWg3;t#.+s?8
%JjYoh*nrds'b+XH5!e*=jb$/fQKD4nS9]eECdc;bJpAFm@D08hUY-d.Fbc7"lu3p0/qFL@]X))<aO0lcG0DMGb"0JCSnXG,UNn$t
%=KYL4-mma*0Gogep(4M11'!?:lmr)+,u'2"bRq^BReJK&#RUKEfXItV_Wt?aTur+OE7-jOBa0>4l?19b>H9Y0kr?PuP2*+A_sF[e
%=L8In@hoj=:='BX4/GZgK*c_B0t`T^O7R>seICi%p`*^l*]7U;EQgAX$j'T9N-WZ%IsWoac@HLp)Ms2uM*KB[[nA<doZM#g5K;=b
%JlQQoa3,o@!%(KC>.q;&8,P)m#trbEb&,$`^<'di7Ved:RU\bsUCj!Hl[Zh\5;EcQK8P9:alX4GKA]q%V2r%[DKn/JW<MueCKAFY
%0SCTjC`%hFbarmd'Dk/9WhNs_[5In[Ef\cFJDF_/-O9!=06<>'m^;0uqX,a._e`;@<k,6?b_jg(X74JO0+l+oNHEng4,k/jh'oor
%aUVOW2K7#E.3+)j<3$?u_T,(TD+MQ@ju0q$SORn/12b57$fR`YI=e7<6uX^%Z+A?nK.B=b92G8u%_$Qd\#,Bi;sc#i%Rh>fhls?=
%r")ne_]/hfIb6FqQR.q9^Dt!Eb`r5V$6?`9e#6IV8&^:OKB_^TM!D1ATH&A^6%p4W[-/qaoN&+Lb2?U^a)\t_Z:n&4G3ND=]8;6L
%Z-e-*4$*r4gciS65u5_5C>^1BH0]cCO!l/JX@Z8_]<8OadV(Zl4usrUefFn*l?Eho0HHa3Z2979fI1@IEV,+o964A,g:F,n*(e.t
%4aSJb2^eQQJ#XaVNoMel]=g?c\UAoP8(5V\\Jrjr:7&;'oZZb_D^bW(GBA*A3Bs`Y/UdKj><9ObeC&,fg",WL^]"/ICXV\/>[R(!
%2ia5t>D^\'c@:'<L\<p""7m^(_hSs?I4`CUVlC4K<\NC'-0[+4TH4`'enPJA5Ic/g&&<tnFo4,i>07h[Y>P3Tc:ZK4o_"^s([ap.
%oX0@e`hX!N"WoXg;!0np.JHko:OugD[/e)aY(pLkn7<8A/R9F#f$@InZuq+lV\31FY`6A+;Yaku1=V$h+W<R>-WK[XID%sS6`J\N
%pC6a\JU_2ocI@^ur^s\_JMr'tF:lrXb1#csiEg3J;T/^FPhnuT@UV1,^WFL)6b-=X]tKk0`A\[%mu=5EE@(1;XK3MG-;Q\h1S-Hd
%T.G)F=!/>ap=G[BL-9+2.h<6WopWVmrHkZS@NGflYuVSHTt>XujU]>>CQ6$#ZR5]<>LU?:j+TrqGZD#8E3k!hJ3?\09UMC4,rF5i
%(CW^V!IbHYY+IfY]WO999+eO!k:c<MF4hjA`'P-PaR;dgj&qa5N8NGu`\,I3C[opJ15@=4#ZooUK?:h'DJIG+h)pW\$EruGUqCj>
%I](/3,c]Vd3Kc>NF3bPbfBVh0L/I?6GLDn#5r^<!-a_^)82,1TV%;GW94BT?9qMaY8uM=YpNHN1`#md@9[TH.k&DZ4h`>EtZt^KW
%=@d6jmY-j>HXBJ&=46VkaOsdGqkOkc`5Vn-2*fK%1t+WL:DKk2:@.%Z\H;*m(6"%0Mhbi?S6:X8iqe5O`cZa<.#QdH$6(co)*1ld
%T9,cu>o^c7=X07$phR]jMQ%T8BJU>b8?<V;;CK2BXFqYJAGl(ADfB.P(&a,Gq6ti65_o9\i.Cl"jeFcL5C(.tn<sZuJ,e.fPV1Vs
%(>+"<nd!HXhu0#VGnUQI=^=:t[<LX;I9THb(_ZLG\-_E9K6En;Tgp7OjSh%:db7X<^V#goo<0jaU46/G/RI0pkE-O]8#SfT`kMH1
%&#AcNJ+Fp(p'37:ir6(GkA,S21%jZ>(IJ6'G#d;i;iTRdT5KReT3\m+r+tOgnFLEWa*qH4q:RFL0;`);3+`&/RQL(1Y5HWFBF4_,
%eA&V=,Pq0.NmI\$f=P&_6'DfTj,qT^5OkuUi_Q\E/,jYYrP3oig3WC(c<JKkP>EXhcRPtKrj2Q2^n4gE1B*2@9_7F'Vk!dE]"RZA
%GM\Y`\&MIkJ,cfY6c2%C?A\[E$iSKQ>2Zmf`Tt^[^O4d>nQ3k[=b"[m/:W)-3q>3RGOL"@4FH@B0AX;<XY&[Kae)Ek9?XI4l-`a_
%H#78jG'gV29^G\NU%[d;&p:3BQWX*k!Q-JYDis'+l"kcX.2lna0(#bk4%fh@h>:*EG*u]05G)mfRAZ"XP^PYT?TKj4E_Dbq7<@_9
%\h5Pi;:*^#9OCtLanoG2M@CE6'$W+'g(e_V=Dg8R[;o.L%:cMI$-PteF(KWVgTN16[,T>N-ncPle*NX4bce:fAZ;B1QZlc2Q0!YA
%\,5:Jg%"n/;4^B5B5d(IbIPY$DRo8F)d9s[%]h<JafVCN-)[-RC,OmNIUc.0@$p'<AYQWg?AhfbQHo4T/*gDrl:URAYdQke:Yo,s
%s&EPtIXHEJffNpD<t\)NIH?9EKiUs$2uLh[<dT&P-6,$NH/--ZXXK=nLR$$H8St='g?u&LXMaP-5MFeE@91utca'UfcMHQNIASi&
%"Y1?nh)S]o>E)RHr9@_XU:,AoZ5ZojMrB<=]-Zcdoi\K5YEn'&@J0$L27M;>PT"?:ZGN`Gf?4tGiO)-jN>%YQCQTV8Y]c\Y2IMo[
%6fIlPmI[jD>UummmB58P*#@-?9&nL&.fZa(9\tHS3ha@6qHEbCZlW,SDqDPcVso$),5Sej5;B\@b^$q8SpT8I?bauH>3jM*g?EoP
%\-oGuZC.&%X+%:6XPs$4Y(%[$O`*/]=bpn\^.HmF.NQ4Y3!C83;/#+D2BEs*dRO&BQ/0gIPd"T8:R2(JEO?M5:'>V=0q6u,lp%ts
%J]%4m4-0j%bCSF.`(f1?n=Kij]`K*!n?,F^k%aHM\/AV"=Paa`P4+n;7pLK6Lg<k:0@gPCo?L1)2^.m?goP9e&"AmTndl34W_YoM
%11#R[USVERq+=Y=B3RqjG]S1H#*l%YC@LUi$4!]09+cp3g3?b\D_^M#g"&p>Gh>Wre(WAuWP,repQT0s9!<&GX&5tUKU/'\H76/3
%(CZ._:b3;BHbTlXkS5=abs/M-f>jB0:d'2/$[&KD<&b_E3"67276Q#pCS>1R-eB:riTojU8m"*a3XY2n9mqBQR,-F*?!\;UV=HCV
%S`h%VDkBNNG5M:(pj!gsOl(W64Vt)WNS"`[?7jd.I9oKDa&[)G\umAuW8\!(;b\*r?Hm:s@2PFs$Z+;(q*9qb.+B\oAV^b#U_<sg
%4N^qcX7'5N@<U7TbassFR?PS\*HSh15%MfN?=_p!bNiseR;]A4(O0L)r9G)e'B@."PItqO^1F>X[rc[d_(aZQPmDEB45q0&Hl$&I
%DDtWJ:;'kGF)?)sbm3R((,+R$9Di3BZ-$EjT*P-hW(QUK>FV@k\Ja9@,l71)8B8426K'^"+r'\Z?$M_)f#5g':(ZMP3K6/ViUb0n
%GeM/I`Nj2oMX<0>2Q,^sda$6;90,Y_3U(uGH7!>R#B02(q#M]rl:Fa2Y?eWuMc=O`IT9H7o;/"[aJO-)&W*<Mr*[84%jQ:5XVK4j
%]1Ehd\oOMa;(cjUN[BtUm:[[=P`:uINn:%l6J_!))pA0)6/kVnajj"O*CY8_m(?Ef?["m7GDY.hc#R4d9W=;#?`mI*G$E!L]=2p-
%@d`V1Mbe\4-_$O;Qhs],!dcN$[C..a-0kASBBI\BGq5B==41<pIC#ck#M\EsgBTHq>sHDKXSNIMNI!,;It"E<=QMi,V94#4fM2%9
%&pmhaC@UtfqHI4=kVV9H/]s#:`t+Ns/[H.E@1qP*9f<SnZ?qG@AK<-J`P_$&b&+&H'[P+ZalDu33;IYpM^;T2Vtnj9g7FUf9:LL^
%eY>?pdP`%gl1LOTFum3?PLF/Zr@2)8\(ZW:87;1R%nY*&RD9[Yk4!)mFF*^'%%'PLI$-H]k03\LD(W/>eC`9ORB=?J?7$En]Oe5e
%8r:c]HtXQ+3m?:IT"5n(c514ka0f]*mptJVTma4ns*T4rH*e"";mWbKP'NDMI::JUYI"&tfOhR8rU=tKT`*K?HWiOO>.E"Je$jSO
%Ihia![Bl6^H8rOqQd<qq4-.MTn7aq0Sp[E&o7s0ff(jZm^7JhLb&T,@s4GH,=O5QPs/FGWOOD.s`OWXd$H$+JJjSC9@lm1dm^$ik
%jgDJ/J(Zfn3mMZECKL>LmE8u<q)m"Rpm3%S"f\`@;ohBcc3mXQ;S:^7>q]R(+&4"]p\BH"/$feh?h;UUo^up8n+=2sQ?p.L`:FrW
%EtbTTY&<[(eYO4kZBr-;Nh5*Fc\!1agM6\oF;K=1&atlY=2heL#=c<!.pD$u;TnLc(UbO-I3TKJ51#Sgk/.L0I=<S/(\\sQ]-[Je
%@TC$iHn;`"T);CC2&PI)H57qn?!ZNt:I[VdT/f>BIQmM`=.V9hoBIWLFd79pCs_07l*_@T%<.`\CSFDP?_8FAP-U6"4t?F7f/LkN
%5q]?_1:`<PoJ2a`?C.j:7<>e[=d%(3CD`q5Dpo4Cj!:CaKrsWEq4^9Fji6s\5in"T?Hqloa&P87]r\G.n"n2&c#'@VY8jcHQ=2T"
%oDI<8[GEh>2>3a^XlZu1f/:6ZRMto;Lh[`-OU&"6Q:6AhRuf.3hXZ`D``oL4fr`G5HF\KqN/@6$>>*@f;AYLFf:ga7dVWKtENkXF
%1nL--EH?Oq?>l^ll,RCMS(]a.`3<em+0daoXgkjh@]8n[<\FFCg+n9Z@i4?6HJRW=D_fIul"@o6Gn>G92IAA]_ffFq,!0FJ7qB&"
%I-M\a[ZY^90rq[`R%6`[P(U.OFB%A!#&R.q+-;)hZkTS7T`?j(e5iV`f[4q8;u&H7G`2G]?W)3MiKG`9)\3fln)0Y;@J]uJmcCYS
%#b&S71B!BFP\(fqAmFR8'c[dfHRs,`^Dt+5:2Gk<RlDZ-9Vp:.KS^#NV^pf`K(TBN0^dkU`,W;?1!M<,N2%O*!d17RY;Q!NZ^Y'q
%WGU1`R&\K4WBPZAf%3qSFKn3fpTp_TIH^;A/=+`VU"'S0G0ZOciDnUq+h<a@`c2LmLOE6@gbJ`]-LLXjrag2!/KL8u9qPV?ckB(W
%l*RI(9qTu^m<h'K[,lpkh%#mh^X"Z37jZ]`iM05,:KL*!?g($9XHBZJ;gc;;\eYPWc8:`0Ha2<C);-&AjJW/[)jN$A>2.YCf$R2C
%i=Q^h8-SWj1:>]/ZOVCVGWDH?hj#Ea\H]t0@DsnMl7"4YHR9t$n`WglH=?0CNe<d!WbQ/D-BWpa0XXA'`C$]ZTDNKH8ED/483oJT
%BNhhb7[>E7J?V#F%)WJA%^i3(djWa?US0##/BDb<5G!QK2`#Wj]goY46kL&(MjtsBgqA;JgFKsH!<V,-l?j"(\kTk2o82%?%rI8:
%38Z0:D+GU?lOp1\ZUMY;'8AhlV!KPeN\dYB12qfS0PT:l[;&)@$9cH&]hAD=*Q:qHanhm/krkMK@p)BF[uPd3D$5E"&&XH.)0.V?
%WC!<IpPL3Y%6Kp[5%K1Wl]^>%)hP6%_.PLN+N7_eIMuh3a%_T'F7r$p^F#O1l7n5?gWCmkHr#YaNlI,I1`Id:gikSa`#ecJmCDIE
%pqmP(d+2t4\n[HqVfcH;A*cBk?U-;M"o/abfA#c^5&o@t5_\,V3SW;p39/N)(:dlM0`2pKE9lQ7@X@rhhkrjeK77C,<A\p?m;o;e
%h.uc2Pl2gFa*ocg]\JUjqB0:<-iZ#4PruRR=NNCWMNq1jWTMh8"sYLp)^LATF?h'7E9_"C5Bq5[2TEb^1eZb[#7ZXt=WI7t-*Ic)
%cHhMpV0I_!I-KhF,!P8`km1AB0<c[]2gG@jn$nL8"]_-GbCC"L(`3m)5U0;^i?k($p6<,do<jA3cHYd'<4UgGB%P<qnH8Be;2\DC
%ro:A8CL]N$.H0uXE-7BXQ6QW9LO5rSIO+g#IX5CF8n'j#S4]h=a":4h48G2DDG_nhdHC#]_9Q)^IF(/d[UGPUB\%)_=N=ITH?>94
%f\t>-6JL<H-,\^7lA)XMjZ=;U9Vtl9ir,R9I!^`lpS"]k_oT8rRClN-mKq(-FHTk=M8/<@2_[q266-ktp9l0f(%M.[iA"A(KWdn,
%g5?bm3nUF0T+3(4E$Lb*>4&+E%a,S(#1$BI'pLLWH+FU8(?',+'!GGpRWqX&c,f3SZ:&?_%sIZuDb*A`F?B"tI5^$4g,n##oZ'>I
%gIa"=>&FrsDO#5IL6:@OJu)G'^Xu*,\<lDSCmA96`m;)"dJi-*3h^^TpTBRDCXH$OWM<6m0NH6GaNucOXb`j_nf#oIO3;NkFalPb
%"s5q3Cjtal0b?=#*nScQZk0p"3f#Xdl]'ijBlmQq4RQs4H^tc&mBVs=DI:<*M<h0d_c#TPQIo5GOm1?NNR3t0f>V!In8O_"4\0+,
%Q>]Z*168jlPF2YaGu%*NcbZ1<njA'Z/jJ<DpR8.ud[m\RN0`Qk\.L?^BWCdcomdUZ"n]BrV<Fi=e)[sCZ^1:imnGWtJ0$i5?8)]p
%6PYqC*<$T+9CLN*G&C2*"@'/VH6p6ZG>&2dpm)9TmA77YjF27'mc\8,-X(s\HcE,N;@NMpa*D;7^ks5G,Wp3@TJq$I&XLRJ)"3M5
%?gr04/SRti(Z%ch6Ll^qXDFNAV\E]j,q]n8/p<8<070rjX^oCk/#C]sJROZH`5JRcAS>&W:YibQGMH=F_V6H?ch20oOrcNBS41%G
%P*LEpN2IBd<<C"Mjld.V-.F^ZPBrpTf5^6P3.52'[4<kMHF&Z68`DU+J/-kp$H<PNH#P\==mqo-B<'&4U9;k'6?'E?O\Y1`S3#dW
%nBW8SOcK-gU2^_r=A,p9Z.8Y0Rff_E1\K&YhjSus6cVX*pTPDPS>sl2XJRr->(K(9\@bTPWL_;0C78@kRbNh5P`Qc&V^$O*HT@t.
%bjC'idn"%G_TC#kW7Y.$XK%M7Dk+bkTAuj67-.OFk`]I9SL?GbYU(<q%Yo%0fY-Nm/m-f_qtO#sH$=cEF9$m(<R6kaoi2aH]%Fj^
%&ZA=_`qW*n+C5@<D-;XrV4oLGUYOP<S4#/MUQX!XRXe+FkTRtLQ8;$:^7o@QXT:J2)*gN3)VdKi5B]Mu5(ZL=iTY*#o?_e42e)U7
%j5dYW]9+E\<7[+`=Q.c.*aBL:8ie8(gqka,5q;Qkc:BInAXkL>2'HuJ$f@(FV>C(X1BLSk>p3g+m9r-c[W6RTG,_r/Hgr_Q,;=i;
%S9S2k%*)-2nkHLGe$\BL_TP52>WY_lh[=Ou$e\cX<atC@I4jJ6SULn?CR>\f^eGPCM_>Q&F[Q3QeGD@(:\.;"X+s/ZX&.N(M7g>!
%'u+#\md1?4IVPK[d4WRt3BohZ,Yq0q6Kt$T+2CZ,2q?/"_(V<"XN'pC.ZDsETrY,d['+=e#M6q30m@_c8Je#&@dKP5-,g!fSeLa)
%,("i(m=D(^]9HKXm*f/XM1$1plM1=;#V(S&YAn(r'=]@f.cdq["a[b<S%Bmj&1gSfMX?)F+s0E`1,&C('LLJ=()l-V8CAM/Nj-g?
%*KadWJGjm9\E*+h/YX'cOd![>@3Q7Acr#`5K/b/>,I5Z!'bDpRHg;/oq\YhL7.d]\nQ0AO:m_"W$,qmukUC+S^H7nf),WmNZ<</n
%\<E#p;sFk!e&tI0"o$$>YNNkA=:#gV?nk1s1gf(a0dCqCqIa=To@<es]5iZjlk4kmYko2XDj]IB>o#a`roEW=7dYZ4-#KT*G`WAf
%S9=Ymb0-I=g>%XWY?f!qef\TpG.V!(jRZgO3hWc4N'!$2".ZsO''\jp^Rq#a[k3%i0WMH;>m9SWS%b`TlO#:77["E'U,#T4`11U4
%LoB%_V"%^LI_AL#%hW<*#1#=C!Ap-\kBk+J+_K$MdE`+D?5%\6G2*Z`Q'[(j#L;ieZ32e`U2V-UJ2r*hD+?"pR^(%.o`P?APLb9a
%L_['gRcspCY+sGLX+r>^/c:@M'<uX3<d2tF<akSB9'-!,6j5MF<^VFd&m:bQi]/q!BoKtt;<N54PT>m+KiYcnMl`h9$420sHO"n\
%4?EJ9`\*a37&"Mc4bE:?4R2cZ0m]H\Or!(cR)g/9eA-E;n+I2X/K\6$D]GX+B1D]1q/SDTn2.<68kca?G`!c-GPs#oBq-"l?!YIg
%a/pTQ4bnCX+ClaOpAnTIOuGF.X<uKBeE&+9%NUcdF)gW&M7SPaSfg;\>7Ut6`CN`$lAup>*.:]W?O<]?R";3i$)oY#,UJJF"Lns3
%?Xk\\.W-f4'Xrp.9eK=]e6g<YTENc)NjG3&l"$H7d[_ab(N=]t(Wi9#9Fn8M+!c2>1HcSp:%gp0GgU<dd5P&qO3*TqYRXPD-t;G=
%R/OpF/H&*BqUXVU/AZa[3KU2j;JfY3n!TXG9'!R0_Y;adHUVt`\6lAhD*<D;!bDM0EfM2=F%?(L2iW?X2Qe?@%gbc]L""Y7rE?aR
%+K%`Y8cG:fmN'#r*(cphl;A'#I$3:!4kb[((L-7[g!,6Le6&KaHDd.*Z7!U,(pOW.;SSsUIe5M#2m3lo78@C),1*k&_q'\e`OSa6
%U:7;ZIRd8,_QYp/cS7G+&oo)(1;EQ5MM4b>QE&7',a;=[HkG/K<o0BR$6h*ES_PfJ(=`8bHppm%jZJhn/AFJM^M>S0=+2$N]!JfM
%rNNo]@8t>HegfasI]_GBdu9K8j9T<ZiI&7_)95+>Ra$rA^NsSSf%eXnaV<a]d::fL5tjL-D(__bc-@iG.Q=/@kE8ri*lfpS#N.6'
%)J=6@"YIU1=oK<I*e$B&.*!,ZTnniP,kYB'Oc*&;OLVko.Bh900QhejjI#s7lgTB#eOXVK*,90[O/_0hHNK>IG&=XX;s3g$7m/:j
%Loht]S=1NH2f`T8EmS1"l0Z`j)PaTDf.2m3A74IHPWUi_?RMmo%jac+;+:Pb?o\KNGY_)SZS+0crHQ-OGDW=.eVC<IFc1C)@j\Q;
%cu6*+LE8)<PhIQ=#6s4oSI06AQ*/F?[9hk=#M1Jl77;+hV!su2::&\`qWN55TbLmP_V9Jr^/J#aFgdY+<"[Hk]sNEn5^tc1Vit=O
%0LAG3ZZP+XBD&j?S+:``&"qX#2mLOmn1jScZn1k6Xg]fi^IaHGoYrI0A3d.EB!4G.;1kjr7:6ps*u&BfN)4=I^QqQsD4b6=>aO"D
%4lbR#:F[5i5u\@%alE'uWiAQ>8&aaZjCTA%rFC$arSAgH'>P.a,OB4dQm'!B&Vtmg:i`OE@=<2&q:cI[A>,@1dsU`Um\#_*3@W=R
%1_bhG/N;r,89e!6>KNdMQIh^:/S"_!;3*f\n7=V5Ii$Son'H@e9Bg'*/eHbkA3**Hq.L,Rm@oe<*%e@;T7r5p*:5A&[d.u()T'o,
%WekJu>)]_P56k*tIc2Mm":rIc(mU;/RNo'C$@d=#3Wqm3leDDU'S]j[SG^=CCo2Gb340I`prL'W"hM_9UF`,;MdT+Db-R9]DVqpX
%#RH*O+MU!(9$"us,H6lZBY;k/2S/mB:2C(DU/+iNkUg=m>R,NVUa>b_YTrobU5'@cE!'Wt+XJ_CUg?Dg*LtDH3;'B6F!s]F&L8_D
%7'bmoZ7#0SoEK6i#lDL+@H&hX9m=Kq>@ae8Fc[&X#qRpB%rs2W,qG5gB#p4B#<O)Y$c`>3okS)VjaN>;m.Lh^q\bauXBjk,7"q#+
%O&?%*F1kpFf\(&6,NiI[U/L9j<4q[nQP#OM5aU!cJS7n>LU#P^QhC[L%ms3i>4a^=?T$PTZ'*>.>`Y]g0i>YQOp:pMn1Ag('0dN$
%"%6bs!Nl?8]Q([+HfNY:s8%(f7?_o-b=E>nmsrm27I&/r*JG!+:N!RX%2J9u,^T@?HZ+GG<W2.%Dee1.l^aDBCfS).B8]#@1f$'+
%_q!6`gTq$p-gW=JGrXTaS(l=QR?>Q.V8)B!j`et?Xh1,U\b<Pg8tI#(l:8II*&A]ofR$q@BX-@1hIA+o.<Onn::QrpV:$D*fAF_n
%G?(JA?9d)&S]b"^E>j9+2mr1mI8kdp/Yo.GfW_)Fd95r>9nJ2;>!LZmXVX51p*F-YBmWj/HWMh^Q[M;ZO,?T\.;LNqGPZ`QA*6o`
%l.Di;q\%pFd3@H'lK3mV9QqQ)c:`O4Yd.GaTTNCk<gJY[3Y?_=VA&i(TgpQ&kXaoo]2/`?27'NA,#socbk9^&_]Z$-f`Tr&2m7ra
%gNlQ;Y8nu@YnVj-Q'^<fo<hhanOH@mZpSr,I+%GKLCSC:&^,5KLElXtZXWal`,Vl([/$<M8XJ.;<#/&T2^o`I!&SimNm+\#Fs]g?
%qpuGB27o&7Gq-&_%HE'.7@%Em&>Yd14$IpR/gIh060f8=*#G/BF0"4GG.@D)%OEp!gD,rekXfp[Gq!pA\U=p1Z*oU#-^nrX\!%<*
%]sS3IP!%[N#M%X7SECEFZsHg_<IqF'Jc:p(?!ac15nr=GCHJ4(Ng=0QLgKNXT`"JSSO1rcOC@eCA8k`SLNn*P28m=a5SZ2CO<;))
%,RWecl*W?#.L;[S<)S-S3[<52%5coDBM[`)-$akZPt0kcHp%KO>D$KAW.D)>_9ic,7n^tcBMX.BfNU@=EYNJS=6*c+J]MPeI>AUF
%Wu#%hNHLks^F.<)(Y*d/1q8-8pN9GAgZc&Rq+[NfYTB":1(!#[FgQu<UtEqOJ:1&+\p]6Sji+_@b]\d(E45HpXrSG9g?,bm,0Yhn
%iG,sNMX(^=l8R"Rm@*nL3hR6oDK9O/h:VQ";^s&K#2/*p?2@8X2gkaMI+?C`2S2J5bJ[PhI?/bE4F4;rHq^DICW?ZA7u?`N0Gfen
%i2P`LfYC;rC"MLf[<^lL`)U!GbNANPmUJ"],W"Ni.s\e4OiBK18_)_P67080S3L,(kn3.8.$21GERimq\_).)$=94^[crd1EdQ.C
%gb+/m@@t=V`EU$u#l<Nt)^fRFh2?uR:(s%uh.2ceQ?K\tO.*<I^6onHA?HMcm?ckCD3NMY1JLs](hWM->Y=!3$:)g66HkdUS\s%$
%F/W;;N0MM^6A/2oF)a?2(CkBPDk"kkKba'B1^V=XF0UpXIHo>OO2l7j"C!R,dKJO"QLb[JjO<>qb#7S5Li8&d@&g@f@a/Ai)n,B]
%q91\DM98$:F-_G\7_@.8=It$1&=[jPg1r`d"NWs5`'S\EjSH\s(-$6foHi(%RU9tU@Vep/(q"G9l7(t,nVsa@TH3aeVRBc^Yi-jf
%e.-W3VT"MJq.<]f7a8ZR5^"]AJm^HBMOg@Z.4?=M6SlPdRS\lWPBF-p.c%'7;<>fB95^ZaJ5+_D;U;h[.nFkNGC;RbjB(=*r8EW[
%LdF#u37)pe),4;MMAiIW&E)THJUf(*1DdlgKl:Grf0T.4mSff@W>ar;fMIV7B[9m_YaXrRiVc0t#H^l_^`2Xe+1Q;Pg>%Z',PBlq
%.j*tG][jE^>)`aB:UJjWH]b6IPee[2M49kEX).DM[Ha34h#3Pd1Bi3K[Xa5Ql`!cp8aGM5h6$^kU$j9]fLO"Sj/g8"jke/c2]':f
%HmGZ*7NR+Cqe[k7h"TtS#^g*C;EQ:er=u>f3kP!Mk@j#UkYd5l?58#1($uT`;gisT6iq"jNao)HU8S'Nn/1HL<JW1jGrj'cb:g]]
%Bi#$$$Z:MJ'i4mq.d]N(*kb`mXiOSCLD@@G@fgL;*(gF,agiCaZN'**a%"I#NdhSgmeruO.*?s^q=LESS8d9Irj%>"gd>/1)$FmI
%!p/8kL)g4]-PQe<Li+Y9pNEQdF$Hn[XQs^R>V\>^DF;Q'lTXstg_&-\jcpqQBh,Y>QEJ4kh@\hA0iZKF"grhZ4f=_`Fm-M2r)cX=
%_U(#CGA``h35ZZXph5[mU4dDTZ4-IZ$80@@-`cF,cNEV=?:AcI7[*kESi7>C"30C:d^8tmC%SSWqe/Ii0g#tRGQc8,s7:^Z(u%Oc
%I+]iQ3+-4JqqTOk80U6Lr;tV^AZ-D1^N+g%M$SMqYCOVG]>"7>TE"4"3b#3GDpe:X8o.8`_MlPk^(;mF6<IbXg"-3`/I<NWfm^HH
%86pI95GR/MrDZ6]b='-8VYNU,[GG!E.U")!X(s0/Wief8$,^SZ-Mh.C,XORr3jI3]\p"f/OEU!KO3E?=EN,21:A_BMs-BO3gQ)(D
%Fc>K\HKU^p=07iUh&jR(Y;H6X\bA`Qh<Tt(0Q28TQP:a'-'C0<?PWNal#+A>`6a#5jc!.<C,VS_+tM#.Bu\PM4)n#UH@IC)r&elt
%-e$Slh:ree"^QlVi<IH0P!X:3$Gsu$5Lb'T6(I!M;e`aCq"Jnd0GQa1Ng+-Y=3^`r3qqV*>K"br[YcYI%?p99/98&;JE[FLi43D/
%J"QcG+(U8kGgWdR?mBB?A&A_qZ,g<E@[Nj7#oc'_K8s&I7,Y/bEF@d/#o3Xt#Z.BQN"8R55[[KWQUT"t6639M^a[9X9+o,dA2Yuq
%huOEd%PoX\+<UbOM7.st0*l_39UM.Lc@u]h3,8q5,_<@S+<;F&;A:_95`&ur]*CAJ0VVsmAK\jFJIKlaDIk:kZa>O='TbjG5\S'h
%4]#RQ(2+Z4aXm")$k1@d2GBnaOhbX%&oF;c;K`<'"U(.3did+JoQj4R##[4ofg&RP&7(5#]Ml*F'PL(HHf2dmHBAhl1LYhI&B>21
%)]AeZ6-Eit(kBC>-]fDE0Fa-`l%)<&bnA_5Qr@#eA/\L6Pt8@s+S08iBccE),!_MLHQd&<jpk1j8C:gCGf29FX2@gt"p+t8Lrc=T
%0TTP#ML^(VAd$NL!RJ<4iBinFH(H-W/14r#(oB8.pAbT;E4cX5R4%AfLae4SJdg(\"'?L6E.AQQb65m_Gf`BH%We`4G!N;VAc[<j
%Yil.?9[g?X'I_'-8h@kf+AbeS2@BL$3J"WtOruM<ZHY%k%h;AZ!m3:_JIU)27\G;u%PaI]F+?dEj`h!U%%;R$+Y]=Z0b5[7?s.[d
%3ERX;(1EM>Q7N+d224[n\*Tq')1*LE%E5sFaDk<q6j<c1boHd-1*K:#<[0.$A8sn_Gb+mQBZ)mr."j#]9=]j)OCO(l_(;iL:o7A(
%"I\6p4:)E4k!;5CZ:Li4jI55XHiYfASW"!k3(bI%bRl-7)&Q>=m7@G$"I:S@^j-K)U(%`n/Hl3u/;q.%6)Llg&OEfA8#$*9&K'4+
%@s^XdO.p2)..MP%;#nZ,KJ$)'aUr,]F\:eA)c#u]9D"k:.2OCR2@tfSB*5uqnubuT.+*Sj/];6mU1r#0nOU3IBnR2H"q"blm1)Ca
%(mbA-AVM%'NbC6RU:6P!T]dp[!!Q,:bqmNN:<sQ4%5A);cT317[*:\*3KjFb88FS\<cl?JM#d^O9X07$Qm*;i#nniCEsOJ9[EQDq
%cUg$bVBdFE/2HEI<rh=O*.fC:l<"9>9/Zkl=:^.-i!b<n)1XDR>p.0$TI]^oORrOQ_as\j%j55d.(__NM%XilPV$t_.,2&G+`V,t
%#>S3B3"C6G,Su8>j1pI,%./)oO<B5HIB#2-^oi=mb=i5:"(^rUE$.BN6P]jff^8aM(YQX$,eR^hP_h365b>u+aY6]'#8AhR*l&%Z
%S@b$(8+L&Q,aih+TSWp[1G5tnKZ]NH"2JJ?G,/:#Z2X<%K,j8G_T8KTi)u-G<cH"1[E^n%6Z?k%luP9e#Tfk%FU8.a`e8p$d9V`@
%h&\u&V^&h3>VQ\\b+Js!<YH:i_n`SEW&ffullL['fsW%JEX%nB=?q^S*FhD%'``O,Yq$g8)sKUQk1peqYW!aajT+@ehWY%27^P>j
%f2<UOfJXSrklCo%_AjLIZ.R5#:_JUP"/$cE&d00X3<kPB*;_:[:eGoh$uo/HfEE(XU')`:!XC"'3l*%Z@CHK2bW+1ATlA@+#U"cn
%U4FU<c!e1PhXL]26U/MB&ok2W"eU=r>X2?1p'qM:)OPuXQBH)7+92JAh#e!FM!&8eBSC%`"C\[6)5^NS[SB5!K'hJUO=SaaKEqt&
%*nqXV=QTV'0gmbs#&u=mJ.NpP2NX[#iC*r-O5Xoq/+XsJ+q`L9gRCO2bAeB?3[#7/jan-k!#WqK@(UlZOU3Mur1"cPJ/,le@K,(j
%JjPSVC!RAA6D>:_,;>3kL^Aeq#Fl2uHBi$h"2mc=:RNg=!gs*(J]Y2jXc3`t3R-9*M6n:eYp`,(gdqL4:*M)#JM[!N$FYS?&<J7L
%&f*d1H%H?C/iqiT6noP#.3OKNM%T)#-gQ<B9jYir$%rC%j*X*-__@\C8s2`-PQ2n.87X"jLn\0ZJaaF#%JKkN/+K>C";b[NZ[`B8
%U]V+G/4=2s8L!+JpeR3>Lk85]J\g?=m"eaGT\G>#+ljr#%[[Nj-0^JL6:2`sngHh7SA8KRS-tAl=QXHSBWXsID-b07KOhQYGhQjB
%),X07N0@ef/5$+I@-dlc67EF<J<6,mll:e(F9,N:;06h&(f_]gPT[Od'h_4XO!q5@SBTZlfX8I"Nl9%p/[Zu]h5h):"-95nqb.-G
%#h!nD@.#28(2Ps)A.cJ.KVCJi6V9*]'7U*.jCF`f[WpCa5m/OeE/p\>ineA%c7D9R,olZ3-\[M:G(?_a6loB:SK?->?AUV,.)nQM
%3J"s_c6\$bi["$U]ZA4nW%;t6%KWs#KEq[*ZkFVl_R$#r'pQlhmFeBs4$B?8:d^GZ*7$)"XrrS6OCsm7%%?.Z&*Hd%-&VE_bIj#B
%_"9q25W_W[isZi8%ag\.0\CR4KsEJ%F4M(BU>#bQ9<<b>A(a>h8[9ia'M"J>ku'u'KLc8;Y2g?&+B,]PJ.a9e!AZY$69pQo>Th@8
%HOs;aMp0qsP$<^'8Qq/\TO\iPWP$[^D.h!.NjAuoPW5!`NjDkrCpShH:?[IpJKbn*65Bo")!:r<RgY\PG3`=H=>Wlc*Q=jp=q@YA
%!JOIVi-<i(3H/Q4ek>F!K!Xl"&JAD@!.knHFpFna"pte-g)/L_<sY4**?bM/"bI/Gi0H\T_$1C,@qgU`Ak0`hG#8Il6)XK$!\Fj#
%%%4,*>Qn)X_>+Vdb"hV_k66tJ3R2ddi8!"'\Hn_&"(k+;#XDPP*$@VC(W_FU5%SRR9XU)7+@ka<%Zu]d-Uj3bbVCin4NWI+??0YG
%V&]Mpo-2"V&eRVV/@+!2A+d[9ZQq8W:lKD<[brEt3+6:O;AMZb5+F4P*%a6Ec]^C*;E`<f'qTFC2p.it:3;Eqo'7QZ@bfojYW3s`
%P%;iQ=6.Mpe4L?Z<JEJiZ]T*+NIVXbW<gSW,ru=&\ikk4j:''7Z83K#"5!a_U7Igr]RqX':6po\1P'\HLVqgH5XqX+fbJI`$p^D-
%$ZD]%6J(^i1^m$M9T0[C`S>$gY`.OgNH'A%n!H[cJ%X7#\!o`59[V-XMDX8l*&Zn?FU>oBf1Ig,V3Xuo:M*Hn;6:L50Tp+]7*+p=
%+>5f>n0l<:Grmuo^u*m$!):[lN.`.R,g'%&>:!+Uj7E>nK4C_X/i/*M&(l3JUZ=chl%$J*&;Gc,3^K!\C."^9ZZ1.*-B]9!M=)Lm
%ZNE58%M!4+WDX#C6'3iA,"YPHZ4+PmDl46[G(LKL,eTp!QEd2cLcPYtT]\nNJEhk?M)nMF8b+EgHo[?d5gW-VR3d`Q+k(Rd=bmf_
%EZi\;h*XH>E(C'g*&\/6#:C_Y3@?s*EV`*2LFB\Gm.:=AC/ToK:teYX+@SV@)VJMrC*t2k+c.nUT#p[OY`bQUT_M@s#S9<pP!#D#
%45Wbi@$R:oT0SnJ!(Fn&5YrmN8*L)4[RDRGTgd#XU"GjQ4#dK)YW<+Hai4St]Y=oO7(`:EOn=4sJ8/L<mtQdZa'fOpltQO+C=qG'
%%+%SrGgRsK"'?-$iY^_b11SK>Md3ia"3RE8PRlLT2tE#i+97oJmBR/%*m32.B$/kr/ZQPEWC7*o6TLu9#t6mM63)Qca_amLN#.:"
%Y`rEu67#c>.069-AHsPTNiNi?U>&@LcYMRX`(DqL7DV,YqOQ%K%moHH'S+X@jVBl\bV>/0!i^dH9O)1HI:d39kuMu.V`ZTpFE;`e
%h-k/2)d,E`+Gg)Dn4PYNaeW/'E$cSS2_I8aU(^oWTH0,f0UtZ^Jr-38[@f"(kgj*T-O8YC*IsJa8]W$tPQM&T`4I/p9Ckp)P2t[=
%Js58J#fqZOYh%Wf$;EU*"lM3h\<U?gKNS_`G;s^cQ8hV\Q-<g;#LELL#<M3NJ2pMV72^p&3R'PoVl-I%`k1=S%eSCJ9-f'&m;Z9b
%YleB1@Aa@%W%"amM/p)Zm$)f=Zj*ktPbu5%1F1h3Y$<)FS@!eR[13Xte9+Q=]cFq^A=9r;OB8?C%R=(!l]DT#\sRAi%)*9.>hOg@
%"\*rB(*(Uf&r35[.nd-"cnS5-V-0<Qn0HEn.,#]%`aph6gUf)GFAJt^Et2Ftqa)h`OEN-r4CrFo$C!oE^c5#laS+<+.=6LuOC;h#
%PfK!!+%0P1&2)>SP?AS%]>DLK$6?.,F)L(NU/r^YjBT85-dY,dGY)rAIUlXf([+<='iCR<5Ur="]/rZe)hoLq`F3Ii.5]G4P)qgk
%ZoQ8h0F/BrG<Z-ShlRG&l],bk]S"Fl=r=9X\i,+P*<P_rLZ%I4aOscAPbVajiXg$A#d0dhG0/QK"@EK@&*I%W$-tSu=k[1;Ya6&1
%7^U.qQmFGra9Oc\64dTdV*c4-i]SPVZ:P$p0&RS*7eIm.pJ>G@0heN(8(3FW@u1!/.-PXk&k2^6EnR6tJp\H3SQpAcN//*eSn+H.
%q0\4pMRL%uXAPpT-eQs21^f=TK>7NI.Fnt:A?=5['1`Um.Y=s^@lUiZ-eTe7LuD2*lL+/peesN7Fu3o4roEFe6t2YrGd8uU2CSg-
%nqKII]D@:,)r<l8#_oZq+B#L2gP308Tht;O3Es1)76.9q#X^9K(Ne"1\3q,=G0L%S=&O5TC"]IM$7+OrH]4InI^BJ@BT(90",I%.
%Vs8r%QP`DR6JE=i&HpjdUQC\*E3bJ40I>9[>'WW$(mI&56*l*MbAC+0*8_'K72e69#1^"=2`R\i%<hi<0*N:i8W9b]JmJ/7Teh8`
%#U5"f=CbB*V.`pT_2(-Vp)HNl2,kUWS7nLkLn4=&$p,eE!1Y&9`^r%V$r1mgGQI2'2]Ofp\8VYm-NJg</s$b5l%ID\G(>0C^`pj*
%>i+Z98p>W)J-.']7Z`oV%Bha;5]TSp#9qk8BfL(ZJP+R5@h@tm^e6LJAqGSchuHo8(P9kY6m`o-h$Uli'U2'`Q5pF<fFmR@;TK^%
%G/47arluiEg3=ulklNSR2@r@Y#U\3d)-3;O'uejb_hbC48=+pHkkLtdFCdt[M3MG\`AuKg(#BieS9K/<!7#&sLO`X]eCt4-GfKpG
%/O)bF&F(A^bq\#a=l7TR9-^CXNeUX%I5774LBI]1&4R5$E>alV]`3S6'[&R'<j6f+.#DqpS==7&,5[,eb5-jU:`;W'Fu11Y@i((g
%Q5LVOS.T#1;\c.@Pu=OR3N>nJFfR^-;\PuVQL+a%UJ&9W9tLQUQ?VVf%+@#F6dj=*ksouA1`U+;o*V)u7]55g/eh.5i&E/$3U2>.
%a2a0+Uo_@^Ig.%LgiH(!%,)`?0M!lXf5oV"++c;3m64BHLg1)X"B:a2Xq/'?n;\@,M'V8ZOJfN;Ka:HD`*cF*N#@D+A'&U+nT-7A
%AeC,F$<`J?dIqQ(('F[O!,(ao5j9[X0e'B1o+OQM,=%'/"P`b2&;5-jTgLJn;ZtF+H9g_nF,g^#gHc;O!@c$c$e;%$@R=HJE'f^d
%?,_L5!2;fR>JW_jQscaYA8N@WZGhGbHRj8f9*,XL&6*c8Z[]lH78^d):%$](@F9W>gOjTFq68)T4$2Z-'#9T\gA;^2g30`jZ`(Cp
%J6>j&"!E6e@qR2"SP').6mC^A'&K4CD1BDH5L585k)tBm\,d/m9cTFL<(J,sq_/Z>$A5msHU%gs**ls65QD5F&nP]sJsA%s!9ACY
%!V20i1:!j?^q73=j<P9E#/Ul6Z$&sL7">t)3-AYc5?PN&FEi[cp\B%D1VnZ2d;At$f)uYHUKgJ^()XXgL7AIQ=.EbT%3V7fP07O0
%nMELa9Y:1_,3S/'.KBe2K:9kn!0ABWg9-q*8g+7frH*62cpec<!?ueijIJ%Y4uWg6#pnt6]bbK3RU-m9Ml]kUB:OB)Q:>;TkepNs
%<#;JZg>c`1R#T'R,8T\5Mf.#lbB=N:;K`)1W/`-3-7IBE>r"l9L0#4.L4,-okrt!>8-aC^S9("W:_Y0J+E/U*T[<%6.Ap!3c9$CF
%U(dR5d%,UK#);%^>Ta8E,4Tg]*(k0=!otb-/O9PAeiCYm@scK^QBB#j"Q$=0q(sk%1sR4?6(#(kKhCD7X4%/D];HBS#+'N6a9\<"
%DK)E8N.@"CqEjnD9IG-UE'&tE77:D@OsRCI71pZ1Cg<a/G`lU41^i^23unTM^&`!q;)f:Y##uc`-;#"uFNtKEQUClf<*C#>B.7i>
%_^U6/kU7]Z$&P1U_pTmk*Z1,E32K>[e*J,PngcdL=X4;H%`K&l,bYs6%g0/B-mD;G"\W%W*#\se6fFQ?iD9t$JEZVUjVBDp&KVKS
%$6>4MZ>t>'Sk(]llZ9CT;SGXd0NJ[F7iPAD#\M(:p`gp=8:!Po1D_[kfGgJ7P]on06&LE8'IAd&>D*!qs8Ns`F'VGE,Y%9);X>1!
%E:u^12>$=!'1ch8SGE/(dR`sK&aqR]-kl`Krm(2u/@NpHqpu@=J=;HrT`frHC75mRdBBuZ]3"Z@L<mbY)RcdB12u[730h2sfZU1A
%^*7o=O0bP>7cV/)hIS_&p`kf*HJNehHiq6k"Ls^=]b8FMA:2\?)91Z8*srt53W2>"6645OQT45\ft#QfiPN]cN"`$.Vps<SLG]a,
%52"4jZpiTBTPUI)!2B=8_cR)C`"]o%).MSgH\?J=c_7mZ2F^9"7=iE`]-,ETZE0]m+3aC_QR3&L's7eZN):EB4,iiWQ'K%0DG3j1
%k9YC,^EcieY8OqaXTmg,='k.;eMTjq;lFG=G'[Ct8+X1[/:ji&!]@dC`cLe;3tu4B]O.r:TG+aZ]K1)A=2q!8W$!&LS3&sJ.1#[+
%[E/O1Z1TibNugV"il+:oJBcW<FQ`YZZk8qR`;i]=G8nSq`s1>L/r!uocd17/P@MmKrV"M+RGraBhL1kW8NKUec_T;>)hjW^9lRYW
%"Kun>WsO*HFpG5Bfm6jDEp\%BB,d+*DBE'o,.O1&[Y]b!0&=h<\V)P[AHB+#9LT^TI'F&LRm%@[R_'0iX"BC:1#JnqD:)j=k3uQs
%8Mi\q3PopSce\sRE9o13P4hJ+DC5qmpfqI!#M\j+^9A>jXf]MT.@E!UB0IiV`-DJq+l3OFHB3,5NsGA>9a\DgDM2q\H>_FX:VV\6
%F\ZDkL(Y*fjrViha^02h(-p^?_j&>)%aa>UBln#':?(RZD(Zl?C?r,DFUPr0.U+j$@ig-@,HNk]_i?&dg<QkS0QZ6iOPcHqYk0t=
%^kQ4`!?093^j9;/7ZkI.36)DL.Ge+PM3E_s\W*6,3biFm*rmQ8M2%KZ8U`&l\;knhJ/gX[LoiKQOZ?>pa;i/OC,L1FGBgdL,P.BY
%M!6_a614>Pa$bN+[bR-3p_n!6&[N%dSHtEZ]0`QPr0/Of_"<%=]DF#]1!U&1-h?cM$-PcubMt0;DdOY0_#?jE,jj?hl\-GQVic<a
%N32JC@uPA'8M^kJ/FJN3(a`ZA!-;[1$]hbYcZg&6r(o6(=)g:qmW3L?egu:pW58NJ`i(ZAfR2$ui.S9GVPWlI_H;R:$tW\'0\X`Z
%;4<LWQoAj8$-,$<(q@q3QjVHe;,H,EG6"-*b+QDBb&CqTU^uLg`^(`>&2k9r$[8J:"0=,JmGj\/'.K(J.b-[Dp`Q`@'B,C_qW!6R
%"OsU05Xc6"fMpET!3r[Yj,Ajt!D$FV8_Uf)obZF5]"#i_-u`X3;pbeUAQMG4p1hOP:*2[P%@G@OnUY-=6AOiK+_31FUe$.EK3WEY
%0fAJ<gPKDT5"&(!]Z2A7!n%DBc&O@*/>'7[(@J$?Tda;uF3Rf)Ac7&EnN828aLP+Vd9rS3O,:25K#qdY1:ET6=O2A5=qYKifP\TA
%N@kV(mtQiF?K<qU;-e$&7*CQpQF/(3]qL":`oh#<?Pld6L&^a(clSmNZTmh4p6N_]^].[?\W\>H>,k&0q\j7"iG$4_Ya.pqVq=oO
%C7p<"%f^TMD&GtF7$$'Mk&RqhD>cA2ASA$2Fu7O(S.l&o)]Jm6`ti>S!b`"OV0OA=^B"i^`i4Eu#tK7<3WLX,l87R?X^PnhMOb]1
%FVF/gc3G70fC3N9cLu5cA\N4%abhd\]XVq^itYhD0U.<ah8\@=mc%Ee,o2h:<E%j,ZTuYlgUqhR5@rqXfVKOn`:>.4Z[:%:LC?B,
%b^(Ln0`X"+kI6@H>Ykk!gqehC_a8J>Et'cef[YSlQUA4t`d.Jo2R?;c`Q91)[^:7/2Vfq;Vf1PI*/?c(@)29tQ+,*2k6U8[R(c[2
%3OXW2?Pi3sHea8L"K=7KQsRQ.cKfrB:,l;X!O/PqVZI1"o*FJV%.ZH#le9D$^YWk*#O!\#?dJ!35!i0OUB71;FU.RTD`:?!do^bt
%F"P:2J8c2`_Ehf0R;(DZ%H]-V,_^5+r@aK)nl*d4('g(:0[^,,Vk)UZ-DSD6Wd=EJ`1H.6:7;e@E'NTN!l7gH93QrW.F2?$hb[n>
%E#djI)KN`uC@)ao#CsZ%TNIOtQ@oHY#At4<c1&,rc!g+<k%k5<7.:OcOSerZCru2Ukif1+5+AgMT!MhDCke(375.JH3=skh3Wh)n
%YCDOY-]Q[?,h1JW0*.YoLARg52tF6DDr98doLT942daa&<pjK^`,Xu,itEQC[q1Ve0];25kFS7smY5_iK[nmmDuHr-q@:=7@H?q2
%;tZd(DQjHKPc_6+YV!&Va8Yk8:7IJe-m.J/rqfm_RCo+HNRc>%!#hX"[.BOnej8k97b*/&hn60TY;_ipZC.h"*D?^E3Q"e+V[R+c
%HB(#KHCb#FIMqnU^ZSF/Zi>>QJ8DjmLgE(08f_no5!lgP+:qc@e7q-A'cNRjCd!dm=$9S!.djR.j0H^Cq'"p$*7OfWZmBBD7_k1Y
%M5rX!Tto8&&!(+f?,JYX6&Bf(&$MaB]]I*iW[&Uc`5D.*U2_(<f9#4G!*L?#eDEq`JXN3s>U2+W\^IZoGX330!l#Co?1/)Ik<shp
%D]h2X!%=A%B&Dlcr/Ak][BIIt(6-d[PpIgq+sc$UgH?M"8,QW(0CG[;nhOhR@?nO1XLt'm-mTeW5?)oBWW>;Ql`(Q^!\gqI>.)E[
%,$TFf\kpZ>&j]6[V_5n"Zg)N6M6OUFZUUU%pdN(aC1U&;h;f7.H<jA`d34@\5A"ShOFbL>/VS%\W6Y)#]+5oUr09H,QjumPD1RaJ
%<dqgp?TGuE9HSN`-ScS3aa,jCSnV]H:*Mm.a+%H668'D+8bo.mj'qc;07Vj\e*7OF>#[!j::>V1r$;;N&9A4B"[#0:DoJE/*21^@
%LhH.UT6hoG+m#JYj^F3d*Bas`q\FQS=$TqpI<m=i>2p%/>>F6\GHV"jF'mg-S;2@`eIblBBGSmX>1VZdc2.Ef^!.%%F=Y/Z>4Dum
%ZWA#5'*+(F$ZH1o4Fc3jX0/"=l!6f3m[N'XhjN"^q>?e+;0g-)<7^d=kFN**n?R4XAj!!BaHtOLqITl<rAkbRAo5f3?'A],)SLln
%cNID'Dcp6RUY]6O-#,'REt8(e_n]S0ZrT'-iLNJYK_Tb<@C9>T-U4&b]7"VKS%=sYMOJQnnJs7<6BA0&]4*_%Na(C8i>h;/K+2'Z
%A3*c;EWL@*D*F'XVC"StdCj,b'mnt2K`qY2U<RH/$rESlk?C2WF=%iGd-\bpGBKoA4#t4R]GZ'J/U_Q717.b+flJ[phM?M(S.imu
%?U&@>?(9c5FN&E&`Y%rH4%F_>mYVi,Rg[7,PQp>6iMS1M?_fGqqI(b7VFXkPTQH-_SSTn(qIf!EEMBGY'ZM#iR*O]T]qFQ,I?2Kf
%QRdqk4Al!)X&nX]_LXgCI)0^URKk^4h6Ki=+?C=(0hQ:;7J,gq@"l2qppRb&AW:#'#>BAgfZnA1(sbq!Qf4H"kL#JQY[NTjfBQ]^
%CHKMh?IY=*]H++Eb6'jM'n(cTpF%8K>&`5r8RhsV#m3mu0ZpE[j%8cMJ19B6$,MDWa9=2+(Pi[s3V1gnom,TW>MAr@*dFWu2eM4j
%htm1,c7%/#*bW#)piLf2chgn<Y9l^U+9XYGY;]^/^DI#Wl2EVc(1=>T_h1.)dGF>=FKm2WiCu+EX6->iBA!e)cqaW6P7OF*GY=AR
%A?^sULK_[O&fU%9:8E#j!g$TH8(a#02P*l%9fQ;#B@K0^1Z,uR9j..1R\Ao0PV4`agYAjYEZP32Z"tHgU4COQj#]QCF^fBMHa4cC
%4dj\)0rmV-q\Do<<G!#W$'j[Y>R?8%B6cDm3!`r"#ek6$k3X!t_:Pl!S85"lN-@GOE=LrHe^;8$mK$c!?*(])\Gh%Scl\,fHI@jJ
%2Lo;*:GHs"4(Li<G7S+/d)(uX6oN2*5Jq)C+82OD0)9Zd\2tfene&4&BdWfYju_V[%M#sKHil=e0G(bECkH+gG5O?1Y'c(M'lB\Q
%*tN\*f:e'ZcKCHI_V9W3]G9<`pmMi5E"A`&a4BFq!Ub6<?]SER>oSK#\u%rD)(Tc'jH8^hYIoU-TrWCur=VWB(hP&.Q1#*Ae+Ojo
%d?r0>^HOB/?e5&Gh6;g=kARd"*j\r4F*rcU+]AV`a7&!W2L?G:f?7>'i?(,GgH.a/IP>*mbFa3QX]k#3p6C(jgm'm?ReNdSTD@M5
%HXV/#fa-pL6\`Icgi\h<VF=,F_`*JH[h6V\nk(_=j9Tcg^!>h]S^MTLN<#!3#q;LS'Z8N6H^3W74`(1<$X:`m^+EFW[-bP=9htrT
%Ye,+@'mZ1h[%mq/PogXakS^p8\b>^TUZ0;qA-.84\Wqh1+h6:O=)q[=#dn7T?X&QDm]>(r1`Y+`n$ib<HZjg?2U03EX2:e]36/X)
%K'=mh"L)GIU\8$^YX3rcpTQcs'8k+\MQ6;3qlA;j(HL>Pg":#][sMrWPF8VsdY^O82*WCFT%OSh!IU_RiXnZ<Eg`'7<k/P*.jr6X
%4#_*,bj"/!QXXG7Vpha#Y#j/\9Q.Zd5MU<hH1KOQU+XUBQ%U`'h"/KD4OL:'mYU7Q/?6aMEjORJ/JpbaA,%,5\LU`-Mn$!t7+rA/
%S8Qcb)MhPSQ\qcZg0:!N^7h"EX$rnVNqc4V<&*TXmi:;rX:;(3TbIdJb1+CWjTs230n7rIn=o<^[N9kA@3=SZ)`-$m"X=tl$#u=o
%g%Pp<O,Qp*'*jd7,EAQXS$re"i5h&#qaMa(kNc8eLEoEbk!MO'Rk91S06@GGD]]9QE2FYH1VuN+(_Ag8buI^@3NNEQ_B)atP6aLn
%BuNBK9VUXQrG`&_NU?OT9]ej`EcZ^!@N(lX2tCB5D9AAL^782g/o9D=6#3k2eLk1/BL(<64cV\sL.C>4AF!i&a6:s)F7Y'54f;EP
%;nrK-m^X+DEeH"Bpu6T:Vo!:KD3@DrSK=m1SC"ZK`A'H"nlY^cJ*+UU,67Z7gWn%qkF<hGDr%mXG0Uu>is-Udl@r'MI^7^N2?"T.
%chV_n(FEiehj\Jf`sC_AcH(4U@]!pk"!r0.f\?[4\d'7n)[e)^MYE4hQa6#WI>6=CQI"KFb]icsHR(k`pQNCVrqbA@>U%6WaOL&>
%Y)l/`4oGBWPS"k1'1%KjR'sOQ;%%K#AMBhD1Te[)1K#-3=;9JZF9(%&mu&m@J_WS<Cab<)H$Bu#9&hhMSm7)d<QZ1'??ecD+LQ6f
%l3s7>)NVL>&Y?&`$&,-T1CC+J48Am!rYX9lA@f60OLiD\57?aCD`l6q=qq2H9U-,B>F\ZsI:ad%]sG`_DS[_.Jctj#R7(nGb[?ik
%3C"9H7?2KoVuPB%.P'AaSSqpY/'F"A[)"aW]sXVi=e,-KXgp3eKPMgOLMFiXXJkOJ^&4ga8#mWe!T4o8129;/)M%MCPl<HHNDT^7
%.FAdri'@ig3mG)<h]iCQe18Onj-C7AB<t8?`29R97Z*UQPf_3j(_(paCuu`E5b2t&>f0SYdQSrX%$uu)GT@N+U@PHOB?&!eK,4>F
%3hA_E$;A:sEO/3Zl_JOT`kJSAs'a?d2#Z"9M>dN16Q!"a-iipaHO1db=JTVjHU'=_K=$>F-@34eH7u'4aoUe+"u2*#I-k$JQG+p^
%=+<,\rLGNM_7E*c9)[5AcM_Oj@(p;#Nku@,-PJ3uk>@>h:U0G8A:+)1q--?gI=HD(7\C#3)"HjCnG>ofhq)_KAA)E5i\5.;1KSgd
%4-L7ZY535uB+S$t;0ZIO".=!)4j*S_RH]nHs0?_SZR0=a!&qi[B)p%+&s(C`m\s\jjhX0k9Y!kfEr78Hl+ZURPa-nAAOJQ:q8>ID
%jRE36RfAIjs,2:qb:EPgOmE^Y/]DYaV8k^elUOR$4F1r)i2D#i6K[L3+L]5l_khKEFkm5m)aHKGi:I9F5#J]iL!$W>hs/pLb'T[U
%4@_$j"Db<pV<D].UIW0GC;h:6Wm63.blQOS/[6*(R'>/9;LF7p;.V;\Gh>0<:TpiC+5$r_TlJ=r);n)hW@HI9!P*b/$0Uc47VLee
%6&m>d,h/];S;eQ-#8('i9jrA#Ba+[l@to-10m#:.li<Aj,h0k7_b)NNEPNRg^.,F./DE1U._<EU9W)58fj?2gbtoGqpi3Z`(=IM6
%gf1Tb1WYPu`miN:1r]g?'QCfngpDY)XSUO-U;O[UK;t-fIb;s6p+R8qEe%8HCiWOl6?;A5>:<)kif3EZmgq>Ng5)TP@FT<IXc+=;
%C9LYC<q)%HIX0WP1(\j9-0)FVm2hq:__,,%00`bZ8VX7)?T'O!AkM1tVc[LMP>+Mt3InBsQ"8;7B.P:VphTbrQh>M87H*<c^7QC]
%q(;ZSY:oT(6HGfnM2Fl3^QQdmi1PMY'a![8mGU0G?3=/J9Zr^C&^4=/<d:3fR#-$tnOOK'Pc%6",@f$\e^klZ02lk120q,>SPfPI
%k7P/FeYq+0^P$DGCB8%,Fm&Tf$WuE#*j75gEPA*.U*kJfrO/:(0(PXDs40RN&_S&1(N(Jt[D"4fpfu9<((*BRnt5-fKX%09(#-tb
%Ct[lVqtoP$b<GTJdB)JEoN_^VGO99Tou6m%>Nifh[X4M7Id>n75<g_UJ6/:)D.h]th-_=cs%>8/"gq%K[&mt0^nK!Qlp(?F/lf3F
%U]%_HUV>@0Cj1<+!6jm8IRQE=h.X1i($ZZUEPK*B-.j#g-(>/MO4*U;^A\"fGAc=,Zf1+sO(9n-p,JQQ\aQ5MgP8Z=h>dY:n-"&0
%Pu&l<lONbd\Uuc!\0CpHps*Jc)F9/t<[hK!UET/pkJ+_@-o3CQ&C6dY)W^R'=Gi'4\[P8lR#mb=%\82B_'D>mq+?1-Nm.R[ce"SJ
%ZIb#aYqPY03f!gIR=8g>3T&^-`9H<0Pth65n,-ISqMU=+QauSR'BNS5e\B>CJ!6ol"""MU1R6=Y454fQ'ujdlAC0Tfd7,e_KM>^_
%gZttf+PWd+Fh)G^CA,%&T_$`8\$eERApuS\_/nrFG9],)cL_C;%#<`L3_MZf22l##5l5*$4h'm+h@Z?01bfe6^Lij,'0_>orRqf8
%V(7$/S0:EUR4sj%O_DSRR%Ymj,_;<g42shlE?GNOUDY%mZ>Gq[!DC^9"1T2O1C,A.rs7l=(kFd4#3tiC:ue/H2Z049qYG1D5:1]C
%q$n<58XSpfK)@D)7BSa'?R%k$Hhb$)If73)I[8*+$'*Pt9p6Y.b?mZW&Nr@poDS!)r6N.Wp\tll9$krop3,tl5o5PXlX/>CKK<Kg
%KV-2<A)tVFbrJ=6<,Gmhe;7;/E?N-48PD&SkX<7+V#CU="OgH'P+:lPSW:?;m'V^4Z&ecg*$"6/DXP0CR=TDN`*L5$UsK)^X&qN:
%AWt&f<tXmD0nO<E1_qD)jI/HLJ*5]"[XNf%n-G=EO<qB=)!_&\!+EW.HW]?fK6D8fO\aRa4m7']$YU%Sar-q$+@4u"qIV\MNIjGX
%BZje"4_^ct,l,=68brI>Z7aI@OH[6[n_'G;d`)`ZYo!M^m^/N2nrQOC.0l5cL+*g<d[Z%HM&rU51MsnCAf=!-r&3JdhkW\ZCl4=V
%-5S,q=-g&W1Pk-hN/`Z!3.J.Ji<W91Lqs%d7meudA\MWf6Ja'_B64he^.2d8[uKdBa,@q1-8U"8B_*q`#1K7-,RHjAh<8-X9'iq;
%-9Udc6$QHEQ9Wce0Z;?3>^0g*)eP%*P+_k)haQ?:UbB+n:HC?gp)PUX$&DqCQPa`a&QMN_T=3r&<GdNZ:I!87)g^3ZV3guS'l*np
%,k>^YL-U@kAs-65@o55o*Njb'jGd)@8+aH5lNTr>]m;Pd*16SA.)SW9%8S>IRGkuV&MEk=&HNn8n5amb@hb6K4fijYE)pDhABiUR
%FfJ]?8%+NW&952+NK_T/YK5MQf,*?&4oo/N<-]f:WFd!JTNgcg2<>T73Q4-8Jb.qL!7h]i\'_8oWuW5[g+jI"45O+*WibprG%5.3
%@4VJ%/e[^G*e4QS;/t/ie-b7B93,m1"e_`[]8OT21qnp>k^)oL"q-/XY36`4=fqfMY&Lu!Fin57N6_gEAXm&&52'Rq**3%6ir[/a
%ak^3XcTX,0jF8HRf91DdmKpC(/DeHC#BN"qF(2mh_+sF5mj`3+_InVk<H\"hduFPhGcI1O=Y58Z<tH<2KQ&7KJhhu7.?'=/j]<j\
%p,\=0p&LiaLV5LZU/<2<Ms$"7g;Tc)1Hl#Q/#G:n`Xd>>8\lJ&m4ON]VGW1G0W=.rKJ+22G-e0FC)T\e%[oiq-6&0EZ.j.Gp>&s\
%8#WBrqM6A-`$5M*,Io9AaV.WmHUHuB"-BZK*ati!8l((;QE`;c,bp-o8<ql^-Q!u>/%$%sG#S*OBEnq!2&PK`&Oi5!HJBGpN%kAR
%[lEL\F*1sGXE(mI#q(s,PK+^9YpYebfjDAXP9'.PO:)T'\AHlVdf&o%'e.cZ'F4Rc@ZMht3Yq<9,+iR8O2L-A9QU#c6q9mdXG;S!
%0&E9W6DGBM7l29@nTiYBO2rgX_Lj)9MFmRmjaN:G%37rh(osiFH-?BSEIA3:g5OW1dSpmB(H]r/Y,T-A_J$4-_LAG(K&BfXdg'ft
%8_E]NjW::ojJ^SH$6<r)gt+h+Vge?gX<n*e[W6hP3MKR`[tsJ8+9LaNR6E,#^rU7SobLbld*8QoaJK6B:9tR#hsn<68oO6[][_#1
%obOgT_X0P>Q((mdX&N)-S5T!XVg<l=]05#>>'^FY"uR'EMI,=e,9;<A]cQbWJN(fTaLrWF+*N>f/(tDu^,Cp!k^dT]k)VAM3DF(r
%@18bG?&c_1s)JLg",uto8UChW_OL!OBX6S//*;MiHWrtSjr%lO&N<t$;:$_F.("'k)]j>djNVN:D1`(X*M_G7`SaUF:=H]&8h(o+
%.'5Mm6Lb;;_r^VjQK8q/BO2'GCP`'/`I!;-D`NbgLX<E+D2ADT:_#sE:ZSsNbmJGMeD`u9*@#Z;-[E9dBJW"5b3gX$PAgZWTAR;*
%4hiXU"9h^o;Uk72;NB/]f8gU`Y;4qd,U8g'Th+q74-J$6V:HLM4_1DJl);92HZBL:#jbU@q^b<3@tYVLCu4RD%'>gL`Q&fipX#8Z
%OpTo&r4j-MAZk9UCFI$8?("Q_fd@mpPd;2>R)%Bce19le^<]9s6K/k]qn\$-(CCm"HdMSGfXcD085++IRjDa/+dP+"&*">_\/Vf9
%=/YbZVVU'A3Ja>EZa#kV/F]Y*%:!MrgBIXZ#BYm4h\]at\-q@$6R$UcGhlo3XS'!G1t7fNYu:.,,<&S<kJX7fMT?NY-m?&j`7L0A
%F&OURZ&^"cV4SIm:jeo._u2VOSoikepXPh9;t0II+c0tLI)1FD<J,^_%:IG27XB_?Ar+Ef8.U*k[VNS9oAV>MV*ZaH#7VXL>$tZ.
%NO/6uMo[1e-?;HJL=."QB&Uj%cVHQfiZpq1oI03+X2;%T=Cm=t`Y=&ATF#U*$8P@D@",0fA,I'n78i;gN]MX,+`64aElg_*K(sY6
%Xidd(Qnl(FA#;.VFjNq6?gJ1l"q=oZN>8.]Qt[24d`q-e7\1mYpZKU95#Nm'8slD'29_jiBXW#5oUW2N1I^8K@`&C7l\_h>L:S&I
%6?d*mk/esF-1<4Ar8Cjq_oa<+F<3-!c':&A,Hn1-ASg>dh6_r6-Sm4?`C*K[^5krRQ/+")FZpnMX=>5(;>i5=[rb:ZjZ[MQ!2\a.
%pu7i`]#Y--^V3ASrr#R^nE9Q>=#:N&253'<ih\a$=;$?X&S$R&"#]?\Cf85B`pEaGjl/E!!E(>;T%DD%9AG]7Kh*t^J>0lIUmuSE
%&'Hr@W`apWn'b9g/XAR@V;[B]I[-MX7../+%PJShbM%@PcX%cuC8s=/UE-:5?MieG6FYSG0_-'2)W^ZIY'4V;mDHB]BRoWKY5+(q
%pUGHsMDK9niOmCi)O[D="k'Bf,T?8M8<UCJhobpIXG6<9/aq("3B@H8GD3@2X7U48fk]kQUT<coG--LP-5t#hF(VA65rN_!BAC!7
%`W43Y$*`;)>!Y6WcsjJ"@p>Bn[5<Ia;o.ZcUO(R:#RrT#1Rq]3/)8%#9kSed4lc3fQ?[*,dnO\==1D[V78mr#<?4MIo^Yr-?C[YR
%SbqLmL[@h]k;7=^DN8+>(Y[uTE+Fl6<PNZAEO^]Gl_M*!S]rFl0<%YKH`69c7<P.H,iq]-Nif\MSdi<sla/<P4SDMpcTW7Kg/?H/
%-g(':m'ib;V`M<`.4O^;LbS6Soi.V-]V^0Q=TTGjq?t8C%D(<9j)ENB*N[t2=2"tLFe3nE0BiM_F\6k+rdA(?lCI"*U):FGl<qap
%RN;N*_cU.O5bbJ(cdL[1k0d-JR1Vp=#\FsiWO,U*Qq0,B>XIHhXRY$8EEZM2lngB%D7V-%.`Stil,_iV0Prr2?r$:PgQl$A$[<bs
%V^<uU7&QI@55!(?/iVtaR*L7-J_-2Dd%eN\38%"o3lP140*&sjS[[/o28r@'IkP.Gr$?p"nMjdM&-Ng2.k(0oIi[f'2P3EDdh=?<
%Q(n%__n(ek\dG(7Rl%0#;&1Ml3;A#g%/3ul*sr0&m)%Dnn--IBo,4fqB=OAX>ZW.4IZG/2QV>mK+l;6GT@A.W;.AP&ILa[agk%<6
%E3fou-ZHCAhS<'kq$:3l)\a]bgM.H^arV&+K-HW<:&IJp`$TB%%DL>g2r6C-2e+cQ5#uMLLfI,77kMka1ToD0)Y?H-2[G"1#\flH
%T#>7sb7I"CB=9gXg,jI8*42u_o-L`]_7Xijl-8qFf,J$/ZeHVaj"ZD[5fDl54(X/No-cd*/T,uHe/d>GYhpVKP-H5<[)j:7*KjH5
%Q#5#6X#G6UA5-[VOoWIT?\$5^Y[WBiC+Tt#p:DnSp,C2Wi\51AV:^$=e##GZ7E55m.8;7p-Uo^OUe?`tL_r)>cn7>UBg@V_gRDnZ
%g=\Cpd5W;sT/(5Q;5aQ&SJ^o0\f^AI,]F-M_S27XVbJ`I0TkdXWp6F,:l6^?hh,PbQ6W]M0lQ6ZZ7RjAPn#k##U)6rrH4&nql-c)
%ISDE%V_O]s*kh#Vm%5NH5=R'1I2K/H;HonN1G6>L2`#mQkM#n+*lJgij%!'IGQ-Asg8b-RFXlHl6IH][gNPa<ZB#e9lF<j1B+d9u
%`kI'R:lH3d!8F!UAClP8?<Y':g&(7,R.=f7GY@(tGeTAd&BSpTgJAqs],HW]?W!s\;q:!S4JIO(efZuJ#lV>0OO_(1cWoH1U<s(%
%/:TBk<YR^@p5r"KdRYGM&noMUBgq[kg:NQ^Z)JcC98Ea;6$]M6X@KB;o7:K%:P("TftOsIAY@Qn#ubnm%ig1ioC6ES(DBnDk3_sR
%Y5ef3\d+T*bs>bcmaMo)3sUiN/!nL+\<,tSRFAZ+DEs7kjpbO2LdC1_^Q8>TBX)d/G*f^iMUWX"n=u]fK(O-1Ps5>P0V/f%EndO<
%#=.T,D_pF.+<jb;hU*7`JLQ'p+="?ZD[35_QhbO,+]ZOVM0JV?l=/9],a$5=!bmo,BF&=,m6hK4B[P/>,O/a3IB"M-q8&4$BTT0"
%0#:*Z(3E_iB!JL<8KW+5*RTd:XiHUCS4l&U%![I>gH[H1'tO4hFq5M*1U>+#ef<jlEKR7\EU]TA<;<UW?>I1bs#o<u@IGSDaX:'N
%_oVPYpn`1f"Fij7?>`5j<qLWk&QRtQH46-#T^Y%U\rE-F!0/PXq.u+AZf4,#$-R5[2mC((Y#M6?_6T4-:3K#7]jF2WBY>#OEhi;p
%e%?g3]s?J[aG#jRkp*R[#`u/^h%%C`0`k;&Y,/;[KGX-9+`n"eN]"(.;F@n!KW/*5Zd!FB%k,^dds]ns"ub?(V=3X7%[#2e4RDJ6
%jLR8+Q'pMS@E(C"*&"SK@,LBINn<&bp7"LSK7R2rEG2g<E`&U;-[7\2bOHf,H`O!6SJ!XERk@PI,u@S7"L+]lXmAd:KX`4d16%c-
%'hFG99Zl6OJuPecD`\sPm)uDh_DmI8A:*Y_G$'WhV88I@2Es(I/$8`[Eb(\%]si%L-]rSOpk9IBV3"6sksf#9!-pFg$@SslNHA"d
%m%#62'hK!EiBT(S8t<HUWRD>J?tdjgZAFXu'/XZWrX:l/?T_btPXm]:5b6l'U&(p;+53dV2_#klPXq<rV5/AhpO7P/Scj=W8tu#u
%8X<->%7R_#gt(M`%PQ8!a]jEDc$O6lOdSOTOrJ9^)['EJUP(0*2(;VQfMs/h-'U,;Ea*nQ7M4i6"LM(C7=8)D=dUH>EpuuqO;`@D
%$%7G9R@=91Vo=P,a+%HEmi*O?@1ME*`ok8:>*%H$,*/ibNjOH1a/F6=%A!0d/eQ)bE[*cU9"qtVMc&O4NtH\7FG6:-^8T#Al,^(?
%Kn*uinBJRmj<N#SlVNL7`*X.==6KW88'!rYT.7^!$Fr5O25:d'Fs?csCs)K)')H0jYKOA#L/23)alp7*Tkigd@*fc]K(htN[7(Oo
%QHrsk`S+JC*6IsbA&'/T(>9-`H:R1<KpM*&6o)"H=*sOJT)XPI.iGlGhpHLqV>pmAIiprkU'0GeNi9eiH1s0SBs%AhYt$LWKmL^8
%WHF+7+7Coa1lIe_;fB<ZJe2mZ8-7a;KUWL^g8[mrkdILZ*#@)\4W/65=(@g/]L<and7.5i"Iu`:6jOa7kZkY:eAmH7(t-GqJglQ]
%oYc=F((14lL\1K^YYLV.W"JR"cQ[P_.kVRe$*kG\3JM+0iK[J^pY&]kOf=JG.Xktm]!DC8pK(]]k&pkH+j)-JDoR6jV.[<KkG'4J
%Qk.u`[_8Gqm>GnB^q+*H.#c1H-<@ma]q64i)<C"8&RiOh)Doi_j6:'gYR;\Fi,A=,fS0[sZ$G/]+49%Pm?sQa5S<%iSc'.()TWMe
%G`doaL6E&1(GJ/:Jj3^50iud>%WFD[f=ZmJn0*X+Y;Z*ud3:8D0*pq'h@:1P:@I/;^?)>lDHZE$0)4Jj'F#1?_s09n-#fe^Q"%h/
%l8&nd3-1*'pO8\2Wt9<3m9dKq-#h-[M$N(^3#L##j'TDG8rH*V3&+G8RKTAP470>Zl-djLFeGuJ:5*=*IV!%.)fH,p;bs<XiO9i)
%U2EQVR1SWH1<kH\"sON[gg\U&E>j-6D1g'n"bf1"lHl2`qc"r>IN"P1cMQ@09flu_T:#a.@"JV'*6E7c08opXB_;)FR!n3^Ib/Ms
%aHn20?cH:+@/<DTJk1GC1%HK.@N,&fd)[etQed]>!A(Q'5?g9;e^^.\`na(6r*FI0?Itgjn9)BC:1-M@'stS06N\I*O"ri_.PGhV
%$Vn*B-lk'b5%S<PWW%I3`5'^qh9AdZi6q:Emlg<Y6%Uo+kFDnN&Si7.MP@3T+GA$$T+Kh@7Q`r5Y@CLc6G)F*pa"JuGE0Dh9NVO+
%\s@/e"lP*Y!AHRZp`*/L_e1O#9'J\.%M.'@YUC%39*4I9H^E(=i?h]]aZa:Z-5$R-)<qLHkoW).5iX`M8.0C$o7G!64heGMU5P@6
%H?%oj30e:`@\tJeRZ0U+p+D$k%UrHVA)!g,eVJ*`:]?f+,(QEqA*:.]%0_bmJ1h6qP.n5,TCouI.n9crAob(//KckP4@j2q'!sc]
%5s)2.O9'#tn,\'X<\\8jEX6V(p6P"AeU`P[HD7Dn9nZ\[M3f)toPR8g"-qo_L_-NHU!aQ/o_'9X[ohG+Y_J?0_f[c.]t!/([4I:_
%b*li_"(IR-HVjNG%IL;*/:/mkX>]HAO:Ne>kDgIRWlWY@Z,egSr>HYa^0U#1W"@7iCublilUUT!MHt>>kQCug-RK]M)hg*K.bP,(
%1eT>!78U@Ze;DgLNtAu_gafR%AX&8Cl#bO^2]M;>7at^N+,bn[H^T\P!8gOLOg-.s`FVGJNne-=">6EE)Rha^=K&UeJrF>drGnm*
%$MiM@L#)6iR@IrI4YV^NlpH^`liQ/SU[7ZqetAkG6X=F\NBALVO@t;@bb6h,M-L;LLO^iG)5X,.W%OPEh=5pD@-(k36Q&Ff=j'gf
%UUc+c,DYa*\kZVej+AR`0sW@cU71QTo#LaHn+NC2g],ZpYY-k`9k8)?Q$is0$%#@%&ChXVP&`at!VAES&6\h==o2KCn&8WCqtiPS
%rQW%Sr8.F6cPJ;Y@&&;-n?;2>B@h"8f=_mhbSR#kog"oT*l_o<0J4F8`S/p=S7XM@qWl=/q"pObqt[r(T02EpE'_;4YK],\@#kFg
%H(/"sJU,t[a-n(Tq03FtR?:5`dC-u%f/p(>]YE:>hd>9ocYq).BS/(f5Q#UKB`IbFe^>aV;g9.u[(RndZMmaoiLAH0fe7o7a*o[B
%bD+1V**&8]hf%KBDf4t*p\'td?k"NP@g99V^UC=f1bU;MBN2MU`df>-i#jcVAuQferdHS_Jj5"?#f#97hr!5DcgU7GS:D9%JU@5P
%m4HRWkb+s<K#nFfZ<jpa&?.&$o8ee5g%f2Y&+CV1l8SUdn*T*oqg[+g*F.Q<[miBba!r:NV7J?p%j@\_4a8^dP;:ihU<!=$FE!NC
%blPU]2/Ng,O&"WWQ*E4tXB)_@^j,/q=)c)N$H2%2;C6FZ0dr`QR*!m.7&ERlVW2J+lj4*g>J0$n(LK6?$1X,;(F(A:S45Jmi55-*
%/!R`pl5VRe0Kp)>#Z)2c$\)K4?aJ'j!#dgcXSP=k0do=8,`tNoUjhnNjM2`9j;_p2*McEk`UM@[9h&\CLhm)TQ>&8#I"A=lb"Al[
%^+PSil@U8+'$A)\%V,AQA</M70&p19f[U6MfnfL[:eldF\kX]I(gTfW'bV4hY7]b7+@-pOSWG-A;l$)'cPJ2/'(EnNiuLbRKT^?j
%hH3VpH&A^]b&#-U2ZcNPX6hifp/j&-fOJ;mGB'9TAIj;EI_"V!Q7(V!llaN(i`^s,Ql2\N2aqDsM-W=6@B]A5_+VJ;Y\n"QjS"2S
%XT76j>^eOY/]?0#L`^oYTil8@5D@6o.tWs<lEJ@iJ;UHB`\k97O<1[6n4.Q94X#ILT4l7;FFme3>@<Tq6[)CfM$1m47$bh=FtEiD
%`KB,uVNQH`+t1@-XqmgUWBC^N'VcW,gYn5"3od>'nK)L>\1`FFrY%lQkcD]iaAX8Oc=,BpZEH?>[muQUr,tu!NLi5G:@D>3S5+LO
%-U'0>h-_d#9<ON2!>V9O/Yg[G%o@$q#,&buE=o)oLR^>Eft\C2;*D2.L\)PJ&Ak[mMsWbcY=Kk.P"&kB6O],X9Mu*]NnHHb6_]T0
%W-rL0L!8/i*$j4TV/csu-neMKPA8!DHlVHjWt4.t;c&'.<I>iA)Pu-/T@3XICX!P/])FQ!QB:6UbBDZ(f#^Ff4n&dK?k@\Pl;;K+
%Y0_!:JIG4!mjtE'KULSKG"7aX*jg#^dmqBt".!XWkE63W^BG.(mgDh?V>0MS&5PH[Rj3$!b(NA^"9E->#mdN(]Caq)ZuUP,-a@%G
%kpBkkRa(`P=)aT/hkMNk6]_:^M-EN8kX/Cc"OJ`YMrKhlQ]`^Z8ZiQgG"8p^Zfh7trfH?k'SRg0?1=Nt\qE!0QjNpu>%*A9&4jbG
%Df7N"6o5(,E_U&*>d6X^h3?6u+')GePK`PXWBkVf==/6]koEDRaPBrS&/1I@O6m9+].ASf(i?l,]uD5+$:;7gTW$qW`bo,rJ(0M?
%NjAjR!PcCj+^CRU7FfW!U4A*X9P<fre#S15hL?`Q\Vi;_:W`BBUE)NfJ0TGI2``*V]U4s@(.QI6-lr^abPJ-@D5?=-gJ)cYI(ejJ
%'B6M-d;q/2M:_g<N"6ETj*Vcl;fT\_e&D9'/(bVGP].&RWCaEl=L#`_Y07iDcW+k7,Q1WtK2\0$oVac80oa<b6jB9bC"#Q".s,Y0
%N'9$R:+]fT3*4U26E1g+0pf65Pd_d"_Y8>D;>SC1JO@(10el&!!&EP*0I-GD<MGWB5=&qGoVjt5:D*r8O>l#.%"urIUmatS]-He,
%\RCQG;9,n*[;(Nb_SM4"'P]lW8&(at(e.o![Aj_*LT6o^9/d;[/a3qdV[SiX5WUebYkD3(2d#sRL$c:tZk>uCOA*(&L/Zf#[lQMo
%n[jCad'F3KHYWGT0c9NeF0+VY2nqo]L4IsP`\%jd:2ANB3gD0,Vqa,CCqQ!S3Zbh'f,!?#nI8"9KEV:SBu((;`n9HWK[*t?KZGXU
%XB7b#H%h6KCp,Gi*rA>F9(/V&Wa"GFL.u[l^IN?pIhUrBr8+#>FIh^#OYd3A((rA%lKk'N[ipD'OPX[b[FlBG1kGh=agQQ=iM"C=
%lQCZ`6B*R#E$BNn*Ff=kGtcJppDXtb<>?*3K_AH&J7MbZRcH2h?osbGe`m;`3S_'H&68ggPhQr#oH#5b_c@n;I&V%8CmD`A3fklW
%?5rO,V>55`^s<;M6atW][%g-8?USP_ED7m2$'//0AZWrE`->e_dhs$Gl%rMCA^CaIjO4lK!VV,1]!XZ-r6CpuUrUHl+YI:=6J2Nb
%b2JD.;J23iDsp@*D0@sFh#Z+5Nm'sTUQ)0rEPOm,iH8TK@B3&!/nG.hLsF!S^UQ(H3:M!G6X4\U7r?X`5n68i-a>nc/<!f24Ss'O
%96YduL_1$olGf9UXFsab.&T0D5hVJtcfcT)VG![>>o;\_%T3%UYpY<1^T!WYJnk#@p:a71W']/.A3Eo5n8<,'6%Kr!?1OaEBWPTp
%$N893"hYXWJhL0thqtO/TASE'dGAQh.-<FfL&Yo>*MP0>IF<7IAmp".m2GQLE&I<OHJh`mlqhgH.q-FPnTKk$`Wqq)?mt7i=aH#=
%Gkc45G)8p7e8F9C`Nr7]^PdU^q17&nUpe89MdH=YW%1TI!,`s4.5i>6T$t^t+Oo2bI)NI/HD!7NV)F*L6R5(PJ=6@`D-3*t,V9F^
%9QA4Z+fr3q2TSWa>m[dJUWbVjJIX*XWUAR1Q(5I>?)c56)HU@:l9u!h%_JS4-u+a]0ud9)a%:[R83DPL/+@)M\6uOID2T!OkA\oH
%j[ljL[(:uZ=0DffJk*`3.b7<tr-J&N>6J,&"B",VcA:<mfk0W"mVVr?r*#RB8Y>+&($VuKbKj#'[*?8$IQbQYVMjqFqA^Sj9N:G8
%N85a".,^M'PTFRUF+c!)]G`HLrjDeNS011E-(sOa2f$bpW.G5T.G88\Bd-H-J3;.s$--A,n]ko"G4=aq9[!\Cmd->&/)-F$R:nX^
%H-P.^h3Cgha8K]/nbTLq,J,c\_Lk<qOdr,eUNigc!iri]L"TQ\e]1I-7nF.*>.CCTgJ?Nup!Sa.)4>hbQ_"au$/9"SK^_c.&^\uD
%7G#ZPPLND0F6_Odo=&Upp*_?m17_njEpa*&PuL7ep8fOP7Jp8USf<n@F9L=+oqrp^W`hENL74?%a3/0b#sdp=X!FaomJ.6RdI3*U
%$^5jXU6e=Lm<SB%laX]>eQR5(XH19m<go0Sc$`.(m!=?JoQ/C8Y-Sp`L=c.<UIUIIe\?"^4C-Wu]lVhsq.YB#'j2SI,9ni/b0`#;
%YiT#o<D#`Un`WAZhqDA0Q$Rs?E(6VpW)B:<_:alQZ:M2ujbNQV'*bCG3jVegon_KV<,pq%;EN3ZgLTcD4r>tVD.Nc\7HV>gZ]:!d
%^^N[e62[-.j5ZG%*7D5<,"[WQT#PbV5B<4tM.47XSBfhEQT*&;.,+X,I@(hBi`4_Dd0Sg0kH7D\Ss[_ko^((FK,6]k,Jcg9R@#ud
%!eQ1)aI<=l,c,a9Z=]OJl+KV"SGAbt]ToFABSo5B!ns:>g=Soq"5IFeJA%E=pc5-_:>XpG"r6$29UEIkma(U49Urd1`#`Mj_N-hH
%AJI<*FlGm4Pgbl32I@fA>j]Vj$7lD\YA4`G$LWc21iQZB,eGJ!YiF5@l).p2dX%=<)EUhS.G(Xqg)A9ij[A_M]lp'cp<.ka]qj<C
%eD.Uf4#^(TB+enN&XA)\4>Ufs7+1-$F_f_?7Dlu9J9sh!UgFJ'U$V&Peia5QX%U5U;(J_tbkj_0\N:QbQM=,of'=_D@U:f>Js,Rs
%@X):TUTa(A[oEkkE46eDS'AP.#qK(WL/S``rLCe`N(Z!p_#0PjQ:e$+fcZ]'>t*NI&qdP\8AKZBXpa:QPdEm]DNJo'hOkntVl(U<
%6r;MjGq5=3?+G_r<AsV@!RHO@$:P1CYT.)N?GgU->;DZ0&-2Eoc3<K+1L^'Y%$qSi%.SA0F2`2$M3dGpMaC`_I,Epil5C-oND$2J
%VZ'!\.%D<-\.]?r_&6(ULEuN0$U=e`F(E)l;m3b_*l0<6%>D)h7XORHke05Jq%tVZYE]_D&N6t@EJ8lES>:GOB&N;j9aUYeU'1?5
%^^+\%`/G1Do`E7=9_aXH&$sM8@D;*Up'=S2ob]^36RX4N*4ARZ2[(f*M$L3T]nIs@AO('A%fo/)0/'?QHjb!pj%J*F)3srcYFuBU
%)Xt\ndf<'jF;^],d2:Uq/D3k@O.Pu`27/0_e2+sD%sKQ;%qetZ[+70.Y,W(PUnAQ%(UcDM]nalk=EE;+f+@PGG;>,I9g-eE!`>SX
%IXGe6[]l+6(u8>C7MGh&?#)"X22A<C9Ud^".D]ALr>DCFe]1W4bg@!X)/`A=Oh7*Yp\(!$otMsjTTa!&L#BKtQ<BcmE^=*@bWU/o
%Pa?0]35X<'0SWjZH)0JibKd42mipgOf*En+QC$W0/F.U%W<LHiN(]ls_)NUu<J)qcD+_rKTs81@8q$D0n[qQ3$#c()ie<k^l/;11
%.=d1t$l`Y4?n)psC/T!1`)N`tr8nE,Rof:=h+<($]u>(/oe(hB9a+p4Vbs!VOFguM-4eKlqZ^ou!=iTm_no;'0g<R8JZs?@$31*1
%VCnGfq.o[0nMZQm)!\Y($;4fJDqga,M9pdZP&.$GmF54S-^4.Xg*ebF`$@FS1ID\AdN86o869`-_e/koc<-6!+m$SG:.C*G$u,QG
%Vs&&VCqQTXEFg>&F1[MRD'[.A;]mpRrlQ<nQ%=Nfdn.5ZWf"fmB0%VP/)[X33X6NiX5Ujl/LOIX[EJI/rY3?jJfGJ2Xj4/AIc!K_
%&P.4=k:b>V9;^sP2b`6Pf>_,0B7im?.L5/YBgVZ<5s>L`\W%>%huB&c]#mhNl=h?6fg:Ce-6(Wo)-[LUp*%JbgC%)_/($/8<<BD(
%Ae""'nc5?(E@R@RWA+Bu5\-IA/g<S`R@>GcAV<Rr<?^S.IL.%+[$gi0OceljX:c;U"Zb=S3U:oG''fA=N&%02d'9Mo):A)9XQ,pu
%9@nK=\,ZB_c4h[1JG+.eo:hl@?e`O6%K"S53ribN,IFm\5gj4+M4c(SHFt%edb9*`*0l`\Md,uRRp5dc]fj2l?Nn%G"jYjY,Wq*G
%QbGP@!ORJ)FUi@qFGXf1H`]X+01Yt%hYu"'o6\*rNWF95rbQ.8$:iCVZ?PsXOO/\Rg;%3tZQuKpHPie%6]mKd_%Q,rb`Iu++em17
%a<M8,**6nJ,!<K?"\etuPNucpVN3uElC?F?S3Wkh9^3?NpA=<Nh9KFN@1>%3MGg!N+Xh1frC4/Zi<uMr3_C\S?YF;&`1>s+l-)-u
%,:32nXr/bO8\`NM30T9Pi"-NSLMaL/EL2_A-Ff7:Hf([\A.tXWnm?t2_&4_1(;f^sSQ\Fq[G"q_aA*tI]M=@W5W)8N/3,L@Edgbq
%/=]aFjKe5"XD=5NP%cp`3?jf]l-Yr-RN>pgkY.q3J6I;6KIWgATR7.WK@sL%D!b2N[5jF2WU`M_(L+j]Tf2??VJ3jqd@cDYNmiXZ
%K2-3(GPK>05McE4VdQG%HAd\5-$$3qL-J&DoEXSK(\Gf*W%?C-g(AdT7CfYYa?2ib5m],7n9QE%Yq$kfgC*/JUsQr9Y>i75G^lah
%8B3JG2YRq"!O.XH!Epa7YkFDq3-sM00'MJ?YC6_C?5u&-i\WduZtq&S+&C:&EUW#"GYs4_ZHn>'_/=F:KH=n$UpJQkT\/q]g<Z]i
%WA0$)j5R$bliY)7Y2[h]h8\9Wj8a/O[QPPK@D&=Q!LbV<2)MCQgNrf`Z#lf]!1XEj'?X,16U8A+`i)]C?+D(IIn)1lK0Za.MkrRi
%,iWSi:>Tuak5^>?gSaAkIP^d?,/UQYYOYgp;nRhqY16<O-^J4^9P,[TRo>O6s/*O/'(`;MV9i5\Mk.D2$!3+i:f!tal@*_Yo1eqf
%)7Nh5`fM'$DN((l`B4&^+5a?i4J9'`TlQAa)QFR7Vpd$=]Iq!NKgTu?S4&L>^]a?$a-j>7O"/F^!ct!!:aDf^156g(3oJmo5;=V)
%QA\fpn#KRK$hiG?iN2[K;J<ah65=[O_-#QX[hR/AM=QrgOI%!%[+4P!("HPunZ&,&F+1e),Z^)@c$=;SSV!hL:F80l*q'++]Hs\V
%;h"IBY9;!;W;E/3^UrrM`,9bM*uBjUqK($@4dEJXpoFAVp\#EC_u%RO>2_a!o@YA-.9`5;n`/FnEY;fNDgCY.o"bQmHn8h[Y3%tu
%.<%&'D(!:nqL'_lh,t#A:4gSuLW:BN4m2b5ga:A!42;QV(.CHb0&AI.7s5:(gBinm0V3K*P`]E)<148Pk$'VlWjJMu1)"0ON-N;+
%\ljZ#JaCEL2!Psk`GKntccXh_+r8/.`k.iHc4p3$`En<^&PuWlI3j=XB(%DRjqd><78sWHH"2JWZ+\o^4muNPhEAQT;17u=?f'L2
%A+>].mW`rd,&Lk851GSPNOaXu@f+\&Fj2!&S0&XI_>^19kLfp[Ss(PK@[eX&4c=JF>E83%>ne=,Nu24j6j>WgVS:>,1S(_3/hE)j
%`TLVjRZ5?,f8MJBG.D5KpDP\uZe]%Xq6"#TRP+ue_"D0m8-]aipdj"L#PFeW6?kiSFSOI*@J6'61#4PRgWmh\+[-1C%7<?m:cnFi
%Y5Fuj2F87eI)?Mlq;N;aJ&E]V`^$:#9XX5s1eXRi.C5q,IkhN?+[3dE!#F[i&*U%g2\)<dr"d(tEBOAsA.a#V:\grm2<'OV^GSok
%*8oFWLNiBkYb?tZQJNEXO3)L4&(Y@,7b/KT+*_qI&kg*SFLms#cQ8>niWY"EBL^IKN9,[;h9#-"j2$P$nMah"^'bgoV?`^_]Q=p0
%2?kECrRa;OON"u<-XYY'!RWu]g<6GJi)&DI7$IWD$u=m5!8"J'ZA[8b/mhh(d#V4b;;Xkl4i\jIXmR=h6#h9L<q1kh%F95p16HNG
%d2c3.FgL\7qotFlXWtmNEdic&6MT?V0k&f4SJklT(P;$lj\2\T-H%%b>0Qa'T"dq<\guf/nj6ts]Wt[q`GZ[lb[P]&,hiG*AmSUl
%BM$R=&n\4<$fdGu=,UR>`jVe+l/Q)iY.gB%Q8uUT+&=&@j?3BRlB&F-5HmX>Mr:]gFZ1l7$m)/aT3iUuFF8PDs8:aQO5Bco7-)4$
%8jU;[i]h,HH6rd;8Yc,=N":PXI!j6a1@2MOiFrn3B8l,XiR^0dqs,3uq5sH7^&6RTQJ"e'YO)f[J0#%6Sp8qW`bdiiXM3l&o>'D*
%n$RXjd/FOOf9\GcpGY&)o6^@I/hPjNPb;#=_!4D-rNGSTA.f!C^V=H`ml"<-CHJ=safV`fHZc8PofS%Gi$\jK]H4KbZ5MT;RsSMC
%]B0CJPg8'qRP&Ks]4\fp!\lG95NVGKA[sRpY2-Qp%;9'ajQ,^=-hlVH.4AY[+1V&\Pbf9iRGWkBnO%@,qmVc@^_a/$O0_:@:5b-\
%SJF_$.+R+rn0Z^*4C@3l%i\jj.@]3%LKO1018mF/2Qc+GTE^=PfMp`;"=\B%S]D#O!Bcc.C?rdR^.pX375GstY2YB&)=kqY2^uPP
%a6T#X2*Jh0%X!!A@4;L-UTR"tn_r)Jf^%Ae`kA<I2JO;LG74?,lX=#dj$:4l)nak%#?\qo*fJafGj^?JY3+EX^*=4V6GU7;Z\GbG
%74"Zq>\_GX;,tk(2jfJ9lrtOo%CH?cM4/7oAL`=9>!r!Lm^l!pl-P#`li]lpi8Kd\Fle#9%[J^Sm$]uA0AkC06WEjBf>a:nigOQL
%"%:Galr=5ZOBUNqg7+l*FOAL4Cp4jBTU*M.j8l^3JF`m'N'#+\$L61=jIJ.4N+BEI!kOK91rrhEH[(Sr6.smZWpdD<miofsOTtoI
%g?_MVKTFuKs25+e'lIIB6n9.@Ie+NuH`Cq"k(UM3eq,NcmAUm58SE=HQfCI6*]=C(JtgUTRqRp_;%4CD>tbkofm:#g/p,4ebkotP
%-G=/N=sSsjou5bM`XRuoh0?h!bLtom'GT,QH./nsMRZ$9Vqt@]:u%=0Au^n^(qt0,.n7I@%XO34&r\tPjXnqjGWB\)&4&K;qHa[s
%J3&)421r4$)SsHSfr5qXm/2f(pYrT=%_oaEn]mpFJD%HH))t(0KB(Eg/q;Z]Z@dD)p-Rdkit4"t-I!+]M8nL_Dp-/]ji1BUpD[Zp
%>s(c`mlaVhe&c6LDn^t[`ud6&lZmF8\F!86&Rdfj#jor27=>b;g\Sr"I&r'kVt*fNlqCkf*3)l%>d&*)No,mFpr2%gqS1KadtbI4
%Pg:E6CP-k`>eI6bFN4+I\a"&oVaj3ElWsAMe!?W'AuPE0gKai5EGL=.mYU$.qp#-3Hi'9dN+qt!l+5<LqqWl7-:;JEJ+M[oA(Q,+
%O&&l!ah75CIQ[W/R"Xq9mAj*6]rf&a\_Wn8g]+P-k&`.4J>+5Blmpn=!?"HR?%5G>KJB%\P"@\S0t66s</[omDK9+#Xq4@*9A+:C
%fBX-;\T5`K2L2T/05jr;^anb\R3&&7/.B.kWGq49O1C^)T]]k74k,`od_'jO!ZjOHLRp^,g<B-I%T"1WJSHN4.-'D$qT;q&W0q:O
%9T;dW$>@oP49=MCl?iL?YliI(m)@<9l5n>R11o)-jX0!.4"m0H?rS4t-*$(S,32'7A\7OWDYGa4m=(etCc]oFN_c)H)fVgcq*)_1
%X/&t4bK,b/qd$&0g]&&HfX=U,S(->N+MfFb>s,N6![8te/#5<5hL`FEpeC&04QnL9iIJMOiGal<2LMcFc_P4K$-01&iTS\(MT5CU
%I]b/9dt\qBH@1q]eUS$S[!8<%\'cMhA\'d$L:s-9c5YUS22T1V[o2!nMo<M&!t(!]CkXSMQ=(M-2sercKBh<=NQ$23ZgtS_Q)R^i
%9QO;#rQLBG@5![&b=Z8I*s:TE.AQd\VVSsaV`]*9.5KgA*td42Y.q*Na?)LqN]'JAR%,ej_l'\V=e5A#el(6AZ8EA&1NLJ$c9N?5
%T_-o(,)q_#boNMHUM76pCi<HG"k0&)Jg(b(7AV(AE+^*0HXSsU@$>=cn1<FcoC'<)r878B^VAInIsu>9a'[(o"3qLL')7jE*tHZY
%5Ggf=/a#[E$d[?$W7g@#s1J'O0n90#^V@LbTAQ*&c[#M6s8!i;o<82m^QK<a1HZ5l'/AQ^@(`,j#>br"F6N\T=in)\;Y\=W5JB+%
%I;&gu(_]$0,3Nk*+DCE^D@39s_'?p=Flo5eeCY3T[8:7AlHWr<#g&JJ4gbE;MCNuTjW?bUDs2nL,G(%7!N\C$aK`;-0Z/70OqUY^
%a:h2Iol&+(W1P/R,BQjUTnj@N^/IRE.QqJma.F+?h]m^9'"]\gXac/Y0"p!@Pca3>gLf"C`Y)Q!JF@/M]Z?s4)sn/r:p]p(q\Tru
%^-^;b(b4-2cO\](^Gg'SG05^[IHUlm(*gCT6LKFiP[f_^U<H2\m43Nj<IuPj:ut>EmMa*Eb2p>,3W'/'-dZoj[Zo\)CPsO,*kHa_
%3f+=)Sfe[(/HB.Z[Y>0Dc6ht.eQFQ"AsqqA1>q73nuB5058m:O/)do_(9'rdC`6s;-Z+eSi4P-EgVk;Ncq@dF:L_O8@\5=mVF`[p
%Omh*>S`DVnPrI9G\f'QY;H2,/`;nCWpTK9k&\/VIKggCE87ci?9/EF1#9(DUEb5S>%Odo+?b8jc"KpN36#\_7Gp]4L;eP4r"$^"Z
%+?_"?(4=250)dWtj4nF8PeP%Ve5RQ*!(I:rLJc46*U[)'Ei@%T'L9&Uikl`DTqrK_P+&q89\&L_llL9bF'SltX>YO7MZpk8;Z[[A
%B+L+OO/O+>i>.>FJk%R7=(1R6U>(7]kJW-qM0A^j=/=&J]OhT[7d/F1TbOf<;86j[9<-C;8`T*i<03?NmLTXpeu>t$aghqm]5S?i
%gln4E_rfKtj^$I8!SL#"J=hFgSWa@:OHJ?[j=Fj1)u06(mgR3q4cX:rp:rB!rk,3D(S>`WNH&<]YEqaB3#k&2W-2UIA-@m7Y+n_$
%<"mphPl`mVCB5PI=gn#FjPoN_(c'BElUKa8?J2bq2Up[n*#@nZ%+4jgkl-"mEeDEFC:a\5/`d8bOt`2^OZ%fc(Ysu'`]8>&i)nN\
%7<6"Ah=&F0>H%=J>=a6<5(jfn&Q1VCOr;)chLiW]p;*=M)XF\K#F0Y4p.:V@SrXfrh<jD&iRI8k[E.ga(mO3K%3AM=G#7cT;GZ7r
%"Hm7mOKSB,*?pc6Z-1__>^"u>MLL2^mhGq$1EnG8@Mf5jn%Ho"IP7\a0VUc^4G6&X$0X*+]BDepTh:AS#$0k_K#.:+2%.Y6WeOKc
%5poFoQ*?h+;knkM/Ekg*D284C1lR3B&4BgPDRe[%*V(0l)0]&mkR\3pC7!;+#lglXj>6Xm9$HB.W3@I6`/a?/f)8Dm]Fi7-1en9o
%2(fB0VunAHHH\(Okj:PC\1LY*USTD]`"#f[9@X_3i1T"V*E@4=_'O6.fQ[4c#1r:lS/'&5*MFp+\.Q\Zk[o9.?tXe>.`'(G9-6Ru
%Uqrn]7N_dC3a.ooi;<ifp4IOSk2WEnlV#-E.Rd6#$es[AK1S:N3Y5nhfYfjjTJ`(R$Gt$iL;t3A-GXE:a2+/TWWE>FbES!VJ_gu2
%1n;EXMEDgSN470GF_;Z7.UiMJbkPjMXEeEn*7FC37U%bUR%.M;#$dD4ROSNWN_\KK#\*E1G>SkTJ:35+19b,71QXWd4e18CmlesN
%O*^k8ims*K3c(nr3L2fpO6d_N0cOQfZ*j;&J=B$qN*oDr4oWfp(t"h4:DqBQfL/c]^L/hh&L?@7btj*X;\g1Kk]DX4J:k+]9FD[C
%j4knEEj^'`:a[:ke5U@'PZ"HKd=YH#`o)M62Q"6B4dm&*Ya(Mjq9?e;=A_a1"OVW>>($PBdO92denI(<1%uV=5K"nRH@YopoE;lX
%)cpSE%p?2Y9k,!ohH+U$/56E`.i:nejjk3a\_`^T3s9iW)S8EA]2$lY9*YjEc>G5JRE5/C'.bI_a)XCGk1PXKif!jU`l^2h(f+-C
%$'7ns-r?8rB\SgaH_n)Hdg"]249W<E*M/'YnrSF7X`KZBj:Y_-><W`hFGEWFXY?"92W!EGWT[9<CgM,.#6P$dM?pH4*eg*EaIKH7
%d,Z;N;"sjU.TD2M;H5H4-gJ=@^sD"kR:#i&"iFGf7)3$S,VPB75<6N\`?WmeV8fg-:/qX8NUWZ7&A-<l8B$6O-4`0M[ECM0?#CLX
%a-sqV8YdEI<NRAIQS5Q`FBGR)=B^'b)hMa3]_A4CA5["6XaA1ITMj@,kGuM3&H$\NP"<b91A8%*T*iG_H,ReL0'TW33KY@(qqFIf
%G1`5<VG"^23UAXV6A_\[($tQHZ;qbS.m$KI[Z8Zm!/XB3bg4\a+p9'_]6rBg,V"/9H:hi&@9f^B)Qe*u,?Ut@g9t*N64DGB1*WNU
%f0k/;lUoL:O.nV<77i^E!B]6O?++-9Ks=bC#%X3HdP37$:'A/RIN?4W/Cs$YOsca::o'A`(2EJnL>Ma1m6jhXh5mH%A7"9AOaeq]
%TbApW4F\O?R;ktMYsunjm^%q7Cr4c383=QdN(;d57Fr<7a0Q`/UJo2HG_Cjd+nPj\UOh%F4m\,e'aW9;49EEu8?-cBPk3Y8N6nMC
%1ijS?a-h76g-H=K'W2%hQ.P1>O]#[%MaCq-&ZEB.WQiM'@]-fY)=o:*_)]1^;V=6m=-4Y2-Yb"]IRr5O#l[Y<mE0>NSOB6j[1GcA
%[r.mLL4l*a^tPRXcIol2e+"CaiE6_tD4O$U;FM9fCX+rKC5#&p[&rEmAI2@48?)iC"cUl6!l)p;h%MLZEdN1aNJ8d*ZN][W`5NsA
%pkQ0A4E*8HA-X%kj%k]N^b62nd]Y8UTl(;!Ng]Clm84,m3_^l"Icr4mE,1sd@iB?,$R'$T'VeLl"Ks-X2q%I"U"@r)=gf%J,(/Q8
%MSJE,crb1pEMXX23,'(H61AWD6L0N].u\i&@:N_.+tN#a,6`=iR;u`.OX)44F164F/XTK$L+!n/3&I7C!/,0.kePXXfbhN_!h'PX
%#rR?(2Z7at],0QQARC^N6jQ,-PfQp95A-5c'!7C,Yh/-1'l>/>c7$Zl\]jbNG+BS7'/7_qeYJ,i4r*4;>BO1*[4d("kL^_[S0:/Z
%Y4TDg_#RU(GKEFrR5.^=p"9:_U%fWZIm_6=^j,OF9.c/^JhaNm-/,,s)NrT5fT0T+Do2>THBOs2WEs"tHn=<HAn/As#IgKK1tK?l
%+I&TF?OST)40WFp%:NH7Ae<H$=iG8B[\>rDO)R#_bBb'C]8U_HN+hs=&_NTqb1>.CLDV0tbB)hL6e?n]-K/;k[R:o4@r(d!WJIR0
%""L*=qG_PK0Lj@j:<jNA68W;3%>&(eF+\m3j0XIl/PY7tkIi8I@\]"[-J&ZLk)h'N'CHB[$]t]8P,6(2'59PV;/'V:dE5Qhr3X@s
%2\Q[#8(;PWC2_4!/(0X!(E]WmPrHL;=!"?d;Z1b4F9KK]?i51M#fr0,=i!$hpH3oHJrsCkH-0MJ+km\%-5(olglSL18sV3*RBrY*
%?33W;.q+$$)J&u[SAjfN2!":'<tOe=3Fi/g9e0W!*bR6LQc0>IL-g6^n=d&Hb&a;`"YV(eTk4p2b?h&LOt\A]J8s[dSC,<Pj]ARH
%H;A[VIn@6nWRC(`<UQ>-h>LW-OqO8@"&U8K4P8"@fdVB!o'cI#^Z2^g=_,c2%9hgQJMQI2Pj@amIt)^#f?'<08<7Ip6mFtojU.QO
%fDM>'=F0X6SjB=[@l/_afHY]?`Rr2<EeLiAiTr=b*1,G6N1iIn4B:cTFk>^@R"s^:UI"8"-%9(,/m]_XB@8uh?"dh],RsG%:t:9u
%3U'_KS$DVp/*M.cJU(T+=.'T`:==u2qcsP,:/D&/W6thg3i?elVDoj3WdO399qfb1,E8&h*[]"ZpYMiFS_TEh<t<>dV8V#Q12K#X
%!$as08clh#[<1f/7`Y2CCgFj%XHF"\+e2$-3T'Q[X=-6fe].pO&Z?fsf_j/ViTE<BqYM=XShB?DHhsM>6,Ga_Fmn`qk@GNiFKrl1
%0\s6nj/LA;h*=_3?JI!K'u8]<,%&TeX=ek&3"9qZ\r*X:s.>6+1t#61b#)pi1a`DPC5suM4FlsM$PB#+bZ](BJRU)>l-]FAKt8co
%crildHAF:)rT3^Vgh%RE`l]SF4srCYcL_*b?VA_Cc/K[aFO&#\JS]]&MH$J7M+.,K(sa2YHg\+54k3#BX(h+8L_THPFQl/UTd:5Y
%2e,Q[M!B%t?d;(5D@c3.]@hGSnufLH\d^<3"N`a7:ei;,IQ-.b+07St'@ktZ!imprU#A7#3p`R7MU$`51'QHXCm-]KB=?E^<3W!\
%a2m]-2-0m?5?pH]neE]A4>tk7Ja>BSS]`4)`)Q@0/\Q5dMr-;%>h2uXCIsp;m*@E9_t-)_H^-^0`X)Adajo`^^o-OBge.pHY:\JU
%cYrl\jH:g@isH8qChh\IiVl+IDcJ'C[j;B$7olSUcs_kFR_/;*6Cl4sI\V:1*ESBkP/_o^Aq7)`"HX6GBUnULC"*!qC!428o7Osl
%p!AE`TC5Yt8%-[l(lUCs,ucB>L>-!9[)8uZ,s];>)!loL+tq6s:F"D[s8!AqoCiJ>Qq3"c>p&M`4;&)+>_A,c<**Q=@5(E<R$%)(
%HpNJ\+56R(34_1NlK!Gens8]j39<[i]]K&ZE?Gp^R$1,d9^^\F2)`m5S$BNH!>:cCBGkal#5^ik%#!.iJ$'O&;hd=ENKE\M]>b5V
%.7M(t;56+0O].clSpf^lm3=_+@N&p4-o-o_BI.h7dMi:YB'2>4ig^,;B9#dbs$("9W!mQ.nIK!p9mW#La]^nnr0O`5B$2Qr$j\Z#
%88G/A<!0)pYO-1QH2$(Smsc2;M<t%p0!R*J,h%3UK^$1.?mK#>j=;JFG!(:1HR-"'-O5H>/+,kSXrJZ2p_FnQJrl7[H9ZSC@!>:=
%8=P(/:%*$OLk<I`*M%g:mP3QHVN1$_3!A1qZoM8#]4L:Db%Mji!rM[YM/Vp,E;NrR1kFo'3!@lr_#$#&6L&Atf[Plk&Qf#c?V+Jd
%*h\qpRQ:2KI#<oiQ+c'AbqUuP19Qdqi%b*flu,"41DEdX$nao,@.)?#^jf_6G"DQD#CLB9_Z7lL;^&'k_:U1).De`=Ip[b-H:oWj
%hYBWnjXf.V%F>Gkj),rSWSBKtrT_iq6E)Gf#JB.ihs[\KJ3.Zjfo!(`?">sF]8kncd0]BBW"*[hE2k1^PVdLe""&;"fLj_"J^S<`
%-Pt_e4#O6&^KrH!8Gk%D#lD-`([k177uaTE)bF8PK%^sfP"7BY#\7@r0ogDl;DD4]1"c8'PE4ic)WsVm5.Hnm^-(s`23pmjH:C]s
%9AVs=.7I!D,l^uF2Zjg,/0_=k`gmHJej,:Od?RR:h*t_o5"ho]#<Uf*!#1?Z+2?k;VXP)0Yts]pSn_I_^=T;6i*DnCd$rr+VH$&e
%[L)dLgcG*)Fim"^fL87>:fWr,i%Ln`@;MMTcXs,rK'QsB=\*6#:3!&^iqIe5IP5OggpfW^j8lnF,0`0pYHJ?*47X;7gY08qNdgLk
%r\e-fNEqZRnN-<4iP"5l0AVm;=-"I,'ENtff?U+#?j1[rben`IEQu]F@j\DF*MH/ed&7oH4_9eB#KArr*W*J9PVe&,R66s[lf*%Z
%L'HA6rsu=I04#3h1[_!s<^J=f3nb3q7r2^a\gL+)3/fPOKQ3s!!M^==n3>Z$bf=fd#',,r,HR=f%MC1DnXT4b;RF,7IFIm.PoCR2
%0;p'SU@BYW6aEM8+BOGj$>BB5m;,:.$>IXGob?]3J<A*?*oV!^+B2GYriZHA-c1eH%13fm3Pp[^&NQ32>>_*XGY3_MX\1)g*Mfsl
%ej#/Ni1J=Yrj[2@[g%g>?4KTTb9L7'2u=ZENZGhNg,L)tc*]^Ml8E76SEB.H_]$e_hZJ6>Z1Z-JiSCY!+@u)]J,9f<bO`?Zj`lHA
%Qn@lUp^moM!b3rNn$FsaLV4*Z6D#,XNp\ZBUO]:UdlLQLLULgkLVrjd6]s=L533fYmZoJ7<.85F_lKeuUK@%KP0,TW$eWug!3P_:
%>[Kk5^'';k$7O)Oh9p"Y"s34.EcIl"C(HsOqbc[jTEHWMGGijBliOOd=,:'kWA:p2SMfco_d+[7H]r$UDKl@Cb4sW;$b$=b!8T_$
%+Q5QODH(o3BW>fnNC>N$mda).RU%`8=:d$02@2Ku]-X(]/AL4]fd^<?cbFj=2c19/1-:PM<h#uC*S\S#SnGQM2*K1<>TZC2Il0[Q
%GrE3XC3/JkZ+&(=CS%UHQ)oW]o:Ho0@-iO9Y&-tFQDqh#moanISmNc0^J+!D<sAB)AFN$%iL;%0(Bo^M9,ld?6,"t?HrXMK]b]W?
%7_N,@?/$cA=+"LP[2_JCS,i/Q)rLW,a!$^.ZKOq/VBLS=F72*!Qp:m@o:0)\AWL7IKOPLMU#oXkJ!Kt0ck72Oq]1Ydn=`Sh2.NSt
%MZY<lB4/S%:XmLn-&cKuhCMTr=fA72K-SdpQI""n=YV2NqKq]I"eqb5VsnjeAfOZ`XiC"9!5>5(=-no_AjE_)^E/\=TH6B=1:5Z8
%&^IC4N=(bcRsE3[b2I_5RJhNeBnUkfNBM6lkJ-EFD-9p!1SK=h;aTK3WRpTS+8u$(3KYuC-eXA9)F[7Pn3Y;Q6n85%]ei1tZr?e\
%3G6-:ct$t^`#g5'0X$Hg-P%7$bnh%Mq\Y4n*Z.7qCfEG92JuO1@.)Ep7J"KI3=%QT;L#H0)>aYtWqA#cPfTsD"T.dUV4Eba0PZoh
%=P<^=!9tTs$J,%:iu78./AAVmVXj7i6X:gnPMXH\fL;.q@=&(nQ,H;bE2:<U\@;ab?5OV!8Od7qnB*_g@ZCIHSVV2".;*V7J=DR9
%)oZS6,LPm8?6lKJ-%IQ6Bd^sk@pD2)?juDuitt(pB$gl4T!U0UqIOgVHXdcbfFTb/YT`DXSo41GKimrX;#[l,i6B^&ZU$jV"MM0d
%\@(og#;C#Bd!X6UaLu:Bs/0a@gnSQT8e(.I'20P(M]TEFhWZaHi^so2b_e_VW+_@s7^S;?KFHm,T`R2'He`qo!ZW*01`JUsO_aU:
%"+V=!ZA0a%-0#In/Ws6@2[lq)a2Ai]WOZQ+_!.Qa__c$mp6jD6+HR.%2-MSl2$"2L)12cLEKKJU&DLrp?=Zlm>T%HXnrkp^=<&_'
%ZSY##UB0,?VX<\eC0:\)GDlpmKffYe(^j(n[_c#"_$hGDN+]^b*iq9BiF=;?=#bIsj#s+Aj,fQ/rR'TF_75Z]-($aRhLKp4)of@G
%Ccuru6Vd"kjpE?+fG<?G6'=3;&ABrML&#7_U.X7*)TEX43#I^5K!<*;Ns7O",YN%^R?fO%,$gi4";13fnT\2GVH7@&)d<e3rHj2^
%@9eGUg35r,)TFk`h0":>M5ec;Nmm6ETdG"8YVgWf@pUX<`0FdhN"M(cBs=3C/"8rjr,.M2eC^;l"cZ\=N3hWs^pUO\?YE6qNmkoA
%KQ0p.!..b3Hl&rURaTgsV_\6jj?NdhmI[D_(F,"`(L+B$fPq::]tj?V7c$I%@>(P6'r'WXZ;SX$8#-`E>ePkOX+KmRhCq@&Gd&c>
%rScZR,>LL]>Ne42aZA?BM-?3Yc,/N3!d]1cfuE0,+]f9G&SAp!.Z4d[^'(29_N0Q'qM8H$?ed'(45aI8eJuS,e9iu3^$r.\]"o4W
%j1<^GGB-Oh\FYjq6oo("hZMraR`s0""5>unf2b5u7]2u,e#KuPmOIQndd^RZnS:5:.k=%,CDa74HcXaJY:T$Q^\6fJmn"`d?5d=I
%K[$uF@S[AYeEgRJ9*8u50H:(5N-\_C4-XD!bWKYW5eVe_/$bpJ!Nfll^1#fk/$$IO-up4S88>Q+]oMBNA#N<Zp+g[Z$inSl^^<?t
%aT4eD(jkU\Hg_eZieq@SUbgK`")s1^S\dBqI05j:q*Y;lkZAp2%1Xg-8lUTcKOo7tC"m[JY]#@F;0WaW,oEE#)pSQ-1BpF&K;At8
%LIJa2fUF34Rk3cEOG4mF2UFD!k4(.j%f44NqUOH?fd'(+9TR$lp!IWUkZF2Pa[bhj#AF7Y11;_b\q>@7A$5mr--._UgWVMTi;<Uk
%Jq((O:(:l'7kt[J%,'tB]hXC-4GsY(2]cBf*s6jtU1#TQ,;:%M0b[/q$h1%UeeUIm::9q`kB5FiJZ0oL)Ao*On.5\?TeuR_WQpJp
%HCF7&>pm,#ggAGl$0,E>JP.Ap$?.K`&9nKS)l6L0Q/oBm#UAoZ0KpRIX/#mV$c[AW_@B8[)#5BRM>+f/QQtNsYp-,F5P,Xb9C[i`
%=%()nA8j6r\U<ceWX6Z[<7imBK@sX6ZNTW2P_uph?r%UmQ2P*l6][-M>*'3G>O_4"hIHKaUem(7j4QGbcs+rj\2])\q_;1E3Pg/9
%)Z\n9*qch:J?tqEO*Xhj"R0KGnHOt3NNG(!3bQ*11tC]lh1?La3U!$niSq1p_7oat1r"_Xl.:0@53W:#07N)KDs$X@0#ZApqYT5I
%?E*gfo6ChlK[o+l!,5GX!Qp5d8KP\+R!#h!juV,a/DVNt5KX.O3#F`rq$Zie[>iu3mpmsZ^+*FP6)oeN'lT"oMqYdI`pHYHO->b.
%i'7I<kL"#^!4%L,"*'nk!]B=n&@'jELilc>[9)[4#NI(h4%`g9k$17H/b0\dKL[T9&_IGEb_n-;4i#mn[C;b0SMA%Pod%6l*f"tY
%(nb75/7W4H5Ot%)g*%.N)<)l3V3/,-Nr*<g3%EHmL5(_]n=*7*^&GQ3^^uG\JF$]40JQ[2kW-LX?dh9SjOP<EdFCX.-o<cK]c`[`
%5+4b"1qLCaQo`D\erjF$D;@%OYatXQ9(Ejsg"_%e[*3p\!C6W6fCJYp3LHGrgClOMBCs1mcQiL2D#`dTG0<:j+WM#rA4/,kc(0]>
%HDkJ%iLq>KS^A$CIpAh0Bb,HD2%Q&qrWe`U+Jl?8/E^mTU)tDH*S#T*m61*Y(.3RtZeU/??aBb`pBa^[igB+;BB0EM-(N#0eCQZS
%qeXf<Zk4uOP"W10i(P5Th\]H08p[.DbIKW$*uDq<VaiuY=DgQi\2^%`W0K(JTkD/T)BL+B%.1p)`@mUtWCu",`JL'%8JSNf_#Gh^
%V%1ho:/l5N$XG!/XhuR%L^B=.&VA)hmAmeLi>cd(oK]$PgsuhT+Z/PKnJoOt`?@&HT0+e=#t0FPR]B$K*Nqpn,O!IcS7-**l+r\n
%VmEamn*rF1SFfpJ9nT_##V0k69/fHWN0KJ!:'GiDMIUUGHgKD>SaeC/ps,B=Ws/)VdO)Z]$$t0IGg=t)Vp<qs5q=h$FDQ+T7TSe1
%IS@e)S0+.Fjti%-83`g<*>$/.o0om:If,ITd#f3P9>B,Y"_4[h(LLW"klOEe$EP=eCl`Wfnd$!$f58J&]>5eKp;P[33r(HR1g7)_
%0+XVP`A;:]ekiO7Z+E@J3nHJa[ZVl"G]@[,VCA?j&/iHj_-Pb)UD@'r#K\A.2.Fhl#cN_^O2(r_SjR]_hRZ,3@L"q[\Zsh&km<>q
%7C:X`hA6jHSL=9!EKLDFHeT;4'O1%\Hf>0Z%,tE)QI)S=#TBm_9bc^qHtPZhi2f)43U5ZKK!?_Z#>>\uH*QI+;/[,l1%Mt;%OJAG
%ZkeEqQ!,[FQ%u]N;2`CR!B+3[^_hB(?p*(4_W6*f]L&eo@0i%4e<@`@K=0G>j\XO(\G9g$711=CN;mA,U`UmqJ0Va&X^AP50t5!=
%0P9Z?F,aO_F9Rj!dV)#pg5QuS=)DiV;"LG*N#(S3N6J`jFZCUgXtn/D"c`G^]9L9!dWhN`F(FUa,H$k3@QJuCXJ$M978pE/Br@q-
%;6K"0M2\;GEsO5)/l7)n5cG`dFR^E&Jltj`/Q.!A[Em-/)3+5U8usJ3-/Mg.r,u_5)EAKWe?h:N(?'do=o:5G`%?NX\_cqoOMr1^
%03J$C`VaDRMk,ClU/[c(6L\_mm6V-;$(<sgp@[;F2I$+tR#6^JJ6t;>7@>%tj*rW#-LSjs5ZU[l1<<gMZ/Tn)-,Q:p8/0VJ"@&V^
%6Y]O2$RX.cm-PuD\m>h'AEPTWVtWoIFf09->*A-S`B=B]f[GcQM+JaW(tVkb&.]mI@g)5[hQ:[OEl0!ac!/^LnRsM;+kl9\-Mt(Y
%lQ%oTW=d..6ksMf2);^"FZlu4]$pK]Z>.RH+R!B623DtuP3Qi)\=6e,U=YtCm3SH3AF$_rg#C.$!>VXEr;/#FSG$*[d=D^\WuF!%
%qXFk`DYJC-EIAb_eAbr++3]6pV2:K%N'64+aqZ3:N/nKlA].'-)0M-.(ZbNdNR"oQFb-FWGVD8)[L:TG\bGWFRn>eBh9oB>7=O##
%03XQ22`?<3i;Y%gbI-\-QIpY?VI[n4\M*Zdm7Vo#6]\,:rOP5o;9^HVP;a/VcC7h!Po0r2n7&[5HD)m.NJj-/U[`YE>9b-PZP9LV
%>RDn+KX=$R_6kbnY;ul$*I?3=epeqG#?m(UNr]gVl<;jHqX;VmaH\]2$8jRk8;Vp](aPj;b==QZ;&1eS%-bQ@JI#$j8`(@#e]5@6
%AD&+!K`Y`-/peo<!lbhF@JK-KEMIM\V1Baj5=Y&l-)<S0+-cJP;:RQA)qrDD%iWT0m4V%V4Huus#-^]H7Z'%%_T9/i)HUIE@2po(
%?mi$EGC]jbB2n+nemtqe<,Jfb"@up*c#F<P[_a7gme2Tt=82qQarQ2j?ET8F4XQD(cZHVb<[LM%C0bu'\0rSWZ_2LgZeuteWutPA
%QbE/V\^C#&phWB=K3io6Z/lR;>sa@C'6=n-R7hPT(BItk(b./>+e[t=ZDoa1JW+*UZaS40=1XQJ'0']!_"\aU=tUWbEHe;[kV;V+
%p8'XhlF?4/eS1]uf^D",lXm[=I_cH2%+C9Yf@-e!?(!6g;3#(hs5p_!:&-8J<+4@X\a6\-7b!C!_W/M]mnQ>XP'bS>$Y0YJFj_H4
%/ZShu'CC:^\!'RUm67lTE")Z5ln@%9\3@8)OZ/4FTGa]f'A3QL)YqY(@J/Th\E1[s)oS>W4i>G;I1Dlfk4\?%r_nC/Qs(Ml3,6=1
%^qRI<"fi&Kngd=pOpm>Tk%L8&j7;2l(Zu&)YL0TAa'Yb6q.=@`n*N?IbsO$Xj&7AkQO])jkRuNlnGtE5Ee^8gl9(ak*:b9rAUP'Z
%Nc36ejoT4dd2L)2`/Ms1rKf]IXtcI=>bhp3#]#Rc,3>%5SHBqOlX!YB=q]b#G#^Skd-HfMTr^40#pb:9);V"b!LQV@_5dAe-t3A5
%rOJ%_$P23LO)rACI-"jC-Oj2:0,[6g9!&o*EQ`;04[[[)\=EBud3Gn38.d:QAM:FQd)>]a;,l^k!d1D!N(:CTo&dn$D&5<0?&[qr
%iu1ugbB$\3i&l4gLWZ#8[)Zi"p(h:_X3fL"hF4/rM1?.C1)T]PcpP-u0+3h?bPZs^_</<\lU:B1*&D-jj3e[AC7$Km6>10Bq>gpB
%cehNFQ4tXY56T$S93[l9%"GI\.G.#ba?O#ZrPB5rZ\Q(TUKaO.5r#B19>Q6s$;t9HV0^s^)qYeqqfY&`B2V8R6l;G.Z:#%RZdr&M
%Xh+-soq_)n$'@&4b)`jmW\#%(PlN.0DTs7kD>#K*ap2+GG'er7>'(:hD9Hk'`&l#mIIs3dp(%";>PWZQh0clEs&>h+?PW!9?Vh]q
%DO^1L2#",J<KpKtMkCfnIe)r/G;>/SX8D)!c8fmop>^'Iq#($-52M`XC-S_uLZ;#sL%gr#/\DqSDsUCV*e3mc7O1DVAX;ucI=db3
%_6MlMY4pdc=MNL,F81,=[u^:W5NFTYL56a_1Denj.cM*M/1^(V!*?[T746n6<-?9U^%"FO"eMk:!sbW=L29IL*^L/NrC1;eSVeYV
%Nrl/qbV_oL[4_=_[IK1'8:4)E4Amt1Z4cM')a"X@5&k_U)L+Y,/_j<AM%HNn&J'W8&PS>8.Rtn<hhN44cVsf,7WK(D>1L7BmI:lU
%b>euCJt,ZaJnunp<.WT:e(N*;l't(r#4ohM72W]9J_)&#_N;d*4O>65Y!!M)GIN#CTuSl$,Ku,6Tejc#"uS\V#D]EW+mt)0oY1oU
%K,0;B$On7o^)kV$N&X8ikh`LeQ@!kh#VnY]SN)j*$6qbG)Q2XqTonbh,nDuoM"#YUZ#pg$!lJ0!"bO"r<PdG#M'4HJnIGG(K+6[a
%(TI\P)b"Q$lDpL9UA)d[e<IhESumV6QeOWCKgjEuKe-CYdDT?84OlLqC"[CpDqg*OfHa7t&n'n@H_<dG0pEK;/+M'?CX7l7.3Wja
%j4THMV,.[B9;t]H(n?'M<&aX!#nWCR3GM^?Z&gIZW-X_?ZlLXB2NJM#<b.ra-j0\_l#?t*?lu.ZQ(WG:rqd0lI"ib4ie//UWn=k+
%?F[QI?Dt^^Da5\m8WCJlFT\>;b:9a""K6_djp'_Kkm8'l.B"$+'mg:&ETB>P@A605&@ScSV[S:Ug%-NV)Wqo!MsaZ\<3$+0`lLlN
%,m47QXlD9/SSqJp:5cJ2LbeGA.bE1=5A'YDGmSU%rlcdi@3#MZ$7_t6W$o-gpOEIdd3Qn`YqncD2o%!*rm;!Z1u!aC`?>5u6oT)%
%4D#k76IE$W[:;YqCT1>U`hEnCY3c<FlO!l_KuRN%P3aE_8l9SmPtMr+Iq:WulFCmhM5>?7n2J3BKZBc;m?*N?m='r^dU3=[V2C?r
%jN1f*I_?:J-SRG4&l+cq((kP:UguknY=Ag1N+f3*_O#ApZSm[8r$D^tMig:9[KNaR:Ae[ND'V7OFm;'DHO'/<MfRD_`WsmjC):gY
%la$Z.B`AX(,Npm@)Ej(q7B%h;+neB=+iMB_HH[-.$-Qj@@`XP;li_/<WU+EHScWa#WbL9s\ITCpOfgSB*A3#<Q*X$'XcPJDT<FLC
%OF_%aKJg1&!EqBr1l>1VJALYHlj>C)\&u4U*!O%?M"M8nfq+('<DNC`j#DJs=;K"jeW@;!6qilIjHjg?b![[I^F8Qe]$6=q)+`A;
%l76W,KX$L(A0LKs)L.!+hIXTNh?1mtE9;!4<?&`Lr?S"J]mddK_2$ni<4FW6S_Pi43&$h@RKo'@oso#9I"BO4+`r#j<lJ5j?c8YE
%E>HhQa0ZK;RfXEE2='E:qbNd^6b3/'#dU@I#X]&Bn8$BL:d+l$7P$=DiB$gaJRWGVX)Xn/);k+_:.cAr!L@,med,-p!.XBR,H%2P
%GjH9R3b[qre,WM9V9UBM"BAbB>iRj81"77gJR&e/-Q5cphDA#dU/JgNZ*`h7GHin\&k!GmT1'Y'!d<OOK*EhmIoI'?9gCORh^;g$
%,r-T9`tpn&U[le8Egr%!QYfDWH'Vn/0OM@*beQ;/GLBdV+[f[I.U8CoR_54hH<^*\b)I[Q,4k<+0$d9>j`gRR:.,OhE$)]#LKQJ[
%T7V\"`_Nss_<.<K6-F<;'^3\`I-inC"#F3gJ%$5<8lJK6$Oo9e^-8Te_1YIBY=JR5W0ulNqJFBsX#XjnkL8jb9;+$5n?RR&K"/PL
%B;@!lN&u((0NnnqM0=a&:?!NC#-5Te_n/$*7LNJLs2Z#cA0TJ=O3Tls%c<AoM#a!PIUkQm%irZ1]eqR31?G."39cPR>LuX9%,=E#
%?+?Z;T#fSWJpBk1j[Afj5QnF:M,IKNP(_)Olo%9dlgi1G_S`MM\?6q4a/l:t0rH)[_(aGUa-g3;b9J]^bH8G04Tc<O:(<?e0,mV+
%K#=6OB-usmRc)O'XU5t"NY.?i*57?:&gmt5:u?7UEQS;`Pf>?R,!LtJ&:*)Df,$T6l$$H7qqI/)I6GUpgD\<iU0(_BG)GX?^%MGd
%JA5eX-m9H?0p10fAp^PI[+k2+SWt05'rsT^[Flt]=rR.%&OnC8H]PAT)3">5BiM<+`eFC#Yk$BMZYhJj12Nb&&8_bW@2o%*j5_Fe
%;*#pGVu!khmi9>1L@8MlIo,(*;#Gj!3/0ni$?&51:HfH;@-"rUX#qU4onBm0\g&%`@A9NK!!!l1W4Bcd:M:0L]F\hnB$$?]D%q/I
%$s8Y]Ak.X4::NTQ/1!#`pdW.N#r'qL4$a+d15AfNHp.cBo)6I^ktmM/D,<OVbik3]M8@3,!,g`;10mk3dlqgUIZaDQQ)K5f+3t-_
%mM]NQ/<O8`Wn^bV,("j%C<s'%8V2=+(*u"t#<&)C"P-$_FEkT$Kh5u4`1+9RhpdrfS.`'_?-gVOgmU.QV%,U)%j=3jL=OY*"la,d
%Cth=])LQsEWOP"N29+)+l(F2XAA\0VcJNfYmFN-0F'r4VD7$DHo2J6E"EWUO.b*W2XTI&A)i%j#Cc9+k&7-lk7/A#\<dW!U9:9La
%E3]%tI2LR+,^\^KdN9&%cJ@1?khp_t<om)fCZI@3S/4rm9b32^_sY02FY!hhAX@AXk6a]3E,':^`LC.8beP43##tGk`(](+q7K>"
%(`81rG@Y$>PWPgg[s]1k&^F@!WKk6b6r2/343ApHp?rAl1mI^+oI*uW*<BH1(H/kJG%qfr:[<1^k<7R&!HN?pZ;W10H2ePpgW4MP
%F%3%"%Uii#alMJ&&,p1JmJLJKR:0=aL'FUFC]5"$i8^dN2'En^[*c@@3m-3nl+JtZ/NpdWLN-!/lJP!,TX2^1mIna1m-%/E>4*KD
%h,IYK!*sX2$Qf)i`GH;:$7MGb*S/rr2H(UA#cdM>G$*/<NT+5+(doHmbNL(f3!#n&K0:)<;41GY3qTupiZCZY+nC0YX42:`$/TfA
%V_VtIrqshb*'l0DbETI-<W^ZG_[]RWL>?u&iP"Z&eGMA4<;P;@fQ_9\]R`X'%XQI$q([T4G2VgD.g!2p7O@X+k@1Ya@FJqUSc'`5
%6W#[[7O4V9d2dM<04UL>DLj/Q*@J']ZPKd]1Km6Yr8["iB[I%BT:-;AiIp&9lshdI5VeXMjTjn<31U%gc3XB;ArUH,1k^nnMK!U.
%Z>CT33+%pf%f)GH.8m8t%b0^&oZ'cFN50oP,taK;=r>H.^JFh#.M:c.AuXEL&,F"Q)!uqsG/P7JNFt%`+5qBeU<&m9Vu`_<cVeb_
%jm5\-?k(./NoYgrKFmN`?=jqDH0@@oRALh-52E_;\N;'[1^E*tPT[Tc#fW<8;aPK1G?FYqI%/$3In)$85R_V%dV.-R-gFtHUDo2k
%a!1S7&GsMk?I'AWIVAo=jMhk+J+_%5&YBg`/5r8sG8L6-Emf7uHak_TW'+;<_UGl8i8&8'a'?d37Q+\U8/3Su\X_("k.t\:1`2<_
%mtIGFor+.,_2!?%K"X<gRP4EPq:Z_qn$1^)_&J+ZUZck'?Gnr_UTs2#.MY6Z"KLtE:8DO0djfnM9cmqd0u[6Q8BbuG78HPL9l8TG
%('B7oQ4k\,0o?nN8kdtofPK^$_ca4bVZu0YlhoIf8dM3U04$$M89Y;^;+_sL9c6,)]:U@XD+c1%#dUAG`Mr)]69\C.4Mmd^VPYAX
%-&8K%%b$n=&IOq]k7(:4.T!BQ>"q0(h/ei+dOdKg$$[N%)"+u\ldY8dDW40@<`!k<ctr92TE%f\L74l)DN`^%f(2%^3L:4I)"DIt
%$VNJ8=AcL;Q`W]c!np2sYp26K<HDn:RK>ajY2Tj6D&r3sJNsFfjg[5`-a6f36')\Y1oL@&C8%@:EflK,7ZVpZaRN(1e6r:N-V?ka
%VbG!ch(mSQfHOrZO>oFNFh%t1)F0u>>LZjf;Xq!#Fk&3DFngr-LH^#3mT6/NTKU%s>Y-cC_[8$lB9E2b:%A5C^&:Ui*uiBZ83sZT
%Q]AaWH=gPW1j3\Z'1]l3VRB9hgf<nCdQf(,+12(ClO5u7bj=B'rMR+!gU8=7<^V>h5+;rY<%AL>F6sk1?S;=#<m9*,a)BT+mq:s9
%%f1#HT5S?8n_X8oKsA%U&&,i?rCZs0FcIH\+s,*S2M+%c`gKobrbNS1T(Hq;#NsgM@DC(Go?H&ShV3<;j=$.K#<ug7SK[<)e%LUp
%@Bq_64!usrGLfuQ.l2C]%NQA;kMl3Q_repZ.KT'V$D2g?fuI=g+/kS;-9914+^L$+,U*N)U_!ZsCikI4%D"YVHU8U0l-#*Edg[d9
%A=SQF(cEFhn.4(onL!J`nc7=-3%?pYJgQe8D(6$>+SqnR1J)25(^TJ;?.1q[l\B?BFfW?83@Q;S.M*LE>4;V`d"qK56N&nGo^&<Y
%!E_2CAKj1j.OfOuV,iup\)CYlJ]8X`bT:I&3]65UQgT"g[c>-kd&nWOh86uqA6P\-Y[r3mWLO`-^Ol'!m71M'p)QlXYXdEY'BPP"
%9?mh\B9a&T*:Y;lhSl.u&?W5+UVMqJLCSMSW`-YOREY.+?gO[8Y8G.]-RHDMW^-M@#F&U*HJr-4RpThU`a]Q^!k'hQN8b8dFaZK(
%IjA2_aUo^n$a\qr7b5pn7`663pUM.nGV)If(j=tKala!ZEfg/=eEC!pDf!c-%a</tN<;$0B>mg)i,Bpoj].KjN2S_XFsQ*lW;P&7
%^VB<i&b@j-cX23Rq"k?NfL"!,p(kT:#CEh'f9'DQ=8a"6"lO6_B]M@m2A(UH=SrSsTO*)'7HCcXLj#tti4;Dbn?=qY*SOo.4"-/Y
%`MH'i9KQBO@O31(ND\AT`O[Tm9@>skrGUdY=RICoQVo%a^.<5R*oc)01e+dc=>BQner=VHLn(*>5g0]=V&QEZ#AkuL\J8jqbJ]G#
%pj;ep_1dba)Cj<[1j@5ijQH`@_q*L_)#UDt_om?OLp<aXErj_J2bfNt9pZi5<!j'];KN&Pm?P:s']*P:fr['H*@/s!qt!6#59B.f
%Sg\m'!8&uX@MO&9H""J-<bc,P'N$043%U$2ggeed'#ru<m)Xg+WJ(^ij5s$HU7*=:('aXAiiBQqJqcQ#]5nIQ#f.(NoDj<NY`'@_
%(1K8-;n<"LgRmZMJmp)3`##lH<^S]`8"7M,<en:842-JgX9KIcW/mS6<N[F\8V&I\-he<i3+rM#6oZ2JCJc(LZ2'%sdso\T_apJR
%nY*so6F%k[-k(]qD-WLk)X'hR?0UcJ#/#n.G&NrSkm1WcT[TgjD6X.@+!=erApUh(Z-q!MWtJDaBpa]i6l@0Es'TBIb7PR7#.H7!
%Qk!'/W96XT"!;95)@Fj=KW2hC%$CQ2LUMX?YW]]+<8(hl6N[t7Ytg"Ui2Xcid?b*2qLj$])48X%m#*b`J/#L+(=>iT)]4!0%^=$C
%hR)6!o#Gq3_;Zt48o><g\.HWu_a6-E\DqTYaVfF`5uofL)Kq4[>XcYXig&sM0M.<:&1eeH+l^<=L(9r($&o*DU;Y?7o<AWXe#CS2
%HOXG6lEB0T7'FgJShG(HC</eAGZ-r'>RqEQ%ClT2^jEG#_Z(L/q-H;t1^,'N$s/#O-3eC5<gC;>Up>s8Xj2ZoNk1.iTHVZo^DmVq
%#93_eQ9APD'RiCOK=FnKpfr^2^*-dM=NouVM+n#I'p=GrWX6\S1J-7;?UL$1-&ORnh#*bdP(SVV2(KE8]jY9V;()L8JlNHa83!1B
%2%ta8W+9o3Tji7`,]a2LTLa=)0mC(!EVt,;Ej*I%[UX7Re+`S0r8%ABhO_Q&VbUX2f,`bp0AR<7Z=K#B#2&mM)M@LIr,()a9Se\p
%M%bA`hH(ET/1_Bq75`)XCnJ7h&u;SIERT9OR[GDqTF'W:<]S:-?F=J$N7EX</[hY/K#&p+3'hbcQ&iA"0)OK_/BKkIllBqs8$YZ7
%l]2J/LIMJqM#JT.J7d]I0I_l4YHN%LgNF7Y@[m+T`u/bGie87<m\mM^`@`Q$bD)PBGWt^:d!E9h_%)C8M8BlfbM$D07/U`efuMqW
%+S([Nhp@PMg*^JXXl3FVBNSLb@VL!;Q^cIoTNBM$Zi%V"J\+;9p>D_U5ke6eJ*aV?q<1=KDhd9_I+dHJ";"RoDiDqT"I3u-\_?KY
%6&ku-L5M$.XmT@Oc%9Ybr(0)X7Pp7e'Ulp<!6/-Plfb'Nr;t#OQ/j<.5;_B`NqPthL<]U<W92_q*3n8WPE8Fh8=)b;f^+AG]^h3A
%"8`4DnKELD3PKSrB6_nXBkG[)]"@JG43bp+ajA+'`@B7`d09h2=@T&uQH!fL(qO"9`[)[d@3>^TN^k4)/\O#US'`*K#6k\:Z3(ah
%k>!1[Ho.0I"ZV8r](tAY(]('3F421*@j=kFZB5]9pnC8N/?DB(W1`Qsabrac6?d[>RNiC#7r^;p@@3E&(eQ4s5N#cA(e?<#o9lj>
%]Jn7mpgqaU*>E>!5bD`?@8I!<Y`P*\Cp.8DJ]<BL:f4s0IZgmRV9Ee'TR8iC8n&_^h*j^ne,97Y0=g9T@M3BsZLMEnCiq$'"QmG6
%DZV2_NVi3qcetn6GWOoYWs[:agiSdFpJB)S,]A(t^"=V9fO8Q*TP,3;rW!Jn,Jr"O?36ERHiA:fI#E)qr'%]M1I)EtN.2r;mD_P"
%YUq.9P.2#8Z\pig#UobkXhLje,?Fr?:3T+qDXS8!:HGW%[O?9K6RHh5;">RZa/_'E)7JgW5\5^$+"T1qfiqQ*%U$s\#nrP7NfQ3-
%PtCfY*[-Y*>T:Kd#pU`,Y`<Hp^u=52<YR'h4:WPhRuGS4EiW.IfN>#6?72bgLTM)InggAi3YI;7j3M.R*4q3D$lS5/Z3A`VN\@G*
%HZ9,Ub6S=.Z$lFM*l3#+B?Jo#F/g.6;BK<We:AMY%Q+/W;.l"]OX#ApWnL!I%=aLE,&rOC"Xbq:o#MV4mlW$2d%AsY@!(?Hp,Vf'
%cs&ht"7XDRg4640Z&5V.AadMrXh2AbA["/1hMEKCjHM_)\N6+35r4Tl#Y4f)%^aMj?[FF1B+V7D&2G\Q^gZc0a"sVhj5_4O%8M<$
%W/&>n)*HdLZ(_I4S"R*d'\Iaja/+1(b?gGM!;U@'YEe%UTgDCuDP]B`"cK+,8ORN;["$be-i;2#PZU%hZ[S8!q3'1e"=qDeDBm2,
%<9Rn"UFfh3O"'?C3[0pg"=81-SY1_"hZRL`10bugqbtUQ'aJEMIL],P;Q_YoP>Ph'aJZ:kad@1@TEp3A):u![A`K%q\%LHm7G,Tn
%1nYgCE^V)3V-5ka-E_:fY@iOU#'L9AH8SP'ji#PQHJZWB2SPco-T6ap9DAN64n^n,Tc$q4$1ZW1OoONeiNJ+fT(5!eSd:Fr>NO$J
%L5Z/fM#2<]42cl$(VTY-[cGd^&[so^.qC@Edg8e2_X>2IJ:@INP_(2t"LupZg^&lhc1-gjh*%`f2>k[AQ5f8CK5AAp8#%dfYh,K<
%/TKG6<D5p0Kjpc`>q?hV)$0itc"C'$ab)MoGTh`CY?g.@;9B>):/d2R0,#ecacaZ(LiP"_!b61]0\[DC&7G?Ph>('pWX'/C;q4B?
%b&G"B/,`!%2#0k?d[+1]]uQ2=/`f8g?s3;KB-^!Z45[O^N;nT[msI#:n(4P[>5TFRE*G_e3^7#=NP"H;['c!OYuB(fkCuD[;XE-c
%aJ$-TAg#Gm8Fjkt[USBOC[T4-X9QgR&pE')8"L?RC_?/78dn2dBTr"P3dbO2j#/J#lqMa[F@S7[3`H/44mWL$Xg7<^@qI]a8Z&lR
%K;q=*WU<UZ%:`n#.aMM!ol-^<=#4(VVam,.r#FbtM(\pcjedh=Nr5QWK/'bI@5$#NOiK/HL(auC1pY^5``8%orc/tu=1WE)b`*3Y
%_4JB=>/rQ&(FKo^i-%5R6Bt*8CEFktp>E2+`<pN1R`6l4[,q+JOZrOL$5!#.<.XG4@u8fl1`_FYhuN0Y:,)XUoYOITm.Q8'%7^fm
%1U0Pl'CgO6M9=W/g%M01LA]JPDl*jHUN:]1O:c&O*_62Ta#O'Ef4d8qX0S3chS^'mN-6sXZni.^R;_J;$bi&'Ek/TA,fC+7s3*A]
%.fF8bG]+r]7E`\f:'Q'u0ACn]Z)stEbkKW'!eT:._d(n]1n'Ir(\d+P+!*:XI<1bRb7m.t9^UlRSTf]f>F5:[b0'XF]nVUN^P9VI
%<-nB>9Q09l04R$,]AA[A3A8+m`U/G9?-f_niVOTYhotKJ^&=jDFuKC.Lim<FH9$]84Z<%jX&+;n8mfBe:DoE6L2i[n+td3J`N$l6
%?-b=nO2&uuo?GKChV7(&-DDjMSdKlA?a`b^/'Dq.I\PAC`Z'%ljJB$bW9s`7`UgWblXC#K^CU3Y$D276p@7"b]-1KLPuA5,]fq]g
%[S)ksp8DF$>,N?17m=H*2?T`U@s5WdIdN32N4=B8p#eQs9^C`PrD+aVoIC:ac]Xo<CR@aRllr8P>OV.%_;I_i??(UmCmgi,+=e0R
%%CQ()%CsV2WCI528H@)VM+/iaO(Q-k6uQVU),I>=AO3KPGbu>MNf`WNN3p?mG/%fS?!S?P2kuM[-TDH"Fa'<qdNcu_]VBmDLGiVF
%Q6RqTTgUW!2PXI&L=koM[H!jtl0!<=<SaDXBt*B^D:L4ge2GMG7_]MMmXf>n(+l8R"r=``N7X;Y,eH+O[iQ+&MWLE'd!(R#!pRH^
%!aE;s![r[oTU[YQ13NZfY:,e=QXJL0*N?q@F]QpVP4Osn%nJb#fLu3?)qW!p)<mJS0gN56TQ)=P9X<K4SlGQ+#P=f\[&MJR35Hf:
%5ApaT*jk+]/K0rgcO7`-q&`-?8C+V=j2@I$'G@bN7)GC0kAb*3SZ%GmX@M1".E')lcjPgSZ.l!=2n$4`E2\bO\Ct?9M6Mu68`O7/
%RDCreqeE^N#VUkd(OPF<oV9VgeGV/?_<PiQSA9M?+EU/eb:+Q4(A4PkEL+,jQ][!a(nmk*M\Xaoi.P]t!/eZR<]'\`29),=:Z`I=
%>3#ium\.N':<I&co@g,\#ArJ"mHGe\^t85bOKdT:Jps(A5;MZ">5N/e$OSpjTZ>&q._FS->l=F@Q]4;&`S1`qMiAe:gsWrCN.<b?
%=Vtoc/p2:$Y!;*r9h#?aCnW"4//?#`?=mhJQ5*bH8THhu?$8G;ZIb<2.G>hV$ae2&T[4MCOn<s-GqZVXji,kEU_52SY@Y@&:1gFD
%N0KSQ*E&5PL1h\h(F4i4jZW57bq%fT9&lUnBL)n7H`,Eu4-u6kJ8GgTUifOS8"X9cek$F(:Odk@%acgDeM@J^iik[PpfjAqK>e*H
%@V"j,-T217N](_upS@Fp.($fMlBfem<sX"\0?`DXY6R#!2(^T&UZsNWIDePL?F`)AkRaKeD@m(0TbKa+]V@n.!kI8NES0i$(6n$(
%iZ-H3MWAj^esu4@Qa)>a@GF!pe_/,PD82rC5'?_Q:<3NXX4FDX.eA@A=]3Pt@S8GjX&?'RWfHAnCdLbQ>hH1fdA864J]1u6r8['&
%J>0Q1Ob+k$HCJ&A]$qPjX"X.'kKS_=Z9fNSBMZ!FTY>B.%L"LTF$T>!*%KJo-/=R#eIDY=LmAEPFkT2OZC?'e(1eHuS/lNoViBb3
%X57o0:!tfT5U%_369q$oO-T^<3cJmP=C`"HK<-_?+$lm!:E+=#g0f934rtt27b.K="BD)pL!-S'I*&W/)LK''`D1ulOF]&Y@is\>
%3<DVV^5T8u%t0OKW_GR$&UpCX)-BDL=E/p:nWa62\2Qjm:pelV<0G``c5D`?6o9d)Rh-t.)HpJb?$[K+aS]B5/mA\Bi#eJ8]*a._
%5VeMW*md9RIF#^ZEIf]14+P'LPS_]Q'*&*Lhi\B`Lf]MS"2%e`Bttr/`bW>XT0[]W?%hh>9nCkWZEM'YbonDF5usZi=[IRgYg+b/
%CL=FiC1o-8hM:l[H?:gW2F7QPkB;rje$uO*M3DV-3s;cn&:)l</uPstM5Sp4$`:2>i>tSW^="!Qg;Ao11_,Z\+BPCk!fY-rZXpoF
%]XS]UDUdTrN@D+3$5/\PYHO.t'<b_2hOJ)9/Y@YkTh%i;N4aq;JeP(dKoQZ1,.dr(p3rV#Q.C1]rYI43"VJjsn@Z0eH=4(UD<4md
%FisHr.t:_=:kt3Oqis\Pq<mlHodb,G.77i&Rf2HpXq3u3q^TX\AHHmoHA^_0G^X@5`jY$IR!!Ll071AJS<^Pk>9/n%1-1DHV\X5;
%ALAND+<?-PL5q;.*qYii7<J1,`H(%;@j[6HD<@lPD1u@=??K(*iL;*JAi+:X[*<"sAUNac>Z#8;IijA+fRauI"Q\mD.h#:#BYn5^
%=ee,SOX5gJ%oF+lWs(Y=')>8/L=+t(j!Z(OR(ioG/qg=T!L$/q^]Wa9_%cUZ)K0Z%cKH8^%=&j8V%9iEY#&Z!T^[u!@"VfZhP,j#
%n^d\%F$5`(1sTjCN\i@o+N.`uU2Ve(K'%/^)30;ipG9V9;;ICiSdZ(5=&a?qgb;?O(<5',Ao+2:d<-X1^HIPH_R6(k:"WsSqA@`+
%?h<fuZ7?SRJDh/]&)!i.`1Z#&-@-lXKUd+fJhXlg?CP`".,BE"%.,;[e>IeE%<@Mk3q)UiRC;f\J"sgq!4+(V,A?A&m"*%]14Mc"
%AOn@qmpR%/Fkis7pQfMpH-GeT.MeS27D8-*?+:VNK0?K.(%TFWU3Or)&#'ea8#S.F9=1j>0Cc2Y1e&!I\qjoZ[cbrbmFG>'b>Xe6
%KY,%^PpKSTFr]ra-5ltC<8+A=9u;BF#8F'[Ou91q3X$CVCs[%?68.M.7QcAoR:GD2Lo90c=k$/A%TPHB2TeqO4I`eB(:_0$a'@k/
%Fg5=/SRZ(W;O!3*G()U(+j'pgh&bOu!;T?aDV(CHUXt=V)X>EH>=gte%?dkUdU2r8Cl%-<b]H:_G9]9qP?1'"d`KAjLY/);4P5EX
%</ZMk;M6iCX+g$\)TSI/dsSmF/tJ_-ieW$@oZXA,Ebqg;5k3])RC2HAG"*9H!VL/<N3<$f$H.:3E?q`!M_)."61bNEm!3SfP'X/Q
%H_>tDHVqQ4q''LbrN#JgqVm\l@g02*1\2KNkg5BYi#V'g<SEcYcBkCTE3t@uWLE;=l9$%!Z"=J"Ku\aFaqn$0fa^i8<GSb"BShHJ
%an5_IZTL`u'B_"a=lWZ%$;^.n?,@;%(sBV<k>IO!QJN+b#A'!L*Z-l$jT4Y&cPJIamPJk,K`fA&dXeXS-/oBMK#9QY1oGnaG)i#;
%EPG`e^5eKqD]X^a8U#Zu8V;N*[m*%''F/<s95YG)IjsPA7^[Z`rl7FXF`MQr/)ujY%jPhLp:SqmL.8qQ$uqo#/NCqJPj?)VUH`Yf
%]ZQXA38X@jL\C3U]ea,1:?/kYknA!AGiWkG2:IG7GNAUDGf%m7U2>-dTUL1%?CM`A6(D>Q7D-rF?r7j*1W!FCa(&3JfQZJ^K\`q>
%^3(CX_u3'=eWl3YLnLh!e0lagLIEHo%,]>Hc[5+#GtiT2D$J%GN41>knC)D435G]MmE)t"/]m9E"HOGf0r.,u<,XADb9$ZI&X5tn
%G>_WS,)e?0'u*P7YrsN!E(ZW"Tl8PMOPLci;f=joOW?NHY:e,g^^ogE/I(?M3jV.%!jXaiHNZETI=`V&dtL@WNFIBB#u@H8[?8dA
%S/#a(KLi78B2$@W%u!JQSrWZCi=uB;*,uuCb0*Am]ak$WVFm_.UF5S61>eaWS<T_Yp*"5HMo8-=$VgS::f/W"MN'lNm[HPT'e'Lb
%fARUb$*GU\^e[BO\H-m-oLnS+CQ!4;HllaAfCqS']fo[NCu\DI&1S#pTF7VlVGDe+&#DJkWS$M2jX%:/O\^(&KO6,M4r.K9%hd6S
%aGs,#4.3!tra&AqAVjQ&QOL9rI@V"U6"PYLb,m!n!YA`+j1m(5+XWkZi\06ah.j*@/%.llmgJ_DU\0EDlV'NS:8_JhC%cXDUiG@R
%VQL\JQCK[=(8*^!%?P-+TjX"QC[[B`L[cXJ#J7koaOZG8VpooAVToBBnTl8,W4MJcl#>L<KNjSN37V*M:n%=8Q$FHAmCeI6$#sbJ
%_qotL">33FIi([[c3JHTdU:0\\Y[UF(7&U``S\d$p`kUkL#t^ZTUmO3E_F\c&9(CqeXbrT)6-_f-E5eJ.C%Bp,:_Kla@IkE]XEnZ
%qN@_S<($;^X+&/C(%#G6]/CR*<cMhQN=jcdB.i>S3cSU.\*n0g]14?iHh2uE5SoREakXqF65o4^aaY9OBC%_4-]Lh/M`Vd+_It#$
%Rr@Od'Ah3WS9Wc4gu38D^3bD2a-OkLcRIOk[,a^hitgfML=Eh#[B0,7:dT3&EbA"9p*2?1VH-J0(K9!@Ssi_5=/8A8XjlVmE#:/s
%6*5dAi<D[Wg0%-Q,_3;j_ZY2e\:MP&LsD\kR3\N`<HaZ,@i12Zi5Jm!9pm+BX*+LnPBhhE[Zbho[_Fj:FSF/s6sgtS-H2+LL3#g4
%?c`"1ZQAi;N6n1/Ct&!-m>L*u%pb^C(<!!E5rgtS(hfjS(lPa5e+cmeQ!7^0Y=G/!>nnN9dDFP9oBnaVnlXY*Zm_+0gko5?Saj>n
%,A#Sg,u^(/)V@LQ;goQN,;dKt=/G^[TU=8^Xn'@DE#M"ACeWroaXt$m5%7jg'!ZA/AeM/Ff.!M^1Zdmh%mJi0^j?S=p48IIe57=T
%O/TDgY82M;4gP3rJiYEPNDl/"Gc<h6dPiGnYWF@BKS7;\%5t+@BX_C(p!:IadhiBn)I4=/L.T?NkT3dHau2,uU#m%K;jO_DF$g_#
%-K2]f>lZfc+fC30+4j.]5H_5mPF8+Yp_ncFQ,:<qe3p3<W^$tK`K>$jH;HLH&Kc6_k--X5g?bap`Y!nKh]P]>4ndh[e4RPq[U1o(
%W&5c%PY6]1TSQQ`Y+Tak/p>g7<4/pCHn"7.S14\=@OW+J&AAPL13Z2R7)sa+_HY#RTYi9._omQ%7FBLAhs^;9ci\[)J%W8j<&UY@
%m0T(7c*W0c6tpAEk'Z(B0giJh8<icac"n45\*%4sn@R!)(fiYImrS8O1UiG>G2LRVM[-#GeamrP#"j70QJbnp@9&Un:Bj8T$Q%P+
%Rb=n]ALXM:%ur*Mc0l>@Ho&$gp\(65@!Bjflp?U#QgI4''HC=qd480X\A=E^3(NbW1=l8;h<QO4rUjVsMZ,g+pGmW8RG5c/qbQUE
%:&RClmTOL<LV58-X]6`-N5[L_X8T:2X()FIE)!!$%q&UJS0P-3$p/q9FUk$^k4\?%T"!/`B$El4jR%Wta1TjncONB-:dSt^(<=QJ
%PMu4rM`nr/;145WB(5V.AfpL/?><QT2bY!gRS3$/Q6bM(S:UWD]7g-nE\Zc%ZtGfJ&,klnFVXj5jL:c]Ho%mcp\(5^\d?C+g%&OV
%4]LIQj362RK$P_g'ifjASUn$oi^+GQZD=WG#0Ded%hCao@AT7^I1Dlfk4\?%cJ(XU;@0;IRhe:1m.S=%W5<:;_FLa,0X>nY`a[-m
%!Ci\&+?2-!mJ,X;f/)]Q^Wtd/c-/B.gMo$cB(;4ti0Wh'Peg*%=;n67)]1s'"Zd;AYO'G]bdN8&/p7eg.#KhSr;VEshs;HRm6;Tr
%r9iD@9(PX3r7Eqe`eiZj=T>!)-+(D(?Fs^(P/cMnjmVV#,)lL('AHDTG<Z`ks#idGB)[$jregD=B4r4jkcSm6U[J:46I"kDkfbrr
%CKJLk?$ch_>3>:C1GWc,F%HafB\Ybt7:pp%qU#":)PBYCJ<7SaTEW\C8F`i@h^*!fbF!%!;/d9d0p:&mn\`M,;H`?oL5(@pbmC]<
%Zk-+,Q*=o!B\E1P'N2prVZ9)DlH2u>DfB9ib1E!Diq3RVeHl%fqpEa_-FXZqC@\l9ZGFV*ZXFP[0eU9`E@*G%_CL.7Y-d))Jk"5G
%dI,dCls9!u>NAI7:)fIpUiAVYgdh<E,U-c\;^nd1>kaaCLE5XD0X>aJ7UXWl3Udt9B56rNqbp4[p7t`u0rkNF=mOPhagHjAfnt[[
%8<'_7EX+*n68D./'dGO\PFM_&.iTGF[a9$p1D]_^?0)M-@#Sn8K[VU8j"QSrd.(]#fV<5Il"jAX&X\f<Ur#t[E1\ZU0Q0igZIg4H
%4NQu)@M?DnVMKI6/_C?HDm5>VdLk7A65Ti'<DZ*Upj5k.mG9hn)R?i+#^M2`-g7c'!X&S?.WgRf9,lW9i3"+aBHb?4Ks]R8U4SoX
%g/YQf5!0VfI;%TZMlB$4+:5shH,T7R1h9ZL3LL`7W/`_8iB%rH?Ou0RQ)'g+cl[O4)f2U!m_jeN;+2J(A3-_q4f3ak>%'W$\:cUa
%EMSm<$"SsCmY\(VBmRJM)C:SsQp#.B)jZSl<p"fk#6cfbZLf(q!AuV!OfmNQVFSF;Q06u%HR#\O;4B_5*M^>T8\]NhXh(-bcRr0G
%1?aPbq$@OB:C.ukLHWtfES`@^[o1(s$W1^+Z,goBq^1>;SJ,!c5X8;WlsX3dq^Em<]^Wp1L+n4`,FEblr)/Ke/7h&Ji'g)%E+@PA
%NVlfL`-05aJI![rD.2c]\J25I"^s(3cp#6d.=VqKeL>)qU@7)m?)(CbcP?+nR+GmK!`T/!1?p,b`SL[)5]PM"d]]*.ONkX;17lCd
%:IkSdQA!j*Scs4M>sr,oe!*OV!*oC/2:=bJqnFL[_[HT--l5m1_EH3`(<Ia.K34Il7Gs'71K0/UG"=Gp[Wq3'D0:&(-S*&Rn8kQV
%gW;%^%9Qg8Ns.&U(L3C8Q-_CiZmoV7=H2V3#prLY$$+G41>C1M\'c4"eC4m('m:*s[D=/;&m'6C&dL80MW_#G4_"VVU+&Rf8?J:P
%;#!/]E,U^iY/+]ma3+L\8:u^M$gL+ofoO=>pG.Z>:mWaEZHUQ=TGnm"9dY:pQZ8!1/-)0`%cT0Q^pI_d%\`ukmE?8ToKZ7E],F)G
%UFQVW0d8VGp<_S!M_Yh2.VcdV%@/dBcSL7jr.6k/FS(b\FE'tPkV%8o1<s`9FeKA=3%_TXB94Lbjt8pp'_1-1,7kWknJE!q:?sU.
%=/ks#cJJkW9_l=2^`k.!@&)'F[\gfpP3K0698TM/l:f\7Cc^(aN.Pimb=H+ZA$K=-pa-<jZeH.a#D7eOJclFQ/0ih[O00;V"=X"_
%i](,g5E9<W$lJ<g;F9(8,VGkQ%ZOc8n!@ilg7!?O<7%ZSioZTT%4<I5B"bTPB7+&.>-6K`S**GeG)cp+MPm)MR;[9tiuduF1h1lT
%*eGb(F'.4=D/.1@88t(2F"cF<%ftO+@d?eE!FAm&f_0?8>%`-!p)mO,n6<4rEO=r.#JJ.oaBs,?"2UU3XT0XMWFLEEM5__3"9Ddn
%rfXu"20W8_WH';Z9OB!B?tKBh(!E[(lc&9H*TNZ'FX1+.9mE>V\.N7t$B_oJY0N&NUS/Gh!MgHtO-'^,?l#&BhB_E@'QH(oBss\F
%!Kcd&32lgN;P)f)@cV0EBUmt\Gd]a`J5CAqb>Da'?-ESdjfDX,EuD5p1P=-NG_9Eb;-lOl_,>[R]W.ee@@pHC,U=q2%HIpm_U@EO
%+obh;T*[!"ICFS4cc+qgB*>Yor["rF#iG"kn*LXp-tFUR=TD2T-SYZ#<$j'$o#/mO^!2*0IEU8iI`T,KA];'E-ge16d4t.B\a)im
%m.mWFpB=+[C"_=i'E]GQ?!k7_%LqF0\^QqA7Q&$3]XKNQT%2B`=/*_X8:k(e!;tNoF7e4UGL[>mB_;5&GLaib&:R4tGL+kf<V$kc
%\#'%j@^[5"9iOgpj714mafP=-8X<Bi1,lAGYNpHd?:S3i+,PQ<`Up&+(gS*]6%0<Z"dC"cN%INcHed^V7afp=9+]L)>p=XR^2?`>
%h5Z9Cf?TOOcOMDlbM.g/Lc!mpYEWk0d3GAZ<gK;B"eoD^41cJ8-):!jl4GrIPK=VEo#d2JLOGc^PFF+94GM#-IS'N+)GTmaR!uI+
%bZ\mO"Z7B;'(F;f!"=W*4;&W[]fRaK%=G$Y'mJ::re@]'mQ'VI':Z7__Y=\#cbM*R*::cK,0nkiWN74;ka%'^43fX9I;@O=qCj&d
%SP>Y*3&,]u%o7@Pi!K*[nr@3qjLi&G=[,p\nG:'d^a!3HHgCKCSo$-+]5%/:5>g5Td#CHU"E*(7\"e!/p9eBdEAWcnfI($.%^89)
%6VfH)(1^VU;67T116=(NcFAh$Wt?pP1G^a_[3$*2YerGqW>b;*JC7S<Y1k2:H,s<JIHWg:Y,^1l&@H\Dj\E:h^)gt^9gCI.oMUo0
%U#-;TeB<UFK/.>L,GMbuNTHkdMtSLEK3e"(%tVN`aD'XDG$Y\FXd:iRVW9KVB+lOpi-TQ2;597)BT#m0-8IS+$>?]plqZG#3Z$W3
%CjHV@F3lOnY]=j*3$1e!Q^05)`9<>^fj4RZ)t492b%^rOSiOT%NWsL[2T.@8KXjO;YuD[]E((NR]@6\cSKO"_+!e_H.cUi7:U!aI
%7$69#M$N%9\us0R050?\GDbTRQTqIU"YHG%m!bP$=@8MIjZ^*o%iIZKitfBpO:]B"Gggi2&=FuYD"N8nR"ZK5#^I*0N2<b%2s+`-
%>`OVjYCScp9&WlG.Q4LM7_tPb.Yui_5:Q;j/L*hW]3;aNO:(Ob7oVj=[2ARk@&ZAi=1i*k5F+tsi0:pK&LiR@Z/#t'H8^Ih1fUMq
%1$D])NMB899C#h!!a#+fNI=OT(JKtqI5UeLS#_Bi%2mnTU8ta"*)TpgruLW5#":HY6"@hh!.ep*c"C?m_?Q1F#to'=B_k:Q&(2-^
%47?X;s!JG"@ltog&sJma)^h/FX\O!o,ap+I'h!3a:G_f'Hek^hS&rY]qm^?>12WPie)ll.UQRL`^(eEmq$$](U3T=(4,id!69"JE
%8)K8GG9\c$Xc[I01U"HZrL;KM9`*12FIeRO<mO'3r:mBf*uYuUaCdtU`GTj+3tJf:1pn6LN$RW)T.Ol9;kmf6]JbeC`<RUTP^M>9
%4[l)c''$KbqleW2Po&cgW)g!)[Y-`\!&^0.4#PH!>^TM<J?`/fi>lpe^c:[>;V-:\,6WcGIW!s=3G+sm<362;>;Eil!krL]\IpTV
%W/(K750?<t\boCV7=3bMORcj%&*,9e7b)p(6T6`NXGkqB8c;.A!;+p"g0JU?X`Kk+>"R,MJpek55h2Mf+b-@>,9m>L:WV6o5jUOY
%\W_UbkG=?1+<@j^f9E,e,E(C7<^XUB<KSjO!E9a779>:\kW0S^+!UA!,7g;Si,_G*[=mPHW#bqWVZR1GM(8r&Tb:lN7uBg(M)Mq2
%Ia>IHC(O=#ZnQBl.nMe9:bj1dP,\b5OLB;KjuISu>'s&#A`g6bED.7u)7QPT"+gjf@LY7m+9q*T(-g6Q6@n1,g/q6t#/rT"Y)b];
%$AHPk/;/1m+t&QZLWIK,NO?USLru0=T`#s(D\5R0]e72->hOD@(0$HK8KGp7j!rlEfSkV\Td0Y88Z=CE\=2bI=G87C"Ups7Z's'&
%]UO>hkCBN;/CWqOCd]EYk")8(ai3]T3+gDU!RsM5WH(JM[Kk3$(ghJ8,#)qW@;Oc*7*'&f/=3(:*#EO5:EW_#9V?XLLkJ<3RedWQ
%T3K:]6*nLZH;uD&YS6ofqN%RD8rl.if:DXLC\0#NTgcdNNST+7B7FW5Y/tV*AtPCfc&m@+RjbF4.'g85QRIpS*:Tps7THZ3SW&bb
%%]nMTd?F7$aLKiAOIXTg-.As5j<![Fn-HM`s#/**lQZMOP#.)U48M1(L8MgERF-0J!bf0&n/4Y"%/]%IW#,]B9HoN=E01'0$38s1
%[h&70,o8hJJ;YnmNpLS1XJ?IQb2anQ>IjFc0TS5EA)=+/N`hS;OPa(ak4ctQS]E>ZR48%2HNNTpXnekE#Xb+BXL4ZHE_"9cpli7O
%=_]@tqocR7HS5PjNXHp&Wc:cMk6R8h)M`0TEH%$<AIb>Nk4\?%r_ns"h's/%Z;s;e.sjn9kYkG0\hfKAUPGi[E]Df-bq\U@o&=ea
%M`lZE^a$8-^Wk^.c-/B.gZ.+_%Ag],D.:olZFsd9gnI,S-gC%n,6L%r2`KN)7Q72$rI4-r\5"Q3YD*t*s#,SW2cKTuD`9-1go><[
%Q;uqQZsS(m3#u*fLAOlWWC#/G/PdXS'P[ZDQqkWpMsh/c>OETNI\4O@S%3s[[g/BVWb<8&FFQ5gMS;I_UIZ`oMP6KY-KW8uGn:mb
%U]'64rklY)5DK+pL!RN[m,P5D!CHc'3W-1.5,$$M&khRAOV/l"qJY>RLb3<_L+_]>UTrSK-AE`i;3'Q78fLaRiP1(2J!`IWRXa&=
%rtYV4Z@0(g+\F]-C1[UqJfs["Ke[(#(XJ%!l@"-L^Vp2W\+\IP@Yh.mP/]b#rKf5#S,MB\?!,8L,<4e8QCa<X2_)9c\IHF.0M`FH
%@2h(o@L29NE`fu5VAe@MqE(Qr!JaOnRDHEsU?3&cgkI%iC7ZU9MiE6sRpH@8oMk*=,i]jf]>s*Jd$7kdW]YSYC.JmTP/+M@W?!O5
%%diI:hC#k.qe"a2,Yf_SXKdZVdqNVHpd4t@D99lF5()giXo&9VH7I`EVpka]5'#Eo,0Lq]ju^\s.9D=SjB8pJh'imKIh'>U'J.p'
%3Yi1!(3'UGD"JrVSb;[6:WkBNR9Y`8;Ink^(noh*`Zh:L*YgdSnX<.67#mFJ];Q*.Z>sdreIAO!6X#N>SWYl2;\+'od%"jfY#Wo[
%k7u_Uko%@Jb'&7Bpb+K`7_BooOQ76pV2MmW&!=Vjf%pK?P*PaHeC0pc&h$%eI8GkHAK1M`DUP3]d]m(?dceocSo;\\K>HMh1jal_
%)=;o664#hJfr=L4`HASSrFVS:RbR$<HB[WOm*UB,:s@0k`*OJXrJ7-iiZVe?ZHH]3ou4cDI.I*?@7h2d1[:uqrEOJ'^OfqP8.Vj\
%1<OqD+'ube4ae]B`X*jQ^&$?I`,=b%bCPba(na#A8L"e;m".DIoereH*Nd^)7fiYKI+m/[3(52<DsD=Xg3'YGb>::V]!8eRrO2(+
%,:]G0?A%)7BNN^rn-)X#!6-KZl/[ujp1u-Ul%RD2][LP/'`a$1rXNF>.2(MgqUPVr#ZX/LeJ-ZLa54jN,:RrS%(_o-IU!P)+<p9:
%)<]9d5DILa=9)bNITIekQcSEK`>KoY/'T*sZ3Z3)`hcPKbcsTl4aTdkXC`MrMTokglsR4/)G-d5-Qc6G2TdO:h+?"6ZTo^5ZRd.r
%Jpi7YF?L@MU;<@]q+%=(3H0Lf+5%hB5;^rTb!)^.YNe]5EXH"g;aQc8.s!:D1qQcDert4ip6+iC,D>WG_btT'"N_4/]HU2m&s#aV
%;CRa&o1Dcb"EGpq+HsMLPTEu($hgBPfiZm@C?_kO;$$W1Ilb3":J7eO+$o4mD!hA\/9=#un(p5UDcS4rX3Wt/cW'pa'ntI1Epp"1
%XfE1Ph'gXh!%f>"ENY?&PG*b8[F!0n77=1N3&%;,G4UiJ-!O7&#"qtgX+A-1gU1]gBcehR<r4"r=ZGb53-&/FO<ktOj)Te5efK"C
%o"OhL>T)nnrS9uFoe7:)[`tOu?`LtEll.M2SjAic!h]%Ucr.o#Q-7.=L%6I+l_[GC:>$O@KngP-^*`Dhr>%r:VqJuN@pIIg)YB^V
%$#"Bi=!N#if>L8Y+um;PlF`.FgplP\#bV-u!3pNd9XTV-=$)`2!PgpcnmQ1m_n<ZaI#S@O.T]nH=+\&>*OOhNDK7\/$G2:"\0M0?
%\Q=7h_fG/Fo5?LV([Iq"0]^%DAae=a0NJQ&>bjXE9YQ/u-6%.9C30\:(BlWeWT0gD-TZeXiR5TQf`uYf%eL%10@M$8#apFO7uA$\
%c`:/OA-B+4"g#92V^=G_s5a4nqYi6-)OmZ8^,uS=DSFlbpMf)B7lCLOjaeq8EVVJniBcQO+#FbB0,"nP`1\$rMV0$W6,?[7N)NVP
%+AHe:o*=N7ON,ct#hfb<J8H/sa9CQPb#=$L`R$8CnVC8NJpN;&.)-X!)_KpLl!?o0iD&8D7;uh)[e6K@P&05JO"%MN9m-c8KK%I,
%DQAE>CiET'XWGS9HmKrBF\''Uogp16.X[?9XVW2JTW)Tq(h%=<fa)>IfS.j)"5/<QT9%E6*UEfX;upQ`hcl$4YTVDV*&9DnOSHa6
%So#E.e%K5X2OIuQ\kH'==)udJeoU,B$l@X?2[[DdA;g2r)4cR=>Np]uil16LpB6@EPW!4GX@gi=-DCdSNDl*.8@l5_,Fh\\5+L@Q
%5g\%PJO?25*F,LXf1/$Wq`F_Mj.f6sbC%oeaL/n5,$(sDH,tW9LaVp9ae8d(_k$E4M`#lUh^R`^/)J'mhS-KLp:Ltac7@1s.I(F&
%-\b/><kUD[iegHGW>Ks)&8AU2b+U.@YPbd[0I:l)b\ToeJ<ZWEk=Q:ne5RfT,j?Ef>P#'E!OBo$j]Bf514;uu;Vbe..;UNE4;m<#
%<]?C[0'TRERL67+NKe:M`NJ]0q@+L<r@RfhX(i".Z+p"gO!A?3W5-O4U'-r0bd[3D1Ap:ZdcdgtAW1d=`"YZ%IMf?[r2TgnX(jV<
%-r'sc8"45Zah2WBn"!2tTIcrA'EM1,df[od@EfRDLiPQ!R7uNrbuP&>Eo1&1,,LI5hL?U>pPAN@*jVrE%RFGhMEY'USWI\ce6bmC
%PEliG1eQ6N(aHi6XR"W[Lio/7rt=l:i%l0fL5hgcEE1G@4fCIn8\+f8.!$-a@29H/d3047SGSp'Ck!&C*5L^*c_9,Ar2scL_IF^9
%KsCL"pX"O@$n6^,r4p>I14nd,2Li3Tb9]c\kMIq6@7%FqqIs%S6'I>=2jHGQ-:IeSIil?*SEmi!<Y2!<+cn[1gclh[ZoWqsXid=O
%WN&X4DcLFYH9RK;=InY/I"&edJ9'OP"BriF$I0@;a;bUPo&m>(CO5"kINAg;!!/NQ\Mfj"F!doH>b6g26%AmHef`?@qo[+fG^FI!
%UX5H]YOdnrYG5WT]i!'D!]_sn#KnY5/#R[EJP/1X3^Fi$Fmd@AB\dC`RE1]p7dDKl3[?>XPCaord`J`m'8b6?,`.3IG*"!Tfs[j$
%&V3)mhioja3qWQ.M.Gil1*V6e+p%.aaD@*TXj[>laDs'Kg`qr>3r&9^I0PlT826CNZ#+SW^!<$qQ//R9jTR;GSDfBkh;'HWMSlBj
%]>5W[HK6-@M">Y^)b'tlG0Ta*"SFQRHSkcf-G7D1rT4\.=,@GR.>/_uGW&'gDeb9ENe;hH@.$NKD@<>li6[fP:.gr4Y6Slng0\(9
%m"a*=M_>^GgBuMP[-#:IT,@sTTHdH=F-oC?L)IUh*;,$3DF]T[[A'^\O`__edR7iYTuRGN!-*hIMV$l#2^OEB\Xl)mVDJ>^jq7;.
%p3S%HUN)e\;Djn4Q+ddjB6+'LVVktSYBrN'_A&qk;R^OtZM5d6VZ<Y;52>+kiO=HLmW%BAOWLW.inHKYoSWas$rT7*h8(n.4T+t+
%<+5(*QOHH_OXDAQ+KFeER/l7]_r-Z+"c]\cfHVA[G9_U@?%J+UDjUs+h;MP>_']a"SlctgMRugJJ6^7K\c@rbg6o(g<;BZ@eu_hk
%5q$QN_$G?c?i6AFM+W=6d4TQ.X3([-A8ui?CO$GTdQ\?;&se@E_9o-0RBS_\/?@NmA-:m$(P_I3\i:PA0if"L+E>:?.MO#V\K9]H
%p-JDT36pK7lSsLMG3l@WT&]5G(u:dtEZjrM=,5:f63/p-aA**WSaou$h`4I<G"?`.G.#YS3e7p!Y`B>>!K?U%G-2[p].uGaWXHdi
%5[g3qq\VAUYAY3nD],2%U?u<58nshg];ks&i9Fq`PR(=HY'phQ3sCSX9atF!\sdU\=*fu=8RP2"a`?t*jQQslit*$bF/22^GuF>&
%^_f*tBH^DRn.M"(0<bW29(psaj.jQ"hdgCkL'T)bbtNM`#-?qf>.@sJ:T\oWKj.BP(chhAi#)Ho7/BpX%9?uFPYi#;&(^>Q9N+>e
%5l+;=0aNY+%NJAUK<VSFBdBPLq*LShb+-p'bF[0]-R=<U);]5j.`%8rD=K=Re8%O?V'lDULP0%\^(TOt-jZt,G0_GZ:"8;/@Ia#>
%GES0[FZ_X?F/4&i;F0K-X/.:YK]5CsmRiNK(HnA6k=,9pPlR72Z#,TVS_:l1?)T5=eSh>%RY#GSLNkZ^WgpG:!tsI#l2%NJ3kZoH
%%(NDpr>+fY3=?.eniJFckd[F(nB.s,Y[Oo5q%Z9D^Dc'ir2A:*)Fbn8IQ(T:c\@V/^Ntt(jS(K_!X5^Fb'rD`"eaQJD5Zki,%*%i
%=2An",h/ZZ8CLJ$6]I&f'4/R:di1XYmV:kXrWiW?L\\>3oeN-#UD%$6`?.eK*L4YB)USX,dU4WYfN@ka9iibX65pNmQQZ\do^3_C
%&?/ReQ0mPm,kZ0l"$e`tYP''9h-jPmoZpf:)TZfni^dWZJq*/mLW@;!d(kN>M>g84F(8KN^BatU'!/`6*VR#<*<"Z&4I3UU&LXV<
%rSHs\G*dre(tree#WVtFBAcgR<8GPiKrdd(<SBfaTLRo&]CDo&CL\E!CUS-t[t%V/2pVD]YZuK"=mtn8\3#_h!Q[\nonX^j'G0^l
%H"3sQ"CT'oj2q$%D3$aUMY7J4cCINf//,?_0VfC]^`Cgh'9XL?8R:Ij8%9Mh#_91=reG9@E%bHY2S"*)eLOoD.T1'T,@:=McI!2K
%1@-0CeVR6!f>CoOH;U]3nWWOaMO*?WT,NWSK:P.#AOhcNh"42`,N3O;F<\u<^\3ur9jb&Y8#%Yd%<Z"i-84E&NuR=om[!QiMWC"Z
%GOfYM">nH[1pT\:7[Q0NI<24h[GVD[,AhDl!"bDGo!BWR:YT/mNsj@goq+>4[BN&!-T-)Bk,`*ldJ60iD(FK3NuC,,a+'!u>fV\W
%"-)"-+aP<f46-Wm.`^/n7A*Y'Z]\9cEG+q,<%A#L,*"FVetluNU:)S^&s$uZ@g8X852)d55eVj4@m.sg#V_U6pJ<MoGdZ!3V^fPN
%CcW<B?5HJ+TpZMj<pad;"bZTJ_WRf/jrs-^%nT@2hn&rA8AD-D"1?8c<<;f'X&Onp%1C-HerKC&`JSX*-5!-d;e?*ojB<d4dY2<a
%qYX(t!IGa@>]nDYkM:,ULc(>/^ksjn#M;Epc9ap3&re7K$'\(th?8.-UA2//"($tk`D!h1J()?M,P=56cR0SP1-6;M%O`aubP(*6
%<&Xc]E$3O.U^lBZ@?^g@$<Ha\fScR1a?s'c9+PBgkDJ)FWJ):p)bGg7e([^TC]Q)i3NskU(/3CSEu:<Y82:Xk5M#auBHZh2c"\6&
%,,#Ko\l/s6qR\780lBN*`1&4B7e&et_fo]YL-pu]LC2hqc=,aL&,3)[nK6`ilKu>HhbR\DZLmUDm6[J.C<M%o8g2']Q,k:r\N9C=
%;Pu0ME`8\;(MK)'&]EHod"8#\i"GBad6*<ei%BA?-!KlrH(I*%6r?:C?.U^*U>V'7+]6q'B1?q)$P:>CT%L@3&L2''AKj&2VQaOU
%Zt6;`?,<qF,:`P#Lm]\U]Sgm=;*\F5_>@3Fp#Y0q%rrLH')VMf%o83Sl^Ie\gtOA`GNk6og9(JA/9\pW:p]/cSN4J:jalt>Dh_q9
%]"m]"p6Euo'XD?iR>,^LnMkARi6I/\pCoCiN%:Va,X/(gc\lPo^FiJX-fG,[2?]_`rS%b-D0_ba2MY-05Za#i8dLFB[/'BL_q9kh
%f?:e.3J']!0=Q=g0MXgP1<K+YeMr-nc'A/Zp,N2X!SXr'b,)q6?*N!<.r@KQjA"Q<BtF1]J^+bYA/t?mmaaZ;YOB<[!PVNoE:)o6
%9;'f]YO:F$)%M=%Z)/Jlaq+uXWO!2a=Z!YJCU9KrI>O.4XHJF&.fFQ<C&Ic?INJ9>a!YlU"b!?Ta-)OL1AV)jWIG/ir2TkrG.$'.
%%]5iQ(B_\V?P"3\,C=-;mAK8s.MCo(_GJ6B-<D0PMdf:"KR0D+MEJt/iRs.eK+NPg%Ac(>:Yj`Q'6'7p*<Pq07Ku/$_o'0jb;c)V
%^`sqR\4'LIW$3j291fO22A[p@.RrDNB_2;b#_VgC@Y:Kf',*u]X?JcuL"W!L:m29aH\Z4;Dr1!L5h)`&E?Nrh9f^1P5j']PbF@IH
%mF\[IHO(m=LYTTBV:FlY-Q!nN@D]@od2F0LroO0XPqsN2NTRt@QPgm`Zb+,c=mMLE'o!WU9_U?X7F-04\,Q76K-o!-6p."rmG^T/
%_8j0n.R:hjqA096^9kY*V>c@PH@s$0.pD6l\?8%^?s``>B9qlY0Y5+rA+L^)iGN^%Z"rUMb(%E:;g2'fqug6oU3W)$qb-5AcOAXA
%Cu1Z2hd;S#mkTd`.Db@iBiY9pO"-su>Folj>Qm4)qI(1a!(:Bd_4:KG*M%9h=&#k*OPd^ZMGO4k[>YlrEKr)CeX=#S=k+N)SRj2:
%m`-PZ9(LMXlsmN4+6QNWb&Hs)WTDuIlpR4@L/Yuq""7!MD`OZcG$$oU`>J_DK\?bo>K#4i5[@E%rinJ8PJ@;]&/A,p_DK&!-&Y$D
%I[02Tkl+WsaC1N3q<]D;rF)"panM."6]D@AAI&ta24kb*;/,W,haB;)d4"*CbgrQkN+%a=Jcm6HO0-ui2Ln!oY(%=R]je;Ej+%!Q
%+924f4j@#dd2HO)GIE(\ZTs>t:tA_#1tbCl".?7BB3V_>JJjqHcBdeu3EG*V",o6!gMA9"gd]OZ&tq$?!#j8udMG:>Jk6(`'X6>4
%8&?AU]2A""\1;$>^?K23XD3"4A&:XdX/aCm>"bu]HIk:dKdC=JZX%(7\1+"cA<+U'N8PVS1G9t&E=!=G;teCh$=KT"k0R`LHWu>h
%=_)erm3W>dJ0/_u?lL?<,e*Ot+FhufoOC5hNfF=``GQOGU+TrNlM\-\?Lqu37pm1ZcRRtu#kW;Aab>Z_igiQ;;DUk^o$7b-:#\3>
%/J'Ec,J]Pu/S9sU?H.\X9L&ps*/TfP6$Pnq:Q)W&>WY9HiZI/O-KWu#":7LC"*.g[c5I%,g.l#KbHs<h73Zm_3K?HObHnPV=.m3T
%"6rU?*U<_&LXuOC'5^0O'YnbjGJ!.B^fi5#K@sOC)r4?gI5K".'*2@%>Z_FT'K'cN2p/qS!6Ee$j#n3i<*i&R,/Ql0p4RDjM^>t<
%Hin1PNm2/0Ga^HaFWLPp_tl-I6as9sK('#%3_3u!GZF]E;sFn7)+)n_XFbD.;"Hh+W8e^<3rqDLUH5D5S@Y\6JJE^T"ier&#$'=`
%VMt)t'W,e`_e<4'+7/YS)"8;/)M\fYh5VR6FJf5+WV@&%1.l1r[7]@7]RgG;a>QCO(lo]sU7;[!Y''LL"e#<'!!qrU&/2b`j#rIl
%MaAK:9G8]iE6^)X_sS&(bn=(o&+'YH$1`-ek<D.1;0uStN#*nA.5uIWV?Z'Xo)X5@VR!JlNL)U\$7c%FqFj0"VO/JiaKGMA"?49p
%i/@"e'b;%t]Hmu_3t;opgjlU4B$`ufo#o\6n\$,2Na6@&-kW^(WD+:h)T0i?8a3`<hNiDEe`EN6'5gR#"%e.>!.7>`7YLrhH>`+O
%?o1@.lT&:OMZU[F,6<T&WX2&3c4.LCJL$%a^i(Vr\.LfbmK&(`A5iP*nuidk0K&L_3kIdo%%T#dajj)-*B$qTjJO;p_dkg&Ws1]A
%1W!t."#W@'b"S<7_*X-kZRi&9)T)W7T=lQ#]8I7J>VE#D=q&3M1Hf"j&/l_)2cKJ*Ih.T\B:YS5R15-g.ciDh8P`cWPUaS9Xn$lb
%;u1ZNdX\->)-b\afKm>0"!,\](c%AVNX_Y)+["E*_]s%^gaLS(K/^&9OSaa:/NM"X-P'IKK=63<En8@pCq-m+j>Ac?ch,UkhhG1L
%7O-5O0<YJ8rpis\1R!qJd<?%M7cX7>dtQ=Yqt_.*[fgaS%8H2<35B;"R+t5!9k+>uckI])/Yr*A&jef9,>,_o9j\jYKU6['5BjM$
%-5[D>BnpVC;qqJZeVa&;21]N&(+Ih3$MlQoh%.AcW^CX0,3+ZtJRsq_DCd,e><diUX<V^3"[F*J/ZR)*INlL"(kl\WjRB]?JfVnV
%DbtLW-VsHRRMq,Q$%rPfh)rR]hjD;JFN#nHdoCI5L$#e,R?UkZ@PYhgGQ&P-$C`(T>58<LK"OA30sT-F^5Tj5j8(J1WiGl\&4PR+
%l2,1HTQCfIhUpMIhlC,'3Y@L07p1\!`<Ylhk4cBj7K+_ti.a#F]/8jdNQ0p5TdRbF"/qg>ETG]Tgl7mV_Ur(i)!Ml*`82b&j(pDf
%A9.X^_*%^%FO.^/N7^9Tip3JjoOea,q=iP(j/k=e_XXrbg4;s"9PD2Jf?Q/-MVJP%EPrUjl&ZDT*j<D_39akYXPeR9$j0[d'g!Ea
%m$8lOf<I>GqcdrSg$tfMe!6'joFkjgV)<q:LXRtj]P'rDUP\+-j&dZs)81_"MG<K:TkRA-BZK8cC5)i8:a7O.VKDpn<AIfgo2:\_
%`319ljq9:=dUD!F5"g6`@P=?o')W4Fa,I4&&2MB;:%Vp'lr?5/Z&?ikn$ZPP?E[)CI8VZ*.7oNs'CEJ]p?2=CiInJ([qgMhg('YF
%5&u<j-[g3R$2g6*C,Y).fW>s9KG/IQCaX-fe9g[s>Ih:K%rk(Fek//E1NSYLCUe!Gj4+gI;2)=aZ_9dp'4=S>:h+E`il`]NkpEE$
%2G,%c9oeYqnq]8IUSol:ga,0f/-W"&_.WGo^X0$qFh/0n`-(7;!dr9!p2E8Y?\1i'Y3[@1S.!.\!Z:8ch'jg[9Aa1OKRg7k^&oMM
%Bo]+t2YBVW8DQKKRgZi-JaqW9FiFG*&=tssS^h(<[!6t\E!MFo+D0'6j;-?.VVC4Fn2h+!EZt!eH:$I]'nm5aop'[`cBJT:P#(5%
%.:1,O<Lkms)ma-?`4<1:rHa2MSp4sqMX]Th_M,@XYCos*j$-+8!;7=l&\K%4mm\ss6)$/J`tVV-JVmh1,)2=/Tr/AlgU.NoUQcWm
%'2RQ]+Tb2W]4NSO&4Lu9AlXcEYCRDRaJX:$oo=FRjRrV;S"4>7m$Z&WA@lWSHGF[MII4^i)CB#eliAj`bM@T(c^Y;jc%+Vl4(#l3
%Vg3t=UL3)lEFt#5o<;LeInpQL>k]M_UXu)3#+Yg,FRORZg!PJH_(dts1rYN,Ta.RGoAVhl/)Xmb\$j!m;LVbkkhN_qc/I773U-Np
%OM5AZ_Hp[O5`AZSk-bXJSB1&"-6*;__q:Uag"Yo^'@ITbfR0n>&G.K3kYQ#1rjfXdY&p!%1?33O.H8DF1g'LhXf%;]btn4Y#4/#M
%(..<unYtmU*4&P#`Q-'Z=sN0KqL,QYSL[oYI/0B494U/u_U"+X)Em.dLPrkd'X-;,6h4!Mb)@$!A=0n7bn^0t'&,)s7o\cZ=<[iO
%^s=#i1jJ`<MX=]>?J)(26[$7.\VEN/c45@QG\8ZfH%;#aE%r#C)HFnb/]?*bd`TZa&jj/oHW/:[7^6f_H_P\C@"rfI9q>pM,mZW'
%Gr!apW;R73"5+8qK^+fK?N-B$(T0@+E7DkG=&<9Ehdu&tbSPfTn)Ca*44Z2T)Jhgemu_o^&rg9\4L!EDl&8gaSc`rH9%.Z-_mO_(
%f>1#lb;*CmOV;\(L0Xr/s1>TH$8,PNdk.]79eI260kB1-WQ8+X$K+u`1\@D4;Ck=<)&OQf)sb%nmK@6,%SB$l0:3O^<[(TSEN,5^
%dGjtVel/RFK&:D!8O/VUaUrWd"0sFZ)]Up\d7!=ra&aObpIEp'(S8aFgUP=Ql&K&/*/)SV24_$?Di@RLLjissV8u[*jDgSMEBpG%
%UApZJko(f)cSEY4iS?D4SCnbGXYB13,Li9*3/IS$$K'<tg+#.,f+?IgN2i4+/KVMKMG'?iYON;gOJKbpjc1m@-RdA6pegGR"2`cT
%.1WH#5F<Fk2mO48:5X=jCa.7+qU/%?Hgfea78Z2bV^#KcY<8XYOBL>n!rQeC":<8,I?o6?5Zm@+pfdQb"2;qC&UO-4KLXP>$tJeC
%eM'TRKJR5Bb2c,M&V;"5Z]+UjTGfs04M5\hTT%-Q%N>i$Q.IgH)h]I2a4_q6n<K.=eA5?SO(;P`X3p+sndBar^+%I>.!OC_\9glD
%V8O4dMD7?6/:,7MQ=#5`L(Sl_nSGhkIc2chDUS+s<:YV1qR7fnZf#RLBnK75`-HHH].,8Q[UEc__6bQR,h.Yp.834<l1aDLLt%!s
%8[&]GhuP(WFM):eCeoQORe(NbNk.I>5As9SR^]L)(cRE@)<&"Omo^Vs,!+^"$-u;&*V^W,l.K0O4?8"??"k*/"h1?6NgsL$?*'0c
%RD[V<&#\Pg"O!a9=,@S&R2.OV0/e,j>"*:s#WF<o*`"=oq7K^ahYBum$rXb/h$>9VF^Rh"`cgMB\N78)dD>0FZT*$laF:39MS.t/
%`r^jWLaaO83jFnh*2C0f?3[9PB$s:HWs6K\SK<'`89gKJE"+%K)/*jL3).f&)odq/rUGeOW%C3J,'G%8W7$G$"/^C/(AU]'9s0^&
%`sCa)`2DH^o>DP-Gd&bnjj>f<j]It?>K%6s&bcb@r>^m&,-De@&YOM\cd$](Ra6d=Pgn[-;r@L$W4&1PR<%kW3!g_j%`!],Xh<7=
%G_EuOY2(gQh)Ge&deHS'JCW[B=i#G2@g#8l-_c**S([t"bc/SIm&2g+PH,`$o8S#=Han)@DaM:X?KEQo"'Q*[+T[bFk!?cu%_jft
%#FI$f3QNCL?[O8BKTP.@7>A":ZjJA%Mc'b9#U;=hYg/Gq3kb.dXpE$d!(X&`0mS+n=t`tU;;G-V2.Gn&jB\/'E_0SsIYcBgn,]DQ
%;e($<8%=[:LF4n,jXBKTK!@Cm%6nu!Z-3fd*W2,E5_*^ca$tD2E(M;>@F<$hf7je"l(:'.r:WmoLN9/-pFq`F_(&T"I!pS&32Ono
%8(D,qE&;oCmBO$/kA/mX/9T20FFXQmftXOCPaQI0`/q/6!X'b]BA%j%IRVmrgZ].pIM]s-/M\D)(83cIQ-u;Qs,_^4Y,<1h`"&0s
%5E$$U]+Q()I?Y=Kd?F!]Z(X@.7BM9`d?ARE76)HAjVbDKHh-W0[U]XD;MYhK*])eb)!gkuVF_\70B[Q]NC:fqe9rM,nZ3^R!H6m)
%'?joh5q$gV4b:EEpq^3%gis2>5=9h*]G0jOUlC;L`ni>;$\*`Wl>f^8F`(0)ZJNdgDjd!gP.c\QSa`c&AY,k<XfF&^$>3:gn[5D7
%LEMN)_2R2TD5u!N+*DXA+b4ppj'W.cX_eE/?(u5nilm8`I5D"_<8'/XBW;)&8Edu.n_-60/H4D3)^BXNe-k9HRY7#;A3>UhP<\bn
%K9u+5?R$eX!"V=h6]5B8=6p7WbV'&%nB';5#ft4Di5CZ-j*.mE=8NEIW(:Y7^-lUR(Bhn$VrD6Ylmp587=5p.9+'X_+QAp:(A\"W
%-K`F])UH8YqflSD.:Qq#-"^D.cScA;O)GH$n]E=*O_6[?SgFueC2AhLa8.WXcHCF]_=^u;`a0)VA9%I2<=Q?F'pHW\*Ec?MR"^7@
%BrrGa<X03rJFi5^J#ZBDFSP<Y#!s^b5h%%`C#i.KC[t@X@8FYRTbt"G!IksJ@9pnPieS:CJ+]L-U/3t2G9eJ5-+.kT0dW6f])=Oa
%r/+'nn)PK"ZJ`8a7[ZjE9M(nq-^%5+T35![OiW%_V033S\M<RNQ]dkEa7&__p\(6WVZTV#f&j2aI`Y?A0A5IZ*fuMe1gV'sfO(Y*
%p8*')HnO8?r\Ej9n^fdK^7!`rHb43ocf[fbU_RPZ70i1kl$%p)mT*qU+jcH`>Am`t[c^iM9p[EtDkhcR_WRDfID!&h<2sQubR[\>
%_7sfY4me`X[RMHja%qt*>;W@0I^K`iEtW/D#6":S]pj%EjbCOriUb=L52P%D._8gH9=eVW]q"UMEn!uSB1U>0[8%FKm[@ALCu,3Q
%iqg^7ld#HWeF,3gHo&*ipNGH<.2`=co^hok:=$JP6lV\b$3\P[N8s+'Z2Ak/Eb<>-X"VH_VrrD3p"9%V$D276p@7#=;ebftI>Z=c
%%5i+Y'aS]6Y(]a9riT]_K$h^/)Mf-khbVqmO)'4eeOeY:;tt_r[?((UT5osFoRP9KAQF$a))O]aB@uK@QI6B5GG,k$?F[^7($eH2
%lHqIS;]>rHAa0/ShuEW?X?PKDGnU>.:?*@G>Q&->,bPY+0<Bu]7%GDhKJr*XJ^J]3rRrT/Q<T%tkRc\2gB9_?5-L$Vk+D4lMMUb!
%gB$-G0AC+P>$j#hd\s6+NJ&ImW*W0++$!j'p>VLjU!)lB^Wka/c.kM>gO2.:=!R_O.[Rl?l7O^^k0VaSWl@fA+es'J`l<9ZXkiMP
%XP<Q!=H2fu%\I\%p@7"bgL6c3?./tt_(V9XfcbFm<Y^&6/C+"#<Q#qb:FN?Wr"p7%k@0K+Sj?A1s#,GS^X)6+XZ>5G;?6N>i&^c^
%o-dc&he\Ke375%KJ(VHRG<V1kmq0*4;L[/PL/-!4L(bkInX/fS/CC;o6UL)*_\Udnj45H<47SirXgf3ATc/RsG9t]rWD?f==V=7+
%f!IETke"GYNLWn+A89_(ffGZ,C&la/.htWX!akl4[?hh25YQU]!`l0_2:tPBBeR'MnJdEsfN=<RY%4=sQQp4Djt*MOBB=OjI"P)D
%Z4HH3k@:\Q9D<"8]u[1)bqXG8?WP&,h\XAS>I2*:H'6UK_;4dN54<nrZU=EOV:1.cMr)^[\k/Z\RrRupj5SsN[I)]_52T'$j1YDh
%j3/cS>htu+`3%':QboIh%ZF=11,.!bUH:S8UN/C@0(+")'[8>uaq7)g3WGJ`kMKqGn^]6\N@u;VCqWDXQhIpACl(\(QPiLQ.)dMh
%@;J35#t2j0b&fahS;q%8;8@afAM<3u>CZp$.fL+B$jhgO'U$tLY+[;GPDj`^s3PI?69F@u_\pR\f9A)HRHb5F*"@6?D2^CF-gSj2
%[->OjWE;1>H'9E27,e@X-92mWSk;Y#B93p+'SU8ES"+'_W9/!FGkT8RT&3g(fmhmtPk[bC/^T`ceNO$J'ZQWE"VnSSA-&alAqtB_
%jFWiLD,g*bdkdP!H]B4@4EU2gXsn1\RF!t,Ccj3FUEOpG+Y](FQX-n>qBhXK*blBR\Y"\(DXfOV;lJ-"7-ABEEuZ2_b6,tbN:8Mo
%"V7]t0eUlGUIhmOViOPsLh!G:]*sfa!Y=.oIh#BuK&>,UbGc[e@#dXUUIla:<$Gr2LOH3R&9K2f6%S*&m$i$b\Z7[J1sf[#Tac0l
%dh<j>i,ncMOm7cUccEMp3t!;"YD=I?1%B<412EPfg`@V:ToI@-DkSKH5_'P3K]o1]HDX#0oH_Ve<P7F_Ffl-r99SeKSoO;jg-BEq
%^CV<1Ec6aF89U+b+]mNBZ%1dY54PS`Ne_1U5GaHQJiK!I""&SH?'=dG[X;Fnpr^.j1BeG,!(gBPK;O;D(ccoP'7cL[V#&hAk^W=o
%Zk9tln7R&&NNME0M"H>a@7Dl&7X?e=kj;>Tlo#>o)]i!mN]G4[9sepaW#(qf)>nY<5W,T4d/]7G=e7t%[P:NC,I"8t]kW^3Usu+N
%eEhF:Wba[\EX78$ePDm>rJ)Yu<LMnF.0f6&mpRXmNEqnn,`5ATH%)3fd?^FOD5AtY5SEacQn=d62PBZm_m(.d1\en+18*L_Z[isi
%UtIlBX)G,0Tn`2,1=h`ORsS[?%+(n7:Nm+8#0h?>&(J/Nl+)q?rFL7<U!#YL'3,!@^QbWM!i/Am`,$ac<\.fHY%e?/k_Yjub/6f\
%'[MLPp(+]+ld#i*%HV,5d]\pPZ]eTb#(cThQ:LT8p%tT_,WAA3>K6,l8tODellY]`:Lcj?Z+<./^rLoW4Hg$F"=sl!j8hGA(]p#j
%bMO\U$G3ZEWULLAYH)".@FXM06M49f*V'L(VbgR@q+G;&=N!QI^XsUYdE:;ID3Ec&8L*Tm8]Fj60E/8:>+Q1\D[ALT9npZm1;+"N
%R#sLn;5M5)E*(I]T!"-d8_bTD/+_fhDK8-XrpZ=RP?>0AX0eqf-#aR*0BplQ",pPDKB\#'8u4\VY4F:O78Ni%d,@%-4!4<s3KK.k
%5Xiqf*20:^_[<Lmp)'R4%l[pG&>W+9N%i8r@rV9Xm<@<!Bn<3kg&9Qj8i_:5AsJ*9mF!!>8S;dC=7_>bnaM6UD-qJ_it9jVIdp;`
%JWiJ'.)I+qoPDherM'=bfuY]'C87=HE+S_;K[H&9GYT#b_b)"K]`p>tPEW<nquVhkZuabqEe(lqgAb"2"MZj\r2e[$!C9kG-+_$i
%E+`rMm[I3n/n*B&o[Y"rj"Z:XPg*lrN7(WSQ,GC`nSrlTph6(s_9o)9R0T$[h[^FunPRqG)F!DR\]Q.8#\2+:b1a0,GW@KMa];oP
%#OLHD^qJQ$I9gH2,KqN*:tIqRi:>meCP<\g!8B-O9)Jfa[7Se-Dj:\nk;(ZE%-/@d8d\s9WF,/YWu&BI^!1p38R>*=EB^L%4DH`P
%,G2+FSDdBA@]LrA.!@\jne-EigR!W@b[M#qV^"Di=k5XLilVmO5nZ_%k&7Pg#<Ns.ZZS8$f";fc&g?4L3VS;Erjk\!OuY=4n5%Z@
%hc6rC_:*MmIljGis*f->]J]`=(V![h]\$)YqIR9l^L1E"6RmV>qm>X>M1K=#*EcgL^[3UJS@DZq%b;MY@;Yp#LX.o#qfm&ZWE51M
%M-pX0AZmk]Pl"VaP$m(cgZ=I<17K]G8`P8?%_lB;&Q\<53rl.-RD\3W\UD-"s0O/c[f>S7NUY-bR2c+h75"NW4h'Zn,Z\Lp&;-82
%,_)E+ku7,D&]6?'NSgW&q.=@`n*PTr09oLJ,M/.I%!'9ZB*pg8Sgg=*0ps=_LF)jm=Zg@MpdoNo0@uWC9Bk5VeW;5TVg_2;gB>YZ
%_5m^u?KjGDA#9(^_"WHM-$n9Q4#P:tpri<nBRCe,&r5-[3G?Jm#AF=#-!E?[<UCiMn)9h5iR%,1]1uXZ!b)Su4H];'(tLid5Q@pj
%DeZV\8ZnOAoRHW_%JHH`Hp<AZ70Z,14Ku)&U+*K]K1dsOfuF'KB<?t)RJYcD9g_j\Dr3[fF([t^F+n(ga:'gEP.5)8Z^,7i`E6kH
%YZiVQJ8&:\EHCp?+QqMNNNAWOd&>/f"_O1&!:)%G#&F*XP;gT-BRQ0IB$49ZfI=E5V@rMC0S4^;U9RSekq:;=gYSL;jsiP([Utoi
%*Hpk%2a+gE@ZoX`kW1-`26U$TqVcgNY2u$<4``UK0LZC:]Z.kbJEJKoQEQ#/nIh-3JQ,*!fjGS50AuCT5*i(Ij6"O!P_3U3gM;=\
%#]0Hiq2?F?<NqoDs0^jgHO8DaiV#HCP[7tK<9BQ$4)NAlR#C+bDHp(JBaVQ'1OudW5iZH5".4[db\Up`j^co]@)Mn,Y/V_RI9`ao
%C.D@M[nN?VYRpON,GkdT5INoKL_m5&fV?"C8<haJ3U!HTgP!D_e'%6pQSSY9eIqtPP;>Qa*^6(qM<OFa@O'CXl"uc`,SP!/1uP#0
%;\DUfH2)NQjqT--l+)Xhiq^XH;Z$>EiQIrBV+;T#,,tb).?9?e)\J#\340mZ$H";9g-/XN27]5NQM0cT8?'O>ap,!KBA;#D]*gP"
%S4te;r1*)4!/l:VVfbHWVNqn)%(FGcF8]>m>te_Y&r#7[kGrj&=@uCfP4Q;S1.fj#^+;&T?osBr(0bGTCRr\1h=hE+p)EG4/Qpif
%X,\&2,P;;XDBTXEQ2lb0kBqr/UrHdE=RIh^cTK%HkW@XFp^!1>8o1km3N]E)>AV'IX0H%MW-MBY#&dm5oq]kV9g!"#KN4B1j*5N!
%.DeA)LR]XQ8)-'"%&M"<h,VL2GX._7\**?+@lIU-+)gohd_BOP^7U0&^GmUuIuPtpW*7`UmE1dFqK_S_Ppm2/lQs@B("U^IB`5_-
%=[jIr7j&$r%bRob0)Wm)AdNFI\W/>@0^9J'*AN92,5h5TidCb`rni)6'Ou9ie!uYVOt>na\9ZX+)WNKe?%nOUgT[6n<NO3bTCijq
%HCS2?A:6Il+2=2spKusc4%_\$3_oP)'6jEG!R<@'=P+ki8d_7PchZ%^a6>*7?U?]tO;99ohD.Cqr2q]%Ip<Y3_nZ3iGO+:KSQ#`g
%L!8<L1kR7)_aF38U<%-F-,gFE`bR1RX>U<m;%]sBY/hE8qPgVcI,L!Qm21ds:Oh"0S]>..N/u=AQ&@@6qe7cO2[Y,f4U*!acbX@#
%J?bdf+A_&?UKb5tJ%pqW$[=HZ*7P;W!Wg@pec_IbQj1'Q64\0R`eHImY[WVtOR6L/NsT"P-+T$"$,?g_>07FB3k&.0Hn;u6\Ep;7
%a<nq*_Ob`c+@h;B!ZRnK&XM6*UnuD\_9O+="O/"oOL._?6?-TUXR9ou/6h'nectM02@oCFiH\Fl14ircLC:Una07"[Y8BT'g^<NV
%=en07[1Q75lQ<7'gISf/G:FMS>I"jV2V7oL21e?;mhZ0ecPC3MgBq*FPL_W^?jq,/Nn1W9*NW@sT;G>T<OXY<^Z03$'Q<I+pb4&b
%kK4pBJZ?c(N:a=9=N6eb9aq#'hU--Wd'A:P$#E(*1J!tdMU*GK],9J)C"V.!4`:QudO+F[WXNpQM?!c,@[n%S0*shW?K1-!^.@PS
%2)SUj#+Pc7_>8&$",I:?dt1VCcl@aIjmdO[6Wse:UfitbeJ[_q?.^00('e%W\1Cnu?q*__c![KP`-%di>lLeiX7tTu1t1G4/$eLr
%,l(Ss.e$sY&`sa!#-gD3"7q%^r4OtPJn-B4_[4[S01oj-ec<^&2V<I^Pu_F/U,=_tODNeTTIgVOgc?[Xm*fIBUm(5WT/i8k0KOPS
%p^#D@;?r'7qH4"!X^n>&,FIX'0Y]'A5'UcN&D3@3rEA[pC92l]0[3HN:iF\RO8Q_P:$^S+XIINK?rLEJb;^QA(UaGhd\#5:"iof1
%NEh@%#Cc8b$"ie_&$Q5)2TG/Gp0GM0D2a"<#gF][RMU@*>g6It9_1U;.,"p9VduX9ap-%'eddh(>_lk#(1r*ggK:'K%\m%7KEpBm
%A31c2-@m(,XSgc=UU"J.Fte&%30HUcR"@>7JM34fi:Eqk5>/"N6HM7r!R(nYZ[HS96FT)0pLe4@cOXM59Tpk)UGi'-66Vr#haGpC
%C\_b36d6Z,)B`\g2E!AdKdSB?L'6<2^<7@"#^WTjpD+as+)b4s"+MR:L;qB9KsCD7nm&;VED5?/2cH;&2/Qm2J1s9Ep>!8?pc:"O
%%h72J,Ze8#l)6noZ("Jb@',Ybb+n6DUa@LCF6Q+QcKsV(RapU_qd%@i9;Z8*\!db(OY_0`!<PghPgo,+rh)eCq&HE2ac4U&,O<Ri
%g]YN>(A$;,:%'k1!*s=:pk:L!k5R%>QF`T`,4+UW"X?76\afEIm2J0lAYkn-m(.3J4OIH?qkI'=Qti_;[k&WXC632=[88DhEr'%#
%H\h?\QY<:3N)6r_61`*U8kan'B9&J61^(mh*KMtbQ.^`inj_!`f?lE2p8T<=V!t+@W$u*3$"(9`gJX=\6D0Xm_j`bC?GaE8<S)J!
%ZpJXAQ`jkF2\$`IRkVW(SW8qmp063<-!19oWkaWUfe6%Z=X@T3N65(*q)8Mc-&q6:*JZtWpJ&Xp&$W26p'Rb$N0&RDI&HH#[8#7?
%.ECidZ2r2h<cbeU0X;*,R_GaW?j`3MK&a6C/c'h"0/Yl/p!uC,q>kH4l]'0fL!r.8VoZ/265Z4]n6C+YPK^C+Ie5C#nt_XR[d&H1
%c5UcBEni7G._uVOfriN/RLAT<94Zcu/h(]Ym=CFe[]nXdfl&ffLS%?Q2e-d3`"cRiC9,GCD_W`WflBpAV'kLcG,I&-%?.Z\@$3Sc
%BaOJ]^6GV[-l9<DMFVHP?HXt]0.H2)G[:5Jl)Z>On[FNDI"TXFa!E8*Y1^E@&N<;i.MV6o$ntn49Bmsl$.!5;7=#=8V8UnWL.Eb&
%Fcq=,-lcX:[^6RL(.E%WS,rHUp+Z'k5)fPt?-]'3^b/:7`M4d2;;'Xoo.BfQe+X'-<:m8gLB@,6R*!<?QW&cNY\PDU#IjXCn=XR(
%Uuhp%ApX"17^Qrd;SR@Gh:o%#CSj(\8kqm>:%>h4LSO^,<Qj>JBK%AD*>V`:^"8-2Qno,YFs,"HXr90#rBBe6g\s<fAOHod=5%b0
%'i`JW-LMFa0]rGn9AW%SG]L?'@_<D&?&Zo!$1_Xa^kLBPGMG)n_'PSOFmQ%P]jh:3$NaGmQDZo%L]:Vgncs^$>+46]Kl"8ceGmlg
%(gAB<+%l\@BPn(=:X'TkD$I#@?ZDm(psC>kV^4*(5DFWqliP:C).bt=`V>C*PFD\ZF#\cFCfW>s*`sJW)]on;W2b;=)ETbra$qs=
%c0QMMon?E_*GFLs"m3Ao]+!_"V*+"9]o[8<Ei(MuV(rtJQ<,k45HoQhEeXUU!@k[Y8hlW2Xph^nr$t;H+R!NjPa#CCjcFFhd6t=T
%fGobT#?A[1PsqogX]?%MpgXI#')%)`5\)BOW:CTQqH?g/9q9pXJWJhl2;_PIj35j-L<"V3&Zd3<A`[=+[cH2h2I0h;/A^3'N`J=u
%ES'V>bb4@p[@1oJn$6SQY2cY?5B&GDD=)0IbtHP.;d^omr]C?`^%HUVG<$'>!#auZ/@;ObcV$*1huN/g)IX1n0#ZF1c/5T?K/!8B
%>s7)LFh4WP9HX!@Wg-p"&jR7_MjiGY#FjLA#(`-*m\<)YlR,_ATC')gfE8RQ.HoC1fP^!53oj2-,Rf*OUs:q%*11P1#.F$sH#Hm#
%D%0,aos:2UV2$\'pXRCp/#Iao'H'$ZYq/r5%=Gt'pGg&E'M/$$Y]Z?e>D^;K!YQDr)qcg\IRPSL#e$#8/m>Y'aYqQW];Scd-,r5?
%?Y7A;a_"WsE*7m6YC]CUi8(!aI0l4MZs&f5\&H0$`eo=JF+1h*_&WINOj4,qQTeQTab@?*@a_`!jM[NeaYJ>ucTJenXDfi(pLUCQ
%Pn%VGiP]/;\DVuckD>O&>f:Dam/#8i?GXnK=9Q;jg4XVk+BBhYVt7HXfI>E('5O3=BIRS[+]A7516u?VlT460^<lb??=MQ"+6ta'
%/Amg_=o%5JWXq+$;4;K)$e?k]Md?Y?`\FTt&MDfJmjkc4^:DMDGL2dT6%OnJq4NtS5$S<?BAMt.3mPVf]=+"q$p)SZ(\]=0js;Nd
%p+tus2:/u$8rkouMK)uuQ<QL@NHj0L5[KC)5(m^(]K8q"HokkF6;lK=EK5K/r_c$.]snm^GKC2eXL/57/WnaTdnpcNVgRQ;In)3E
%0"Kc9'EKa2SF9ZrqS;DfP3f%?!'Le)BgY^Q?j+TE>[.B4ipmJB:!%m%O#RJ(R0#b(Hf*XBe<b@Vp[FX%Cle904pGr<T%_T;;=e/?
%#eMD=dBlOsS$`"R6FN.29XjK^mHNg>hKfKhiFG#I1h7P"b/Y@@_9mVn]BAX\V'8ap7EI@%jbF_Ve7,T]h9jJY>u_r90]e4HAHj&7
%+>pRGG2m952KJ#Si[Fk6AsE[>Cu,.,7j\9#n6u2(LHID`%j,1lT0LI<:&cH5]OS#]-T6"2@QRSb!*gST`ajPdJYhd;F:FIN=S'cH
%*O`p;/7VM^pJ'K;b>RIMe^A9/DXWh73(L>W#0hEcdQh/4e*L4U;iORD0.k"Wr!Vrgi=[hq\&['eD"X>j\2pE7ZC2&,Ocn?cM+=p3
%mD3=-@bIp3"%sc`J<6p-EUq?YmARu(rRe*m>#^^%Y=a!Y/7>G)XdIO!XYU,L9&\Hu#GE>592^'R"Ui0%Rrl^(h'*#/'\u6b->IhI
%oc$p*@`l+b892-h#t1TD)4c;]SL'>uX\hNIP4(G.HdYTi-fpBY8Gnd%Ln\X;';m*X6P4#h[bnmPQI.`Un<%r6R?D(2bRgfm6%s(0
%,p%-[U$&\gZ@U&ED(6hF-EFqRY@ZA+Zu3IEm07+V%=+0SD%S=:Bu5%"k=b"H!H6Y8c;%L\+j3;kM\u=A("L"DDJ8-FMQFGM/i=,k
%j/46V_HWXo8/4X(<5j21e_nMHrki,$&ho%8'\Cm'<%nV;@iW7HUeMS>rJWQ"nYqX%'Vtik#/lL0LC.R[e,;tE+LrS^_*8YP/iADd
%RBt';T(hjXH>QQnC,L"A,/hga?tG%&;g&MlXMcaRM2_PAce"[D!55l<0`L5[hcD;Mh2su=h<]C7el0.iAYup:^M]"RFMmha`hEmR
%KH=<srqn'#oF3.ZIIY$UO_rNNo;ekaXA<'`30tRKPFl/>p&^V_^XKDF=24Pg*17^<*P`>Fe[.Vh0g>^Z@6;bd>>jreG4!SuPcEZ/
%d4'-\9!odu%Se%Ipp<#ik:AlF8hg<QrMc#UYgSjsn:YG9lc)V.?D+\s04>11cS'7)U^i.%\_,]$TL'@ZV]!)l,+1F[g*M/h`FLl0
%g`@T+LJ(n31V#m$E<CEJpa>sMmDsU.*Nn=$Ep7=N('+J;CXP;'D!qAQF%'2%XB[k=,uQJ?XF@J'%!C:j"G##i!HO'FpjqP_C\ULX
%^E$G3K!mS=bgZnMf+CNe[C@tbeJrsD:iT_m#*d6F$TFS8Y(R]WL5VBZ\fAo[k4a6.:kOfKmnhF@Vg0:Hh405:==F\$+lt.a6LK8:
%;e7?k0\c41&SoR5FiD.a_c>H1k4Bs<]G6c:@h3.Re895eD9/L^Z14IK0ZoP;XX;;$UnidjQ@<Y)CaG+1_r[f.*\QRR[>-SeIu+OT
%^2^%3gjFHnq.?E<Ftio#,O#'arm?nNBa)f^S:+R5JUt4*p5W.7nFn=;&'7Agcj(;!Kg'p7kZ%!b&Ihh,Gl1I"*P22COu<3doJFG.
%/<o,:T]\\%a8%668_Q9qe&T?9[:5!81?1@ACsheE%<'EPgtt?VPPqfr'ZSI8R+q3Ak=#Rbn@>?`9.+8!=<s?>Vq)fse8GM84%_^f
%KF*s4T0_#MinOD3D$3g+H^+&L\>L>!1e:r)7[i9RJ$4e8L*Z!$4e+n5Y\E8K:`^4]W)NP@1NFk`1ED?()(M(m8Q;U.[8m3<0o[2W
%.2Z7+**V/4aD+Qk"37-dB,t;U7TUO/F/X9K%54epkJLkE=Nb:8D]&j(A#aJSBb"Ik@F<e?cSCp.0KMAmAo5"sK3H@M,)DqJ60I)7
%82VtD#(3!nZLkG0pPq1:1\AdmnSgEC#9BUT9FS0D^'*_JX_g_hh!&2Y372:Z"H5f#i\Tp06ZD+d&UO1t5iAGX0V%YFK(<2UJa)q6
%k0Z['SifJL_4Y3NXo+]apoj'!?YHb\"K/IJq[1JE9VM+b:Y/3]Wur:kl=!l@>_ZfH6VgW!lnX!:Ie_X2NK)!ZVA=H!]M7c,YsEH$
%/3b!!K'PUP)h%\U%GD*2.d%hmNj4Y8;B/"bY\^SA#Fdd?!:NA:;L9N5V7V$1k9l(=2,@V.i*2Z!'AR<8JS=ePnra4fNh,V,d&`+g
%aXF^s`-U-pj0AqE?:).WDQc"b@*n,^Yu[^`2,UjqG?kf8PoG8^Gp)Z`Rq(Vb7c^DD0P&#X=(Nh^@Kn'5!EC1+$291VhTh`P=cddS
%L%`=5)Y8dpX,2*$o3jY-DqL^5qMEJ$rZ8;+b7cBp$N;Be$Wgkn.=cs,LH]++#Ya^AIm<<Sq:X>c19'`HX-[9#^pA0=\K;mO^L7Pk
%4pkUCL!*nN`XD9RI>R_3^%g,JGD@ig/Gg+5`W&6:-:LS+m2P9geY,A[Jgm]k<^-[G!M0%,8$Q]r]P%T=G+Vhlp4Z<poFgUBa1I6L
%rSfqM:+u1B\u5k*>Qq_np3u-5E.drRT%E\O>qIg.p.q^-s*j&R"g#(Sr]]i>*$5<c/M4c[%"3_Ea@PNhR3:p#\VM#&g91M4;&6\p
%!-P]S1K]\=DE(MJ,.Q]QS8?\?YboK1D'"0MY5EASnTI's;;9lu-GV5d+*n)@8A)V"=MteS.4Org[Z'^njYI!R/1(db>Dtf0jXE?<
%mhM=m-!kaQn_WFL4Ea?K3sAtcOe@MPJjO>R#2,6e7sO$]D.k$L[/-M@0T"SP\Fj)c'hhP>EFUe/`1G.E+^pd0r4TE.LP<(l#L,Wg
%.T0Q4X8dn:(:e=B<IOr&Ln&jNK=t;,m;!rOD[oJBGlp.@nqehg,s?t\*+T0m65B,cSmgJls4@T&O,,n`95$R0X&Kf7Y]0@&i]%6`
%GKriu@6K/1LU*[!m+W`iO*2!OQfNTJHu14;HZ\^4SGgq_.M>o/5J1/.U\=2pG"B!:#p;-ilFfjXf1)Qf:Qd^<<%ZC2PI&(!LQ@OV
%H&G`^l!!R_4"k/JD7%q?3)U21&lm.ZKN>+)"-"mU\M@/kK"gh(/9:6On1=:I%>!@e8O3i/:-bL,A@eTUMkC3]DW+`&(pB6U'\p.$
%fl'Of<:/#pacK%9&bCdEnh*nIL-Z]YZ^ZfJ8Qp\sPpf-clZNRa<6TYA4!H9!G4%sMi2N;aL1YM*U(sMgHRI^.XVBUQe@Rnl1OI^7
%?t1,0asdi9E%r_j-_qG<+a<?7cCV-*86"d:[FV__Z'jK[X-,##[ea8B"`BB:O(>WX%J9M;O'g\5hf#D=\dH!(K!Q=VmAJu[VK(YR
%hf2QfXNrjE!=rD$24=S4mKm:i3[JVsP?=Pl[3A=u]"3ME,1rcLgqO!$F?]jIf]p6HG.C8>UpRULR!Jn_<FSLHGNG6o7[:+ldFo0X
%]cY$FHfQ\O`T_+D=('OdhBJ)akDG29Stk"]P\UaZ$<&H8lu,J;-M5d]X>a%8@#N<i]+U6aAU^o<bjArubX;)jkWtM,O*<kHd\BdH
%QMNdiW((ZJ\M[$j]sK/V63UGA<%')fftkj+WYW9YO+Tr`DUqN_c"JuIlf?<0ko,*[QSp3_Utk%o`L!*WlatE>J*h>;HIprE^t.Qe
%r8LiRZ/L2$mS!0KiTJsf#ljma=,VA0/l/V_[3%3.EnOi).JF\_[4C,)V6%YO^&#`H39.M&Z(B*A.HWnD3kml.aa%9mVH1<6%*\&Y
%`m7_@]Xud,fciWT\lkG?9JAtOH_/=_Dqdi!5$_[P/2`3XXdc%ean.*f=E"DHS"nPp=hZpPbrQ+D:YF@)HDrN]Zt1%U3CsHpMmTgP
%WZ;.YJP1O]jG&,G[,F@=n_(p:Z_k<UDrrZ4F,Dt`N<e[05ZW-PZ#X,$*Lo)f>BVs)-t_@bZ2MCYjYf.Rqu%C^3o2(*AX`e"H$-i<
%)Jbm0cqC.%3TJm5`,f$.mVutgM<u-_q$/TlEu<G@)BedSaDE,b+$dq"p9!6QhU]V5'FOqX!-Ak_&d(q+ASt'R`+M_b5ptD"jm9NL
%2e_-jNm'dEZN*qk.FJX(E&>'XO-i\Jh9esO?&GF#TVC5%]61Vd9JES>=,k".,E['NgC&/s(KaRG#)pEiglNBbJUNuN2F<ERM%esW
%:3[\n6`2Lb[0iZ]78D6&Y9iudR$:B#q]UU?2!KUobIfq1%T=@K^gBu.6!\2M$V@[E]D=+:FIt!/LnYB-_"0Ys!kJ+4hW'e`Udbl'
%?#c7iCmsUITQ6i*'tC7b\[2gO/M..!#QJ`NAn<6oHZ16!1GdKFcQ.`Z_,=bCHI4MNVFmnl1\0cl"0h1%-g7recOiG,.::m/F5FX^
%^bli<.r<&C[r;ui"_UgF7Gr4P0/&$k?Ps"]:hH=BWu\"@#O5;hh`p.%_o9sd+[kC@Xm4egp&LM0r8IN(V'PrcA,LI>`Z[TS1),\K
%81Rmf)c:^>A8K\J5]A1kUH4:t=W$&OrSPq%hn"1tZ])pK*D:J-o%kM5&V]-^)8:dm_K,`sV'pB0]ff+0gH8(S!F0^_=S^tLkc%t"
%-Lci%iYA7='f3o;^,Cd8FLH9-J?-gIghZ9)D7ZmnB_,#0fUT@Gl,>SXP(/,P[%'.4/0gQMdD/m2Ub1?SQE*PCTCN#qZ%#?@L:-F>
%8J*!`D+jF&kRfp6NGe?hUR3!.&i?WaBH^\LD.]U`60J3E/mZnnK50h0hiT6FQ,2!&IRA)!,uHS3ZVs3_L?H#"2^[`n]4Pe7(Z'!s
%C+dK-7Zd3C`X35VbE426r8o7Qf,37N]?\luZ';c6Wlb&e1Tag"'#BL\B@ON<"]Uh)1D[D3S@'f:O'uRNOeW%:Vo/Qgq]iheGqNHs
%@blYg5l:hf0(XJ*l40*I^>k\_bOr=2aBg(+8s5IUN,/B;fctM]bP&\PBub5!i*M_jKL-u?*H847J;8-tRBDZ)!<$_2qgF&F`@ZPt
%TLi73\@59tCNVL"q$Kp.EoDt%pk6U-':#X%B1+I9R/]CHMUX'Q[3Ao?1<Ss:`%:U*gF9=@bV>>C(/h4_SIkYQN!s,*`Bna.)0a#^
%Q_M%(mIMX!f<'P&<;?iH.^.uRiRotFSm]g8#@M@/"t3J+I('pumbjSu-?Qk"CAG>Tq3o,rN>^9iV[e,uaCiKga'6=\Ibbb'H7**?
%isJmnfEk[8i#T&3nH`4sgdSbV*jTHHS_B\ZM]7_=7:StHa#mf3bc>M#&IUY*PKo`E4X_2J*d1J[Gm2R(B>id=[YP+&&f%_oYlNul
%q[p)HL\U""/GS]AQg*:tAoL'Pc,u-^h%:$rieTRp7kF)Y\g&!8dtGKl&W>dc_Vad;"[Hpt'<c)pVXa&6=!2890$b37\A:75n\dRs
%EJ"k,G_.;Ld6*3SgD-p-5Fg9f">'>@SicHL^a1IE4^RXueD_4fBgTPI`@ITP.1RHiMWU^8hsP^m.:f/0iP[6C:R\%f^uH/#3grp$
%i:..b/Yt&Lo#*&_cu"I*ZZnpn:8*)i.sMr5LndAJU*CP&8[\28"`"?T<+o)L_SMB[Bd(>.0Z$foCVbmW3/(,3Jo7'\&D?Tg+A\Yq
%EGn\N.JNS-?j1:MX!`h]_$XM*6RIWp/!,sf9/l99,iGLY9da$Dj2?*9'<K!\e0#@mBZ1WIiJK#NnHo]jY5/g8^`;W?`:_&!R.f0s
%9]lEa/5BAh0,FQpgM>4Z!=RIi6o'FbZFr`Sk6*??r2n'eIf^Dan6)<4"]Y77)$M(c^tY^d:V[#<,.5K7pOEF[C<@NWJ41ifD`A(J
%@*uUlkI2sN_0r^*`UJZeM5^t8:.-Y#("<r>n;'N>,2$mY^uCNYO+>3[8PZqX^@`[VEJ&JJiesl/&[.j)jko-Z=$S`+"3MipET;8U
%il2_:TR_Fu=0uPurS(Ph!dKX!(6;P(6Vhja(&'@enVS^\nV[$Jde%bf^0k-L<"Z<IbD:8Sh4>Af\eQH7]E3u9S2)Zk]E2um&L2P5
%iY%(q?30&r;jSH^$:r;[q>VM>\4#G8=+IGh+"k?b=('K]K?5WOJYV\jU52lUdcV4G+:Uc<<#2XHNnk"Ci0SV?,u1rOma`/aYo^'`
%YuC@=KIa38pBXhs@4VaQ=L`r`ILe1eMcX;#F2U.8]Rj-t4n;,p??,B)'<cY4-XQ>^Yu&*-/Sjcn>nK<Yro=Zp\FDXe!Bd;J4Bul%
%4Mhic<@tul=0uhp`S^*&"gjm9TSG&%T"U&8iIi^Bl$e>5\,plM;H4oGJ^<NOL<o0@@lL?(e&)nsf#A-0-Ats`[ru<>Sp1G4E=S9B
%O&pjsU'+>MX:H"MCOd)$^`KG:([9lcr,*#3^r$mD:MN!0i<gRpGutG+>QN1rp*X*bCHZmO!hX<5kF[M[kVfNJJ>C(9oVrA,.)H_N
%X`D8nfHGSE3K/.&qsO>:>QH-:,3h(SDHnO;KcQBA#&f^i`ku<gk]BnHA:dG5Zs=3+l,LVO,+[W'bsX'Na7u#qJ4C1M\]FtnD:qe#
%gsCLj#spG99Q./'9E_9C0fPNqY9!9^@57k%Oo4;f'>PN/WFdnKJ*NCp<8r(GY0CS<:d[:?gJ%?^h)5p(^*k^URgD<W_PFE(38'+A
%*NKMA<^)ih9q>\pa4t:<YhN]7^htl4=;X^Bm+=rVD<a`T?h*GC*ap_l_'ECX0pjq<Y`QH4oGlBi-=DVfk86nNP%p+smKO?JMh90n
%%46D>,$Y!_9\@t]0X@+_`0eN,j5(4l\qk]8;.2/PG,s.IUs*4u@kO$;&Mo?%<G=`5G?IU$b#^6SC"j/J].>:.9'1)g*KpdGSE-<$
%-HM,\'NAs,%5du\r8_)aKC+:4&QJW^eII;X7#aN7hISJ06ZREFVJTf3gV[Pgj`qPc?R?H[C6?=WP6jCMM@R!eV?_@69FkATe$c!Z
%D\&$<pMQ4[LW+r+<6shn()*7I&]ZL&'t+q?4tJ&UK"X;.=A6pVYB&aJ@RBKu<g`B^Qr"\`PeJ],Brd`HD)%^gGfd%s/>d!=hes$`
%Bj&gCgV[K(-60b5=\Q##@d3j#b@6'@Qb3#]h-tsCVHE"u0i=UU]b2(oATrDUR4cVX0U])5jOd0#[21aM%Gj"l(O,&[AjS)"il\aT
%KOQ^ai86HANScYCNQYoX<hmC`N$a'a6b/1'i%5cGgh7n1BWp/apFff1dh?no$#_2go<=X]T*NWjZ'e-HWb:-u@`C_Ci$K,eK%V?5
%.nh:qd7!WJ9r:Q3*g6o+0f_\j=kHE,@N9aACo0j-?8g7>-DH:;[";?H17:u,5*_H^S*>a$Vp2SE@u"PNSWe789s?@)F6><I<b.%m
%7ak7bgtQL'-gtJ#iJjC\+H.Y;`gp,%lUDO'2[(Gm0q'ebN4^j5Y-!/3VC-VIVD$5KN$ak:aO3%+dll,r1YqhC1BEhX/<$HQiaF[+
%qC'-5RRkO7`M[T1T`R:ZkXH6:;tUk9UM5:k5?Jo]BL3_\dX0&K69<.g5/nTl\sLeI_@SY$NmY4!I\FEVb@k)1Zg-:^1grW1aJEpP
%$1F?Zj]Yb\fEA*Ae#as_N3CUXb\G#?CI*,nX<sHXO&I.$WO)+\,a"SHFK7U7eV*B<rq!@_!0/2bQPr(`WS_PM>rTs3R]o;jeDdVO
%o!\G0[$a25d#+P/*ML6?ml9$Ho2RG?KX:.*$#JJn14a(GNu2*/A0$2A"B4grjWIA1COUJT>m6GYZVq)jejYIQ.Abs:F3^;FB"7Cq
%$2)a[bs:o%,%faV:g>\#Js*%QPk"=G?`Sfk!)a5Okc0(,W2aXL4!53s_Zu"-a%PhWdup0)o@YlE@u5M`V<^t8pb_EA-O<^-]aYAL
%=-b:Vj%+?g(4Jt/#\NP7TU9"t*<Sg`=foQ2.[*JYBefZ'KL:L?28D1o<q-[92j5e^mMu_u]*D*NT]-L.+PLU6n%c:ff/lI97bEjo
%B,teJh]+g^98U496/?01^kGuC'<]Q>Y!oD<Z7!7U+#djX*-O$o`aqU[TZI3q[r(=M%N9%!2T#6!N[tq*_lYJ3>k;e>j*7:?;](hL
%n9fJ8<QKneUoZnOhZsj\[&;Xkcr!<[pKMR,b0Dr.o_5plRXqL"\JaZS3/"HJ"c+LWA]QZ[==e_)*;:@+6<uTB?S'65>dQN:JAh1f
%:-SBE72gsUB$-"EcH-6a=LHZ)"/)90gMai-mkd\@dR<Md-PjdlOP!f\C';s:ROlZEetr`nW\(cl8Z?VEIA5=jB`>4`H4M[]1p@sK
%^nnu@ERLZQ0rl>S@SKLu0E2/:Lt;;<5re5XpplW3#)rtO3C6:iq))Y@]Pr)E+A](TT0a'#-B`U;IL/'[*nLgj,JLK7p%4#&dL,E-
%*T2t;`A.6mKj4)Qe;lo5?ERc2,I26RUJ2"Id>qX>Y4$M4@td8-UkM%j@?>'Iar)^-';9dgg.;:@h;,V9^cd-?7@L#c"LE[bXdF'5
%J+WYLGTiuj"WoGaG'sR##64#+m(Y^H$9-9gKB:=<oNph9K@O[+iA!TTlL+Q$_B!Yk$gi]?I)ggTjFR%&q8q>pJ&dqps8M3#M>W3U
%G%pSe+P;klTH0=FE+t5D<nm:W.pVhtn!4>$`g7>`XAE:A-$b'r\D.Pc7+@W"Z<"F=/f\:H@uYQBdNG#.HEON&"-rD5W-BSHe`&/2
%J?OBi4Z'1k'@e?aL,JPBM<^Q*@"bm!b0Ah;LF]qTb!0%^<>lu/;&nBN^RWMPdi=eke^%t_2?u=7Q4psp>4@:uBl(*nl$t9sjrBo\
%Gsk8\P@;]/a1#S?%A8me+)C$+1uSk$<0q@^#G+nhn?C:%).?!^`qJF<`J_N@<(mt^mkB;&mDY$A"5"<?f@pGkBc&oV04.t<,NY*>
%3]8W-!cCcR=bA`7OZdFU[p0N)+q^-TAa@__be5Zn/;:p&@J(bq2sts9Y^^&Qoq:ru_k/OZ1`)&NZ>2]9'+/tiO-_(>miIM>Z?=CR
%[^H::L05$(WQA9F[,A+X,6903`";ZgKaY(RI.B6r&1tmn!jG22/pVeQKGJ]7mOf]NK>Pga#bPK2.a9?t7m&o/4Ejusm.FsemcQU^
%fl^O1'A7TV4h/]+Fm1D;EU7'R`90iN^HGgQ/QEpYkng9Z?@Z2;,]"di"TiRPTG)(_%P!(\>hZ+\<0ULiSS*2_=6:7l!l]F)NB;)O
%;NAqZh%r9Q6m\0"nGcV1-GUZ[b,iI/#Su3c<Vc"V\U&M.m$=-kJqjPnN6?n/bjlks9"J0#nKRHg'c2Y27,$$H<u_A-.M6YoYnr9T
%>]i0p:^.lnFEZFUV@kJ5o]NWS5UIF]o1\oMkE][D8NWq3BWBZj$?EBo&];n.iSO/4jBtQ-bQ+3Jl[1mbXP^*fCgliD14&Vedia%m
%VuA;R<F/Guq)Eb@Fjo)o*E3.f7_=\KP4)8%[5>[ZT!m4>qDr54bL.c^oO>^=.*^3\o/Me?]S0Qm$op;2,96F3`A>.hdHnY+U[.7$
%m;$Y19WPGq61YT-iL@:STpDJAR+;P#Yd.BI#>k?upo@cV2N;r;JiY2dRGAC/8TL\),O1(DC]3%[U,%D0CW.$ur$!%WX5CWO1@*F;
%J>fOD0Qm!8eQIKQa6V5oc:>6AW1t>81Nt+qOcdiZP+JBXIuuf-kIGbem$[aEA!W0qBgf!]&F+?FGDY]>Om,)48giq5A-;71g@,:_
%62]AM%L/Ve2l&<REh<nqpOab?@d</$7kdH;Co2A)Ua]48=Is$fHOK[]lc]/*iD#H9HK(plr:Vh?Ubq05bJh'b`3!/p_;bd+%maE0
%W$r$73lD#mG"kXfI$c%o.]U3<c$m;CD\F^RVV!;!)"[>T?Kf`ZQ5's8[%)Z;,1M&Eq?WZ''W4tMR<(dM.JWEbpYl)t,cmuXFcOpd
%3I.s4f<'6(1R!5eJi*_`0M.aMKIQK/i@O$-Ae3I@9;J!!b&8<T0nX$pLd$>rcHLNTXL7+kKM'?D*In)ekVQFgdp=0<fqXqdceGmF
%A70>e&h_gaGi(a'eo."M*(o$**Z-l3(op?\>ligp(1`VAK"A-=!On&JdKT)WB8#8QI`et`F&3H1HnO4j(TBugk$*#-iQ)FDDdi*k
%#$G*7cWtM]<:%_B_rY%CiYjFsX^03[<42Dg3ZS<(>X0Qkqr&bZh&[&HkE,e2ibZ1YK)t&Gaqb?6!$Qi!?aqXooppkc4LuJU3.p-R
%Nf39U3Wl4U\?(mId6l.'TVQ(r]LsTt0RAjKiB$1]mTQQF>c,roP:KK^ef+k=WNM:H@LhGq26ct,)Gut/"!OX"^r3\h7P!d9$S\u]
%Zg&<dQn/nP_VE5sbTSFrM9e6]iJ<h;o9('V/9#f78`F'fa:ump&\L@T)@LVp.@@0gb$61@'8bc#,,f/tZC&dVOem_h7qU2W_O"Wi
%I(0jAR0Z<+&O\?2iZgk:</n*Ql-3f,U^T)+bt7n;<G/].f\g/KHt.;KHJ<fIXWIJqVALKS^Y%kc`in(`H\#I*9MrM$!`_+9Q`-p@
%>c2*5F9M4iXj#X%#5QNYE`<Ap2+iA%(bQ+0=9cK3F=T?l4C2D5=Wjd2CkNG'eY?=p5h1K@+cX$!WuUR@ll9S<!Uo!_E-;G9Vs0eX
%3^0c]M>`)D[kjZp2:6BF3nU0H21#ABhg:8JKHsXia^u-8D<kJ8/#uij#PB)^::lKBfY1j4&a@NiAS)W/H:1gZ>e"kM"5L^(B3?#f
%22+t`!H/Fo%tVhV0gtMUG-"m>ri&!$%=!dR1fNQHoX7Hg2J#HtcR@gWb-(g#U.`_34iDWAfo;ke=TKe6&h9>)dFPP&AlTIOg[TG@
%Fh]KN.cl+7KY.Q!JD36)""\7j-PGVT::uRdYSqiZMBpkJ19K$+(*2+7&S^bT6PfOqFqUHT3leU?eLW=6Sc_qPnRF'LGOtTmXt/9O
%%/P1_]S]oM8H,gE*(kOgQlfcKq2,s]ItFK`dKkD:^8JZ4MO/<B1r)OG7$7OuLR'0]hq9QR?&Tb)j^-@Z:7gqrjdZUe2%aN+i5&$O
%lhSe7bD@#2b+V:L?s04`KI3Q#Ue0BZASM.b1R`JZM@o-B'#C=f\WEQqaNK=ZP(Gt2o=BHW<[c6#m]Lls)AAbPpLY3AB4SB7C^95+
%7^ol4%X4LTlNPT.6#X%Bi)LOG.sC;,(ag;<3S7I#^7mXr4f+tK"`YDXX]jq[>P2:X]Ep*upg7.jo5&$HM+2)e1!^O:f*L-\nu1\5
%<4ETq^cO1F)R7N<S`/j6WEUkBG09lZc5ggB[)J6Qh3$@Rk6W37W#-_N[@9IU]/%b.Y-jg\5laF%U!X8;1pG2_L]M%F22d:&fiD\=
%(?:O&JqlPR`iJq.hSEbKmSApFVA.'plgmL\rsLT0dVjX0&&8/#q!Hu:gY`"u^]+4Vs'(mUJ,B)WQSQ.76'dUQ%VK<]W;-$ofEDNi
%?5!;4GCRJjjV#84i;S<Ef3%ue0]*09rf23_2#@28cED2+^c0Ra7=V;)s#U,r-X$#c?c*uW]Z0a^?L1=4RcgmD1X<mBONCupm]"kP
%:<U0B2!"tfoJtm)CnBJ:U(T#P$DcZh9[M(g+cq$]7*JC>qfpb7ZnVs3bXK-rY/TK#@=R0oDB(VkW0jB;D?m<l:F=Vn:LFVlGiS!'
%35&\9oIN_HgT3J=[u([5HIW>ACodQL#/0Z7lPDap5o1PDrgc&;i.it[fXHN`rrR,dV;f@MYseGT0`;:FG'8ij-b":5')9@7OQ=(r
%*i;dOaBBSDlLkK"j)@nn5_%Uun7CEMYRk,EMtd9^;43`>(6)Qa+8TlOkgu2AWtl].Rnk8^A&4tbf%0OPZLK?t2VTRV"mY2]0l,ir
%R%8N0'$6;#o?j'F)9Na/I#bUF_Wpa6PX#!s\ZffdSKGU+?B5M<IR,cKi;!O8jNi#icJQ"hMsL(^iZjt$_JSbpI0)q3d[)s2ZSgb3
%"\^suqr6Ij(I;bN+I#Yg0I+Hd!%O,#c+8WCPUd=XCb#S(/#7>uqH3A"]g"#K#Y)4p-8p+mQ$s,N0O1%,4![%)fD=(*`[?k+rp`u,
%._85s%u\P?NT0Ts(OjQIOs86;Q[$5.g-*`bn7)@<KX8paDd@F+UNsj72<erJ;A@H+*/GD)O4NpUC>KgM[8M2ueQN4RJWPene6l9G
%=N1CP"Z[)^+KjrfYaUOLn.>_OX:]!c(K][W,E;(Jc6p8,k_rmTgS2p8;Bj=/n;"3Ep`ZeqF$t>OOX,;&OeeUYDd!Us4jei_/U<,7
%CX76kg(t^mj1Q0-DT/Hc_qXXXj0++0^^4WA`%nq3mKu(R/+10S?uYAna."!(]tb2Ic&.RST]bcZKF?,W7M<U^8Ob%rg(\/J;R87F
%%t=o]!\)9+QkjVgoA#;B(AQA(p$P,lLSs7S4O:p(FAs9P%j)taA=:lSOd8karAFMX+g5m7NO-0tE:Ru5>7I4#_JYF<qS!,^gil3'
%V-::aR!ST"*G6"qYHHSlircUu3l(0Zq[elm'dmQ\ANWA\Bh;lhbtX&?]<BFtNsgp8j4E)bX;k[#W:U"fCC9:mfur,tBB2#@c12fS
%YP[@:ZP1i0e7uSSEsa>`*G:GPI#Ci0q2>'8npm@9_@uhZLH&6K4Zk7r;T#Z60B%clk-.pG:e-k^.q[!i5J2+os(XLjq!&Io3P@5N
%,=%;ZVoJ!a_l_,rAJF4h4r:4nlg#!I@aX/r]O5OA>#0/s5-?]%NbCMi`3SUK0Z&#i]0,m(&gWEdApmn1@DH*_$KR<R`H(k8cFEE!
%I)7k7-hbK@mk>eBVcT_3Aud?YE\SY+[%]r4A2&p+IQCfYe7,t*Jd(WXHY+;bnHn9q'rrXn=NonfXNTA]*/[>R+9%T#j_sAfkk*5j
%["mlsZRle^"b-7CeWK0WIt,LA358s/;]9$&D2)(]r&Hq4D`=-^cg1Dg->t?eVr3Mb'(`$]UPC/USXdKZkqqg)*Ju7"MtGVIFVY(a
%VcS7DNu>cpRO(84g%#g;F?Y)*^`U11LE?@$psoc?;1=38l`D=8rA^Ld=YFpEM2kE$h#6,n.<<!gf-)D>SiDpYQIC\.n$PH\0q@0#
%XS05qmENb%oiV1]^\D"$D@,CAHL&D&>67YNDaj\.[3pFY&r:aW0?W=@!/]bH2iZ_/TUYS"Lkf19baWI/:CjLQc1+F`2iA,-NX7D)
%f!q@Nn@'#BO5lUPK#]Tcj5HB`YTZrh0nCe?0E[AG!qYgVl'VN=B5CXn9Y<&jV`Yq4mIYUM3%!MOE(o&33$oKU>]7=\I#CtY%;NoK
%#nn7QY]0LQ,UXZhMN2$F1o`?j-21&_L,Fag@t"_\]6\P0LL1,KgQ1_DIYl(e<5%%[8FL]6\JcB,\`VpWr6Xa$F0ae6ePR=$"G3Qs
%7+Lg#0]>.dCi`8)7n.BQ)nXo=?Q?6s)&[*ugo.mA&iY9O*u]?7rsJ414PUZpU:^ldnOl!\j-Y)Nm[536X_-aV$%@H8KT9ODS&WX.
%Nai-G?-5r&)t4Kc2#cu<i%mE<`:Yec,ti;ucNJH:9_PtC(gsO!?6VCpmBst%ReU@N^N<1(K)E,W7"(>\(\SK&0WRf*$-r:57q$i(
%TUHk3Tm6fkpRa#^btlZL^oEI!n0KCG*XCpSZ[OW(3NrIuF!OUFh?tLHonC:(.J.b9*5mX-rq3S1?Tc"jWo_.]F5r<!5b4r_bj<1g
%DfUj//,],:FS96noD,'QaTKLPJ2"7li<SB!,N$:aoD*Lkj7#pjkJK(En]BsH7-?VfHp3@:Nr8&2\\[%`F5r<=U'^EoJ%tO.kB#\B
%o-#&>J+NK?N\5bRq4LOVmc2d6ea"j*k6'irn)*X(q2f<f^%m&IHcCIt?YlO!^D[CT"h+*mn,NC]^\bp`qiC^Es5osQiVT8Hhk0r>
%mFr$D_ghO35Q:ICs5d&Vj+%((0>IPC5Q8iurm.3dqpRe.dm*luTDnN0s6K?MIf%1#r:s_!oq29TkMQ:#^]3p*"bJsr5PW,<roS/!
%_s`*LrrIsVM9#~>
%AI9_PrivateDataEnd
